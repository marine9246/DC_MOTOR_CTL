

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Jun 30 14:23:34 2022

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F1778
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    85                           	dabs	1,0x7E,2
    86  0000                     
    87                           ; Version 2.20
    88                           ; Generated 12/02/2020 GMT
    89                           ; 
    90                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC16F1778 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001C                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0090                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0095                     	;# 
   163  0096                     	;# 
   164  0097                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009A                     	;# 
   168  009B                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  0111                     	;# 
   177  0112                     	;# 
   178  0113                     	;# 
   179  0114                     	;# 
   180  0115                     	;# 
   181  0116                     	;# 
   182  0117                     	;# 
   183  0118                     	;# 
   184  0119                     	;# 
   185  011A                     	;# 
   186  011B                     	;# 
   187  011C                     	;# 
   188  011D                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  018E                     	;# 
   192  0191                     	;# 
   193  0191                     	;# 
   194  0192                     	;# 
   195  0193                     	;# 
   196  0193                     	;# 
   197  0194                     	;# 
   198  0195                     	;# 
   199  0196                     	;# 
   200  0197                     	;# 
   201  0199                     	;# 
   202  0199                     	;# 
   203  0199                     	;# 
   204  019A                     	;# 
   205  019A                     	;# 
   206  019A                     	;# 
   207  019B                     	;# 
   208  019B                     	;# 
   209  019B                     	;# 
   210  019B                     	;# 
   211  019B                     	;# 
   212  019C                     	;# 
   213  019C                     	;# 
   214  019C                     	;# 
   215  019D                     	;# 
   216  019D                     	;# 
   217  019D                     	;# 
   218  019E                     	;# 
   219  019E                     	;# 
   220  019E                     	;# 
   221  019F                     	;# 
   222  019F                     	;# 
   223  019F                     	;# 
   224  019F                     	;# 
   225  019F                     	;# 
   226  020C                     	;# 
   227  020D                     	;# 
   228  020E                     	;# 
   229  0210                     	;# 
   230  0211                     	;# 
   231  0211                     	;# 
   232  0212                     	;# 
   233  0212                     	;# 
   234  0213                     	;# 
   235  0213                     	;# 
   236  0214                     	;# 
   237  0214                     	;# 
   238  0215                     	;# 
   239  0215                     	;# 
   240  0215                     	;# 
   241  0215                     	;# 
   242  0216                     	;# 
   243  0216                     	;# 
   244  0217                     	;# 
   245  0217                     	;# 
   246  021B                     	;# 
   247  021C                     	;# 
   248  021D                     	;# 
   249  021E                     	;# 
   250  021F                     	;# 
   251  028C                     	;# 
   252  028D                     	;# 
   253  028E                     	;# 
   254  0291                     	;# 
   255  0291                     	;# 
   256  0292                     	;# 
   257  0293                     	;# 
   258  0294                     	;# 
   259  0295                     	;# 
   260  0295                     	;# 
   261  0296                     	;# 
   262  0297                     	;# 
   263  0298                     	;# 
   264  0299                     	;# 
   265  0299                     	;# 
   266  029A                     	;# 
   267  029B                     	;# 
   268  029C                     	;# 
   269  029E                     	;# 
   270  029F                     	;# 
   271  030C                     	;# 
   272  030D                     	;# 
   273  030E                     	;# 
   274  0315                     	;# 
   275  0316                     	;# 
   276  0317                     	;# 
   277  0318                     	;# 
   278  0319                     	;# 
   279  031B                     	;# 
   280  031C                     	;# 
   281  031D                     	;# 
   282  031E                     	;# 
   283  031F                     	;# 
   284  038C                     	;# 
   285  038D                     	;# 
   286  038E                     	;# 
   287  0390                     	;# 
   288  0391                     	;# 
   289  0392                     	;# 
   290  0393                     	;# 
   291  0394                     	;# 
   292  0395                     	;# 
   293  0396                     	;# 
   294  0397                     	;# 
   295  0398                     	;# 
   296  0399                     	;# 
   297  039D                     	;# 
   298  039E                     	;# 
   299  039F                     	;# 
   300  040D                     	;# 
   301  040F                     	;# 
   302  040F                     	;# 
   303  0410                     	;# 
   304  0411                     	;# 
   305  0412                     	;# 
   306  0413                     	;# 
   307  0413                     	;# 
   308  0414                     	;# 
   309  0414                     	;# 
   310  0415                     	;# 
   311  0416                     	;# 
   312  0417                     	;# 
   313  0418                     	;# 
   314  041A                     	;# 
   315  041A                     	;# 
   316  041B                     	;# 
   317  041B                     	;# 
   318  041C                     	;# 
   319  041D                     	;# 
   320  041E                     	;# 
   321  041F                     	;# 
   322  048E                     	;# 
   323  048E                     	;# 
   324  048F                     	;# 
   325  0490                     	;# 
   326  0491                     	;# 
   327  0492                     	;# 
   328  0493                     	;# 
   329  0493                     	;# 
   330  0494                     	;# 
   331  0494                     	;# 
   332  0495                     	;# 
   333  0496                     	;# 
   334  0497                     	;# 
   335  0498                     	;# 
   336  049A                     	;# 
   337  049A                     	;# 
   338  049B                     	;# 
   339  049B                     	;# 
   340  049C                     	;# 
   341  049D                     	;# 
   342  049E                     	;# 
   343  049F                     	;# 
   344  050F                     	;# 
   345  0510                     	;# 
   346  0511                     	;# 
   347  0512                     	;# 
   348  0513                     	;# 
   349  0514                     	;# 
   350  0515                     	;# 
   351  0516                     	;# 
   352  0517                     	;# 
   353  0518                     	;# 
   354  0519                     	;# 
   355  051A                     	;# 
   356  058D                     	;# 
   357  058E                     	;# 
   358  058F                     	;# 
   359  058F                     	;# 
   360  058F                     	;# 
   361  0590                     	;# 
   362  0590                     	;# 
   363  0591                     	;# 
   364  0592                     	;# 
   365  0592                     	;# 
   366  0592                     	;# 
   367  0593                     	;# 
   368  0593                     	;# 
   369  0594                     	;# 
   370  0595                     	;# 
   371  0595                     	;# 
   372  0596                     	;# 
   373  0597                     	;# 
   374  0597                     	;# 
   375  0598                     	;# 
   376  0599                     	;# 
   377  0599                     	;# 
   378  0599                     	;# 
   379  059A                     	;# 
   380  059A                     	;# 
   381  059E                     	;# 
   382  059F                     	;# 
   383  059F                     	;# 
   384  0614                     	;# 
   385  0614                     	;# 
   386  0615                     	;# 
   387  0616                     	;# 
   388  0617                     	;# 
   389  0617                     	;# 
   390  0618                     	;# 
   391  0619                     	;# 
   392  061A                     	;# 
   393  061A                     	;# 
   394  061B                     	;# 
   395  061C                     	;# 
   396  068D                     	;# 
   397  068E                     	;# 
   398  068F                     	;# 
   399  0690                     	;# 
   400  0691                     	;# 
   401  0692                     	;# 
   402  0693                     	;# 
   403  0694                     	;# 
   404  0695                     	;# 
   405  0696                     	;# 
   406  0697                     	;# 
   407  0698                     	;# 
   408  0699                     	;# 
   409  069A                     	;# 
   410  069B                     	;# 
   411  069C                     	;# 
   412  069D                     	;# 
   413  069E                     	;# 
   414  069F                     	;# 
   415  070D                     	;# 
   416  070E                     	;# 
   417  070F                     	;# 
   418  0710                     	;# 
   419  0711                     	;# 
   420  0712                     	;# 
   421  0713                     	;# 
   422  0714                     	;# 
   423  0715                     	;# 
   424  0716                     	;# 
   425  0717                     	;# 
   426  0718                     	;# 
   427  0719                     	;# 
   428  071A                     	;# 
   429  071B                     	;# 
   430  071C                     	;# 
   431  071D                     	;# 
   432  071E                     	;# 
   433  071F                     	;# 
   434  078E                     	;# 
   435  078F                     	;# 
   436  0790                     	;# 
   437  0791                     	;# 
   438  0792                     	;# 
   439  0793                     	;# 
   440  0794                     	;# 
   441  0795                     	;# 
   442  0796                     	;# 
   443  0797                     	;# 
   444  0798                     	;# 
   445  0799                     	;# 
   446  079A                     	;# 
   447  079B                     	;# 
   448  079C                     	;# 
   449  079D                     	;# 
   450  079E                     	;# 
   451  079F                     	;# 
   452  080D                     	;# 
   453  080E                     	;# 
   454  080F                     	;# 
   455  0810                     	;# 
   456  0811                     	;# 
   457  0812                     	;# 
   458  0813                     	;# 
   459  0814                     	;# 
   460  0815                     	;# 
   461  0816                     	;# 
   462  0817                     	;# 
   463  0818                     	;# 
   464  0819                     	;# 
   465  081A                     	;# 
   466  081B                     	;# 
   467  081C                     	;# 
   468  081D                     	;# 
   469  081E                     	;# 
   470  081F                     	;# 
   471  090C                     	;# 
   472  090D                     	;# 
   473  090E                     	;# 
   474  090F                     	;# 
   475  0910                     	;# 
   476  0911                     	;# 
   477  0912                     	;# 
   478  0913                     	;# 
   479  0914                     	;# 
   480  0915                     	;# 
   481  0916                     	;# 
   482  0917                     	;# 
   483  0D8E                     	;# 
   484  0D8F                     	;# 
   485  0D90                     	;# 
   486  0D91                     	;# 
   487  0D91                     	;# 
   488  0D92                     	;# 
   489  0D93                     	;# 
   490  0D93                     	;# 
   491  0D94                     	;# 
   492  0D95                     	;# 
   493  0D95                     	;# 
   494  0D96                     	;# 
   495  0D97                     	;# 
   496  0D97                     	;# 
   497  0D98                     	;# 
   498  0D99                     	;# 
   499  0D99                     	;# 
   500  0D9A                     	;# 
   501  0D9B                     	;# 
   502  0D9C                     	;# 
   503  0D9C                     	;# 
   504  0D9D                     	;# 
   505  0D9D                     	;# 
   506  0D9E                     	;# 
   507  0D9F                     	;# 
   508  0DA0                     	;# 
   509  0DA1                     	;# 
   510  0DA1                     	;# 
   511  0DA2                     	;# 
   512  0DA3                     	;# 
   513  0DA3                     	;# 
   514  0DA4                     	;# 
   515  0DA5                     	;# 
   516  0DA5                     	;# 
   517  0DA6                     	;# 
   518  0DA7                     	;# 
   519  0DA7                     	;# 
   520  0DA8                     	;# 
   521  0DA9                     	;# 
   522  0DA9                     	;# 
   523  0DAA                     	;# 
   524  0DAB                     	;# 
   525  0DAC                     	;# 
   526  0DAC                     	;# 
   527  0DAD                     	;# 
   528  0DAD                     	;# 
   529  0DAE                     	;# 
   530  0DAF                     	;# 
   531  0DB0                     	;# 
   532  0DB1                     	;# 
   533  0DB1                     	;# 
   534  0DB2                     	;# 
   535  0DB3                     	;# 
   536  0DB3                     	;# 
   537  0DB4                     	;# 
   538  0DB5                     	;# 
   539  0DB5                     	;# 
   540  0DB6                     	;# 
   541  0DB7                     	;# 
   542  0DB7                     	;# 
   543  0DB8                     	;# 
   544  0DB9                     	;# 
   545  0DB9                     	;# 
   546  0DBA                     	;# 
   547  0DBB                     	;# 
   548  0DBC                     	;# 
   549  0DBC                     	;# 
   550  0DBD                     	;# 
   551  0DBD                     	;# 
   552  0DBE                     	;# 
   553  0DBF                     	;# 
   554  0DC0                     	;# 
   555  0E0C                     	;# 
   556  0E0D                     	;# 
   557  0E0E                     	;# 
   558  0E0F                     	;# 
   559  0E10                     	;# 
   560  0E11                     	;# 
   561  0E12                     	;# 
   562  0E13                     	;# 
   563  0E14                     	;# 
   564  0E15                     	;# 
   565  0E15                     	;# 
   566  0E15                     	;# 
   567  0E16                     	;# 
   568  0E16                     	;# 
   569  0E16                     	;# 
   570  0E17                     	;# 
   571  0E17                     	;# 
   572  0E17                     	;# 
   573  0E18                     	;# 
   574  0E18                     	;# 
   575  0E18                     	;# 
   576  0E19                     	;# 
   577  0E1A                     	;# 
   578  0E1B                     	;# 
   579  0E1D                     	;# 
   580  0E1E                     	;# 
   581  0E1F                     	;# 
   582  0E21                     	;# 
   583  0E22                     	;# 
   584  0E23                     	;# 
   585  0E24                     	;# 
   586  0E25                     	;# 
   587  0E26                     	;# 
   588  0E27                     	;# 
   589  0E28                     	;# 
   590  0E29                     	;# 
   591  0E2D                     	;# 
   592  0E2E                     	;# 
   593  0E2F                     	;# 
   594  0E30                     	;# 
   595  0E31                     	;# 
   596  0E32                     	;# 
   597  0E35                     	;# 
   598  0E36                     	;# 
   599  0E37                     	;# 
   600  0E38                     	;# 
   601  0E39                     	;# 
   602  0E3A                     	;# 
   603  0E3B                     	;# 
   604  0E3C                     	;# 
   605  0E3D                     	;# 
   606  0E3E                     	;# 
   607  0E90                     	;# 
   608  0E91                     	;# 
   609  0E92                     	;# 
   610  0E93                     	;# 
   611  0E94                     	;# 
   612  0E95                     	;# 
   613  0E96                     	;# 
   614  0E97                     	;# 
   615  0E98                     	;# 
   616  0E99                     	;# 
   617  0E9A                     	;# 
   618  0E9B                     	;# 
   619  0E9C                     	;# 
   620  0E9D                     	;# 
   621  0E9E                     	;# 
   622  0E9F                     	;# 
   623  0EA0                     	;# 
   624  0EA1                     	;# 
   625  0EA2                     	;# 
   626  0EA3                     	;# 
   627  0EA4                     	;# 
   628  0EA5                     	;# 
   629  0EA6                     	;# 
   630  0EA7                     	;# 
   631  0F0F                     	;# 
   632  0F10                     	;# 
   633  0F11                     	;# 
   634  0F12                     	;# 
   635  0F13                     	;# 
   636  0F14                     	;# 
   637  0F15                     	;# 
   638  0F16                     	;# 
   639  0F17                     	;# 
   640  0F18                     	;# 
   641  0F19                     	;# 
   642  0F1A                     	;# 
   643  0F1B                     	;# 
   644  0F1C                     	;# 
   645  0F1D                     	;# 
   646  0F1E                     	;# 
   647  0F1F                     	;# 
   648  0F20                     	;# 
   649  0F21                     	;# 
   650  0F22                     	;# 
   651  0F23                     	;# 
   652  0F24                     	;# 
   653  0F25                     	;# 
   654  0F26                     	;# 
   655  0F27                     	;# 
   656  0F28                     	;# 
   657  0F29                     	;# 
   658  0F2A                     	;# 
   659  0F2B                     	;# 
   660  0F2C                     	;# 
   661  0F2D                     	;# 
   662  0F2E                     	;# 
   663  0F2F                     	;# 
   664  0F30                     	;# 
   665  0F31                     	;# 
   666  0F32                     	;# 
   667  0F33                     	;# 
   668  0F34                     	;# 
   669  0F35                     	;# 
   670  0F36                     	;# 
   671  0F37                     	;# 
   672  0FE4                     	;# 
   673  0FE5                     	;# 
   674  0FE6                     	;# 
   675  0FE7                     	;# 
   676  0FE8                     	;# 
   677  0FE9                     	;# 
   678  0FEA                     	;# 
   679  0FEB                     	;# 
   680  0FED                     	;# 
   681  0FEE                     	;# 
   682  0FEF                     	;# 
   683  0000                     	;# 
   684  0001                     	;# 
   685  0002                     	;# 
   686  0003                     	;# 
   687  0004                     	;# 
   688  0005                     	;# 
   689  0006                     	;# 
   690  0007                     	;# 
   691  0008                     	;# 
   692  0009                     	;# 
   693  000A                     	;# 
   694  000B                     	;# 
   695  000C                     	;# 
   696  000D                     	;# 
   697  000E                     	;# 
   698  0010                     	;# 
   699  0011                     	;# 
   700  0012                     	;# 
   701  0013                     	;# 
   702  0014                     	;# 
   703  0015                     	;# 
   704  0016                     	;# 
   705  0017                     	;# 
   706  0018                     	;# 
   707  0018                     	;# 
   708  0019                     	;# 
   709  001A                     	;# 
   710  001B                     	;# 
   711  001C                     	;# 
   712  001C                     	;# 
   713  001D                     	;# 
   714  001E                     	;# 
   715  001F                     	;# 
   716  008C                     	;# 
   717  008D                     	;# 
   718  008E                     	;# 
   719  0090                     	;# 
   720  0091                     	;# 
   721  0092                     	;# 
   722  0093                     	;# 
   723  0094                     	;# 
   724  0095                     	;# 
   725  0096                     	;# 
   726  0097                     	;# 
   727  0098                     	;# 
   728  0099                     	;# 
   729  009A                     	;# 
   730  009B                     	;# 
   731  009C                     	;# 
   732  009D                     	;# 
   733  009E                     	;# 
   734  009F                     	;# 
   735  010C                     	;# 
   736  010D                     	;# 
   737  010E                     	;# 
   738  0111                     	;# 
   739  0112                     	;# 
   740  0113                     	;# 
   741  0114                     	;# 
   742  0115                     	;# 
   743  0116                     	;# 
   744  0117                     	;# 
   745  0118                     	;# 
   746  0119                     	;# 
   747  011A                     	;# 
   748  011B                     	;# 
   749  011C                     	;# 
   750  011D                     	;# 
   751  018C                     	;# 
   752  018D                     	;# 
   753  018E                     	;# 
   754  0191                     	;# 
   755  0191                     	;# 
   756  0192                     	;# 
   757  0193                     	;# 
   758  0193                     	;# 
   759  0194                     	;# 
   760  0195                     	;# 
   761  0196                     	;# 
   762  0197                     	;# 
   763  0199                     	;# 
   764  0199                     	;# 
   765  0199                     	;# 
   766  019A                     	;# 
   767  019A                     	;# 
   768  019A                     	;# 
   769  019B                     	;# 
   770  019B                     	;# 
   771  019B                     	;# 
   772  019B                     	;# 
   773  019B                     	;# 
   774  019C                     	;# 
   775  019C                     	;# 
   776  019C                     	;# 
   777  019D                     	;# 
   778  019D                     	;# 
   779  019D                     	;# 
   780  019E                     	;# 
   781  019E                     	;# 
   782  019E                     	;# 
   783  019F                     	;# 
   784  019F                     	;# 
   785  019F                     	;# 
   786  019F                     	;# 
   787  019F                     	;# 
   788  020C                     	;# 
   789  020D                     	;# 
   790  020E                     	;# 
   791  0210                     	;# 
   792  0211                     	;# 
   793  0211                     	;# 
   794  0212                     	;# 
   795  0212                     	;# 
   796  0213                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0214                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0216                     	;# 
   805  0216                     	;# 
   806  0217                     	;# 
   807  0217                     	;# 
   808  021B                     	;# 
   809  021C                     	;# 
   810  021D                     	;# 
   811  021E                     	;# 
   812  021F                     	;# 
   813  028C                     	;# 
   814  028D                     	;# 
   815  028E                     	;# 
   816  0291                     	;# 
   817  0291                     	;# 
   818  0292                     	;# 
   819  0293                     	;# 
   820  0294                     	;# 
   821  0295                     	;# 
   822  0295                     	;# 
   823  0296                     	;# 
   824  0297                     	;# 
   825  0298                     	;# 
   826  0299                     	;# 
   827  0299                     	;# 
   828  029A                     	;# 
   829  029B                     	;# 
   830  029C                     	;# 
   831  029E                     	;# 
   832  029F                     	;# 
   833  030C                     	;# 
   834  030D                     	;# 
   835  030E                     	;# 
   836  0315                     	;# 
   837  0316                     	;# 
   838  0317                     	;# 
   839  0318                     	;# 
   840  0319                     	;# 
   841  031B                     	;# 
   842  031C                     	;# 
   843  031D                     	;# 
   844  031E                     	;# 
   845  031F                     	;# 
   846  038C                     	;# 
   847  038D                     	;# 
   848  038E                     	;# 
   849  0390                     	;# 
   850  0391                     	;# 
   851  0392                     	;# 
   852  0393                     	;# 
   853  0394                     	;# 
   854  0395                     	;# 
   855  0396                     	;# 
   856  0397                     	;# 
   857  0398                     	;# 
   858  0399                     	;# 
   859  039D                     	;# 
   860  039E                     	;# 
   861  039F                     	;# 
   862  040D                     	;# 
   863  040F                     	;# 
   864  040F                     	;# 
   865  0410                     	;# 
   866  0411                     	;# 
   867  0412                     	;# 
   868  0413                     	;# 
   869  0413                     	;# 
   870  0414                     	;# 
   871  0414                     	;# 
   872  0415                     	;# 
   873  0416                     	;# 
   874  0417                     	;# 
   875  0418                     	;# 
   876  041A                     	;# 
   877  041A                     	;# 
   878  041B                     	;# 
   879  041B                     	;# 
   880  041C                     	;# 
   881  041D                     	;# 
   882  041E                     	;# 
   883  041F                     	;# 
   884  048E                     	;# 
   885  048E                     	;# 
   886  048F                     	;# 
   887  0490                     	;# 
   888  0491                     	;# 
   889  0492                     	;# 
   890  0493                     	;# 
   891  0493                     	;# 
   892  0494                     	;# 
   893  0494                     	;# 
   894  0495                     	;# 
   895  0496                     	;# 
   896  0497                     	;# 
   897  0498                     	;# 
   898  049A                     	;# 
   899  049A                     	;# 
   900  049B                     	;# 
   901  049B                     	;# 
   902  049C                     	;# 
   903  049D                     	;# 
   904  049E                     	;# 
   905  049F                     	;# 
   906  050F                     	;# 
   907  0510                     	;# 
   908  0511                     	;# 
   909  0512                     	;# 
   910  0513                     	;# 
   911  0514                     	;# 
   912  0515                     	;# 
   913  0516                     	;# 
   914  0517                     	;# 
   915  0518                     	;# 
   916  0519                     	;# 
   917  051A                     	;# 
   918  058D                     	;# 
   919  058E                     	;# 
   920  058F                     	;# 
   921  058F                     	;# 
   922  058F                     	;# 
   923  0590                     	;# 
   924  0590                     	;# 
   925  0591                     	;# 
   926  0592                     	;# 
   927  0592                     	;# 
   928  0592                     	;# 
   929  0593                     	;# 
   930  0593                     	;# 
   931  0594                     	;# 
   932  0595                     	;# 
   933  0595                     	;# 
   934  0596                     	;# 
   935  0597                     	;# 
   936  0597                     	;# 
   937  0598                     	;# 
   938  0599                     	;# 
   939  0599                     	;# 
   940  0599                     	;# 
   941  059A                     	;# 
   942  059A                     	;# 
   943  059E                     	;# 
   944  059F                     	;# 
   945  059F                     	;# 
   946  0614                     	;# 
   947  0614                     	;# 
   948  0615                     	;# 
   949  0616                     	;# 
   950  0617                     	;# 
   951  0617                     	;# 
   952  0618                     	;# 
   953  0619                     	;# 
   954  061A                     	;# 
   955  061A                     	;# 
   956  061B                     	;# 
   957  061C                     	;# 
   958  068D                     	;# 
   959  068E                     	;# 
   960  068F                     	;# 
   961  0690                     	;# 
   962  0691                     	;# 
   963  0692                     	;# 
   964  0693                     	;# 
   965  0694                     	;# 
   966  0695                     	;# 
   967  0696                     	;# 
   968  0697                     	;# 
   969  0698                     	;# 
   970  0699                     	;# 
   971  069A                     	;# 
   972  069B                     	;# 
   973  069C                     	;# 
   974  069D                     	;# 
   975  069E                     	;# 
   976  069F                     	;# 
   977  070D                     	;# 
   978  070E                     	;# 
   979  070F                     	;# 
   980  0710                     	;# 
   981  0711                     	;# 
   982  0712                     	;# 
   983  0713                     	;# 
   984  0714                     	;# 
   985  0715                     	;# 
   986  0716                     	;# 
   987  0717                     	;# 
   988  0718                     	;# 
   989  0719                     	;# 
   990  071A                     	;# 
   991  071B                     	;# 
   992  071C                     	;# 
   993  071D                     	;# 
   994  071E                     	;# 
   995  071F                     	;# 
   996  078E                     	;# 
   997  078F                     	;# 
   998  0790                     	;# 
   999  0791                     	;# 
  1000  0792                     	;# 
  1001  0793                     	;# 
  1002  0794                     	;# 
  1003  0795                     	;# 
  1004  0796                     	;# 
  1005  0797                     	;# 
  1006  0798                     	;# 
  1007  0799                     	;# 
  1008  079A                     	;# 
  1009  079B                     	;# 
  1010  079C                     	;# 
  1011  079D                     	;# 
  1012  079E                     	;# 
  1013  079F                     	;# 
  1014  080D                     	;# 
  1015  080E                     	;# 
  1016  080F                     	;# 
  1017  0810                     	;# 
  1018  0811                     	;# 
  1019  0812                     	;# 
  1020  0813                     	;# 
  1021  0814                     	;# 
  1022  0815                     	;# 
  1023  0816                     	;# 
  1024  0817                     	;# 
  1025  0818                     	;# 
  1026  0819                     	;# 
  1027  081A                     	;# 
  1028  081B                     	;# 
  1029  081C                     	;# 
  1030  081D                     	;# 
  1031  081E                     	;# 
  1032  081F                     	;# 
  1033  090C                     	;# 
  1034  090D                     	;# 
  1035  090E                     	;# 
  1036  090F                     	;# 
  1037  0910                     	;# 
  1038  0911                     	;# 
  1039  0912                     	;# 
  1040  0913                     	;# 
  1041  0914                     	;# 
  1042  0915                     	;# 
  1043  0916                     	;# 
  1044  0917                     	;# 
  1045  0D8E                     	;# 
  1046  0D8F                     	;# 
  1047  0D90                     	;# 
  1048  0D91                     	;# 
  1049  0D91                     	;# 
  1050  0D92                     	;# 
  1051  0D93                     	;# 
  1052  0D93                     	;# 
  1053  0D94                     	;# 
  1054  0D95                     	;# 
  1055  0D95                     	;# 
  1056  0D96                     	;# 
  1057  0D97                     	;# 
  1058  0D97                     	;# 
  1059  0D98                     	;# 
  1060  0D99                     	;# 
  1061  0D99                     	;# 
  1062  0D9A                     	;# 
  1063  0D9B                     	;# 
  1064  0D9C                     	;# 
  1065  0D9C                     	;# 
  1066  0D9D                     	;# 
  1067  0D9D                     	;# 
  1068  0D9E                     	;# 
  1069  0D9F                     	;# 
  1070  0DA0                     	;# 
  1071  0DA1                     	;# 
  1072  0DA1                     	;# 
  1073  0DA2                     	;# 
  1074  0DA3                     	;# 
  1075  0DA3                     	;# 
  1076  0DA4                     	;# 
  1077  0DA5                     	;# 
  1078  0DA5                     	;# 
  1079  0DA6                     	;# 
  1080  0DA7                     	;# 
  1081  0DA7                     	;# 
  1082  0DA8                     	;# 
  1083  0DA9                     	;# 
  1084  0DA9                     	;# 
  1085  0DAA                     	;# 
  1086  0DAB                     	;# 
  1087  0DAC                     	;# 
  1088  0DAC                     	;# 
  1089  0DAD                     	;# 
  1090  0DAD                     	;# 
  1091  0DAE                     	;# 
  1092  0DAF                     	;# 
  1093  0DB0                     	;# 
  1094  0DB1                     	;# 
  1095  0DB1                     	;# 
  1096  0DB2                     	;# 
  1097  0DB3                     	;# 
  1098  0DB3                     	;# 
  1099  0DB4                     	;# 
  1100  0DB5                     	;# 
  1101  0DB5                     	;# 
  1102  0DB6                     	;# 
  1103  0DB7                     	;# 
  1104  0DB7                     	;# 
  1105  0DB8                     	;# 
  1106  0DB9                     	;# 
  1107  0DB9                     	;# 
  1108  0DBA                     	;# 
  1109  0DBB                     	;# 
  1110  0DBC                     	;# 
  1111  0DBC                     	;# 
  1112  0DBD                     	;# 
  1113  0DBD                     	;# 
  1114  0DBE                     	;# 
  1115  0DBF                     	;# 
  1116  0DC0                     	;# 
  1117  0E0C                     	;# 
  1118  0E0D                     	;# 
  1119  0E0E                     	;# 
  1120  0E0F                     	;# 
  1121  0E10                     	;# 
  1122  0E11                     	;# 
  1123  0E12                     	;# 
  1124  0E13                     	;# 
  1125  0E14                     	;# 
  1126  0E15                     	;# 
  1127  0E15                     	;# 
  1128  0E15                     	;# 
  1129  0E16                     	;# 
  1130  0E16                     	;# 
  1131  0E16                     	;# 
  1132  0E17                     	;# 
  1133  0E17                     	;# 
  1134  0E17                     	;# 
  1135  0E18                     	;# 
  1136  0E18                     	;# 
  1137  0E18                     	;# 
  1138  0E19                     	;# 
  1139  0E1A                     	;# 
  1140  0E1B                     	;# 
  1141  0E1D                     	;# 
  1142  0E1E                     	;# 
  1143  0E1F                     	;# 
  1144  0E21                     	;# 
  1145  0E22                     	;# 
  1146  0E23                     	;# 
  1147  0E24                     	;# 
  1148  0E25                     	;# 
  1149  0E26                     	;# 
  1150  0E27                     	;# 
  1151  0E28                     	;# 
  1152  0E29                     	;# 
  1153  0E2D                     	;# 
  1154  0E2E                     	;# 
  1155  0E2F                     	;# 
  1156  0E30                     	;# 
  1157  0E31                     	;# 
  1158  0E32                     	;# 
  1159  0E35                     	;# 
  1160  0E36                     	;# 
  1161  0E37                     	;# 
  1162  0E38                     	;# 
  1163  0E39                     	;# 
  1164  0E3A                     	;# 
  1165  0E3B                     	;# 
  1166  0E3C                     	;# 
  1167  0E3D                     	;# 
  1168  0E3E                     	;# 
  1169  0E90                     	;# 
  1170  0E91                     	;# 
  1171  0E92                     	;# 
  1172  0E93                     	;# 
  1173  0E94                     	;# 
  1174  0E95                     	;# 
  1175  0E96                     	;# 
  1176  0E97                     	;# 
  1177  0E98                     	;# 
  1178  0E99                     	;# 
  1179  0E9A                     	;# 
  1180  0E9B                     	;# 
  1181  0E9C                     	;# 
  1182  0E9D                     	;# 
  1183  0E9E                     	;# 
  1184  0E9F                     	;# 
  1185  0EA0                     	;# 
  1186  0EA1                     	;# 
  1187  0EA2                     	;# 
  1188  0EA3                     	;# 
  1189  0EA4                     	;# 
  1190  0EA5                     	;# 
  1191  0EA6                     	;# 
  1192  0EA7                     	;# 
  1193  0F0F                     	;# 
  1194  0F10                     	;# 
  1195  0F11                     	;# 
  1196  0F12                     	;# 
  1197  0F13                     	;# 
  1198  0F14                     	;# 
  1199  0F15                     	;# 
  1200  0F16                     	;# 
  1201  0F17                     	;# 
  1202  0F18                     	;# 
  1203  0F19                     	;# 
  1204  0F1A                     	;# 
  1205  0F1B                     	;# 
  1206  0F1C                     	;# 
  1207  0F1D                     	;# 
  1208  0F1E                     	;# 
  1209  0F1F                     	;# 
  1210  0F20                     	;# 
  1211  0F21                     	;# 
  1212  0F22                     	;# 
  1213  0F23                     	;# 
  1214  0F24                     	;# 
  1215  0F25                     	;# 
  1216  0F26                     	;# 
  1217  0F27                     	;# 
  1218  0F28                     	;# 
  1219  0F29                     	;# 
  1220  0F2A                     	;# 
  1221  0F2B                     	;# 
  1222  0F2C                     	;# 
  1223  0F2D                     	;# 
  1224  0F2E                     	;# 
  1225  0F2F                     	;# 
  1226  0F30                     	;# 
  1227  0F31                     	;# 
  1228  0F32                     	;# 
  1229  0F33                     	;# 
  1230  0F34                     	;# 
  1231  0F35                     	;# 
  1232  0F36                     	;# 
  1233  0F37                     	;# 
  1234  0FE4                     	;# 
  1235  0FE5                     	;# 
  1236  0FE6                     	;# 
  1237  0FE7                     	;# 
  1238  0FE8                     	;# 
  1239  0FE9                     	;# 
  1240  0FEA                     	;# 
  1241  0FEB                     	;# 
  1242  0FED                     	;# 
  1243  0FEE                     	;# 
  1244  0FEF                     	;# 
  1245  0000                     	;# 
  1246  0001                     	;# 
  1247  0002                     	;# 
  1248  0003                     	;# 
  1249  0004                     	;# 
  1250  0005                     	;# 
  1251  0006                     	;# 
  1252  0007                     	;# 
  1253  0008                     	;# 
  1254  0009                     	;# 
  1255  000A                     	;# 
  1256  000B                     	;# 
  1257  000C                     	;# 
  1258  000D                     	;# 
  1259  000E                     	;# 
  1260  0010                     	;# 
  1261  0011                     	;# 
  1262  0012                     	;# 
  1263  0013                     	;# 
  1264  0014                     	;# 
  1265  0015                     	;# 
  1266  0016                     	;# 
  1267  0017                     	;# 
  1268  0018                     	;# 
  1269  0018                     	;# 
  1270  0019                     	;# 
  1271  001A                     	;# 
  1272  001B                     	;# 
  1273  001C                     	;# 
  1274  001C                     	;# 
  1275  001D                     	;# 
  1276  001E                     	;# 
  1277  001F                     	;# 
  1278  008C                     	;# 
  1279  008D                     	;# 
  1280  008E                     	;# 
  1281  0090                     	;# 
  1282  0091                     	;# 
  1283  0092                     	;# 
  1284  0093                     	;# 
  1285  0094                     	;# 
  1286  0095                     	;# 
  1287  0096                     	;# 
  1288  0097                     	;# 
  1289  0098                     	;# 
  1290  0099                     	;# 
  1291  009A                     	;# 
  1292  009B                     	;# 
  1293  009C                     	;# 
  1294  009D                     	;# 
  1295  009E                     	;# 
  1296  009F                     	;# 
  1297  010C                     	;# 
  1298  010D                     	;# 
  1299  010E                     	;# 
  1300  0111                     	;# 
  1301  0112                     	;# 
  1302  0113                     	;# 
  1303  0114                     	;# 
  1304  0115                     	;# 
  1305  0116                     	;# 
  1306  0117                     	;# 
  1307  0118                     	;# 
  1308  0119                     	;# 
  1309  011A                     	;# 
  1310  011B                     	;# 
  1311  011C                     	;# 
  1312  011D                     	;# 
  1313  018C                     	;# 
  1314  018D                     	;# 
  1315  018E                     	;# 
  1316  0191                     	;# 
  1317  0191                     	;# 
  1318  0192                     	;# 
  1319  0193                     	;# 
  1320  0193                     	;# 
  1321  0194                     	;# 
  1322  0195                     	;# 
  1323  0196                     	;# 
  1324  0197                     	;# 
  1325  0199                     	;# 
  1326  0199                     	;# 
  1327  0199                     	;# 
  1328  019A                     	;# 
  1329  019A                     	;# 
  1330  019A                     	;# 
  1331  019B                     	;# 
  1332  019B                     	;# 
  1333  019B                     	;# 
  1334  019B                     	;# 
  1335  019B                     	;# 
  1336  019C                     	;# 
  1337  019C                     	;# 
  1338  019C                     	;# 
  1339  019D                     	;# 
  1340  019D                     	;# 
  1341  019D                     	;# 
  1342  019E                     	;# 
  1343  019E                     	;# 
  1344  019E                     	;# 
  1345  019F                     	;# 
  1346  019F                     	;# 
  1347  019F                     	;# 
  1348  019F                     	;# 
  1349  019F                     	;# 
  1350  020C                     	;# 
  1351  020D                     	;# 
  1352  020E                     	;# 
  1353  0210                     	;# 
  1354  0211                     	;# 
  1355  0211                     	;# 
  1356  0212                     	;# 
  1357  0212                     	;# 
  1358  0213                     	;# 
  1359  0213                     	;# 
  1360  0214                     	;# 
  1361  0214                     	;# 
  1362  0215                     	;# 
  1363  0215                     	;# 
  1364  0215                     	;# 
  1365  0215                     	;# 
  1366  0216                     	;# 
  1367  0216                     	;# 
  1368  0217                     	;# 
  1369  0217                     	;# 
  1370  021B                     	;# 
  1371  021C                     	;# 
  1372  021D                     	;# 
  1373  021E                     	;# 
  1374  021F                     	;# 
  1375  028C                     	;# 
  1376  028D                     	;# 
  1377  028E                     	;# 
  1378  0291                     	;# 
  1379  0291                     	;# 
  1380  0292                     	;# 
  1381  0293                     	;# 
  1382  0294                     	;# 
  1383  0295                     	;# 
  1384  0295                     	;# 
  1385  0296                     	;# 
  1386  0297                     	;# 
  1387  0298                     	;# 
  1388  0299                     	;# 
  1389  0299                     	;# 
  1390  029A                     	;# 
  1391  029B                     	;# 
  1392  029C                     	;# 
  1393  029E                     	;# 
  1394  029F                     	;# 
  1395  030C                     	;# 
  1396  030D                     	;# 
  1397  030E                     	;# 
  1398  0315                     	;# 
  1399  0316                     	;# 
  1400  0317                     	;# 
  1401  0318                     	;# 
  1402  0319                     	;# 
  1403  031B                     	;# 
  1404  031C                     	;# 
  1405  031D                     	;# 
  1406  031E                     	;# 
  1407  031F                     	;# 
  1408  038C                     	;# 
  1409  038D                     	;# 
  1410  038E                     	;# 
  1411  0390                     	;# 
  1412  0391                     	;# 
  1413  0392                     	;# 
  1414  0393                     	;# 
  1415  0394                     	;# 
  1416  0395                     	;# 
  1417  0396                     	;# 
  1418  0397                     	;# 
  1419  0398                     	;# 
  1420  0399                     	;# 
  1421  039D                     	;# 
  1422  039E                     	;# 
  1423  039F                     	;# 
  1424  040D                     	;# 
  1425  040F                     	;# 
  1426  040F                     	;# 
  1427  0410                     	;# 
  1428  0411                     	;# 
  1429  0412                     	;# 
  1430  0413                     	;# 
  1431  0413                     	;# 
  1432  0414                     	;# 
  1433  0414                     	;# 
  1434  0415                     	;# 
  1435  0416                     	;# 
  1436  0417                     	;# 
  1437  0418                     	;# 
  1438  041A                     	;# 
  1439  041A                     	;# 
  1440  041B                     	;# 
  1441  041B                     	;# 
  1442  041C                     	;# 
  1443  041D                     	;# 
  1444  041E                     	;# 
  1445  041F                     	;# 
  1446  048E                     	;# 
  1447  048E                     	;# 
  1448  048F                     	;# 
  1449  0490                     	;# 
  1450  0491                     	;# 
  1451  0492                     	;# 
  1452  0493                     	;# 
  1453  0493                     	;# 
  1454  0494                     	;# 
  1455  0494                     	;# 
  1456  0495                     	;# 
  1457  0496                     	;# 
  1458  0497                     	;# 
  1459  0498                     	;# 
  1460  049A                     	;# 
  1461  049A                     	;# 
  1462  049B                     	;# 
  1463  049B                     	;# 
  1464  049C                     	;# 
  1465  049D                     	;# 
  1466  049E                     	;# 
  1467  049F                     	;# 
  1468  050F                     	;# 
  1469  0510                     	;# 
  1470  0511                     	;# 
  1471  0512                     	;# 
  1472  0513                     	;# 
  1473  0514                     	;# 
  1474  0515                     	;# 
  1475  0516                     	;# 
  1476  0517                     	;# 
  1477  0518                     	;# 
  1478  0519                     	;# 
  1479  051A                     	;# 
  1480  058D                     	;# 
  1481  058E                     	;# 
  1482  058F                     	;# 
  1483  058F                     	;# 
  1484  058F                     	;# 
  1485  0590                     	;# 
  1486  0590                     	;# 
  1487  0591                     	;# 
  1488  0592                     	;# 
  1489  0592                     	;# 
  1490  0592                     	;# 
  1491  0593                     	;# 
  1492  0593                     	;# 
  1493  0594                     	;# 
  1494  0595                     	;# 
  1495  0595                     	;# 
  1496  0596                     	;# 
  1497  0597                     	;# 
  1498  0597                     	;# 
  1499  0598                     	;# 
  1500  0599                     	;# 
  1501  0599                     	;# 
  1502  0599                     	;# 
  1503  059A                     	;# 
  1504  059A                     	;# 
  1505  059E                     	;# 
  1506  059F                     	;# 
  1507  059F                     	;# 
  1508  0614                     	;# 
  1509  0614                     	;# 
  1510  0615                     	;# 
  1511  0616                     	;# 
  1512  0617                     	;# 
  1513  0617                     	;# 
  1514  0618                     	;# 
  1515  0619                     	;# 
  1516  061A                     	;# 
  1517  061A                     	;# 
  1518  061B                     	;# 
  1519  061C                     	;# 
  1520  068D                     	;# 
  1521  068E                     	;# 
  1522  068F                     	;# 
  1523  0690                     	;# 
  1524  0691                     	;# 
  1525  0692                     	;# 
  1526  0693                     	;# 
  1527  0694                     	;# 
  1528  0695                     	;# 
  1529  0696                     	;# 
  1530  0697                     	;# 
  1531  0698                     	;# 
  1532  0699                     	;# 
  1533  069A                     	;# 
  1534  069B                     	;# 
  1535  069C                     	;# 
  1536  069D                     	;# 
  1537  069E                     	;# 
  1538  069F                     	;# 
  1539  070D                     	;# 
  1540  070E                     	;# 
  1541  070F                     	;# 
  1542  0710                     	;# 
  1543  0711                     	;# 
  1544  0712                     	;# 
  1545  0713                     	;# 
  1546  0714                     	;# 
  1547  0715                     	;# 
  1548  0716                     	;# 
  1549  0717                     	;# 
  1550  0718                     	;# 
  1551  0719                     	;# 
  1552  071A                     	;# 
  1553  071B                     	;# 
  1554  071C                     	;# 
  1555  071D                     	;# 
  1556  071E                     	;# 
  1557  071F                     	;# 
  1558  078E                     	;# 
  1559  078F                     	;# 
  1560  0790                     	;# 
  1561  0791                     	;# 
  1562  0792                     	;# 
  1563  0793                     	;# 
  1564  0794                     	;# 
  1565  0795                     	;# 
  1566  0796                     	;# 
  1567  0797                     	;# 
  1568  0798                     	;# 
  1569  0799                     	;# 
  1570  079A                     	;# 
  1571  079B                     	;# 
  1572  079C                     	;# 
  1573  079D                     	;# 
  1574  079E                     	;# 
  1575  079F                     	;# 
  1576  080D                     	;# 
  1577  080E                     	;# 
  1578  080F                     	;# 
  1579  0810                     	;# 
  1580  0811                     	;# 
  1581  0812                     	;# 
  1582  0813                     	;# 
  1583  0814                     	;# 
  1584  0815                     	;# 
  1585  0816                     	;# 
  1586  0817                     	;# 
  1587  0818                     	;# 
  1588  0819                     	;# 
  1589  081A                     	;# 
  1590  081B                     	;# 
  1591  081C                     	;# 
  1592  081D                     	;# 
  1593  081E                     	;# 
  1594  081F                     	;# 
  1595  090C                     	;# 
  1596  090D                     	;# 
  1597  090E                     	;# 
  1598  090F                     	;# 
  1599  0910                     	;# 
  1600  0911                     	;# 
  1601  0912                     	;# 
  1602  0913                     	;# 
  1603  0914                     	;# 
  1604  0915                     	;# 
  1605  0916                     	;# 
  1606  0917                     	;# 
  1607  0D8E                     	;# 
  1608  0D8F                     	;# 
  1609  0D90                     	;# 
  1610  0D91                     	;# 
  1611  0D91                     	;# 
  1612  0D92                     	;# 
  1613  0D93                     	;# 
  1614  0D93                     	;# 
  1615  0D94                     	;# 
  1616  0D95                     	;# 
  1617  0D95                     	;# 
  1618  0D96                     	;# 
  1619  0D97                     	;# 
  1620  0D97                     	;# 
  1621  0D98                     	;# 
  1622  0D99                     	;# 
  1623  0D99                     	;# 
  1624  0D9A                     	;# 
  1625  0D9B                     	;# 
  1626  0D9C                     	;# 
  1627  0D9C                     	;# 
  1628  0D9D                     	;# 
  1629  0D9D                     	;# 
  1630  0D9E                     	;# 
  1631  0D9F                     	;# 
  1632  0DA0                     	;# 
  1633  0DA1                     	;# 
  1634  0DA1                     	;# 
  1635  0DA2                     	;# 
  1636  0DA3                     	;# 
  1637  0DA3                     	;# 
  1638  0DA4                     	;# 
  1639  0DA5                     	;# 
  1640  0DA5                     	;# 
  1641  0DA6                     	;# 
  1642  0DA7                     	;# 
  1643  0DA7                     	;# 
  1644  0DA8                     	;# 
  1645  0DA9                     	;# 
  1646  0DA9                     	;# 
  1647  0DAA                     	;# 
  1648  0DAB                     	;# 
  1649  0DAC                     	;# 
  1650  0DAC                     	;# 
  1651  0DAD                     	;# 
  1652  0DAD                     	;# 
  1653  0DAE                     	;# 
  1654  0DAF                     	;# 
  1655  0DB0                     	;# 
  1656  0DB1                     	;# 
  1657  0DB1                     	;# 
  1658  0DB2                     	;# 
  1659  0DB3                     	;# 
  1660  0DB3                     	;# 
  1661  0DB4                     	;# 
  1662  0DB5                     	;# 
  1663  0DB5                     	;# 
  1664  0DB6                     	;# 
  1665  0DB7                     	;# 
  1666  0DB7                     	;# 
  1667  0DB8                     	;# 
  1668  0DB9                     	;# 
  1669  0DB9                     	;# 
  1670  0DBA                     	;# 
  1671  0DBB                     	;# 
  1672  0DBC                     	;# 
  1673  0DBC                     	;# 
  1674  0DBD                     	;# 
  1675  0DBD                     	;# 
  1676  0DBE                     	;# 
  1677  0DBF                     	;# 
  1678  0DC0                     	;# 
  1679  0E0C                     	;# 
  1680  0E0D                     	;# 
  1681  0E0E                     	;# 
  1682  0E0F                     	;# 
  1683  0E10                     	;# 
  1684  0E11                     	;# 
  1685  0E12                     	;# 
  1686  0E13                     	;# 
  1687  0E14                     	;# 
  1688  0E15                     	;# 
  1689  0E15                     	;# 
  1690  0E15                     	;# 
  1691  0E16                     	;# 
  1692  0E16                     	;# 
  1693  0E16                     	;# 
  1694  0E17                     	;# 
  1695  0E17                     	;# 
  1696  0E17                     	;# 
  1697  0E18                     	;# 
  1698  0E18                     	;# 
  1699  0E18                     	;# 
  1700  0E19                     	;# 
  1701  0E1A                     	;# 
  1702  0E1B                     	;# 
  1703  0E1D                     	;# 
  1704  0E1E                     	;# 
  1705  0E1F                     	;# 
  1706  0E21                     	;# 
  1707  0E22                     	;# 
  1708  0E23                     	;# 
  1709  0E24                     	;# 
  1710  0E25                     	;# 
  1711  0E26                     	;# 
  1712  0E27                     	;# 
  1713  0E28                     	;# 
  1714  0E29                     	;# 
  1715  0E2D                     	;# 
  1716  0E2E                     	;# 
  1717  0E2F                     	;# 
  1718  0E30                     	;# 
  1719  0E31                     	;# 
  1720  0E32                     	;# 
  1721  0E35                     	;# 
  1722  0E36                     	;# 
  1723  0E37                     	;# 
  1724  0E38                     	;# 
  1725  0E39                     	;# 
  1726  0E3A                     	;# 
  1727  0E3B                     	;# 
  1728  0E3C                     	;# 
  1729  0E3D                     	;# 
  1730  0E3E                     	;# 
  1731  0E90                     	;# 
  1732  0E91                     	;# 
  1733  0E92                     	;# 
  1734  0E93                     	;# 
  1735  0E94                     	;# 
  1736  0E95                     	;# 
  1737  0E96                     	;# 
  1738  0E97                     	;# 
  1739  0E98                     	;# 
  1740  0E99                     	;# 
  1741  0E9A                     	;# 
  1742  0E9B                     	;# 
  1743  0E9C                     	;# 
  1744  0E9D                     	;# 
  1745  0E9E                     	;# 
  1746  0E9F                     	;# 
  1747  0EA0                     	;# 
  1748  0EA1                     	;# 
  1749  0EA2                     	;# 
  1750  0EA3                     	;# 
  1751  0EA4                     	;# 
  1752  0EA5                     	;# 
  1753  0EA6                     	;# 
  1754  0EA7                     	;# 
  1755  0F0F                     	;# 
  1756  0F10                     	;# 
  1757  0F11                     	;# 
  1758  0F12                     	;# 
  1759  0F13                     	;# 
  1760  0F14                     	;# 
  1761  0F15                     	;# 
  1762  0F16                     	;# 
  1763  0F17                     	;# 
  1764  0F18                     	;# 
  1765  0F19                     	;# 
  1766  0F1A                     	;# 
  1767  0F1B                     	;# 
  1768  0F1C                     	;# 
  1769  0F1D                     	;# 
  1770  0F1E                     	;# 
  1771  0F1F                     	;# 
  1772  0F20                     	;# 
  1773  0F21                     	;# 
  1774  0F22                     	;# 
  1775  0F23                     	;# 
  1776  0F24                     	;# 
  1777  0F25                     	;# 
  1778  0F26                     	;# 
  1779  0F27                     	;# 
  1780  0F28                     	;# 
  1781  0F29                     	;# 
  1782  0F2A                     	;# 
  1783  0F2B                     	;# 
  1784  0F2C                     	;# 
  1785  0F2D                     	;# 
  1786  0F2E                     	;# 
  1787  0F2F                     	;# 
  1788  0F30                     	;# 
  1789  0F31                     	;# 
  1790  0F32                     	;# 
  1791  0F33                     	;# 
  1792  0F34                     	;# 
  1793  0F35                     	;# 
  1794  0F36                     	;# 
  1795  0F37                     	;# 
  1796  0FE4                     	;# 
  1797  0FE5                     	;# 
  1798  0FE6                     	;# 
  1799  0FE7                     	;# 
  1800  0FE8                     	;# 
  1801  0FE9                     	;# 
  1802  0FEA                     	;# 
  1803  0FEB                     	;# 
  1804  0FED                     	;# 
  1805  0FEE                     	;# 
  1806  0FEF                     	;# 
  1807  0000                     	;# 
  1808  0001                     	;# 
  1809  0002                     	;# 
  1810  0003                     	;# 
  1811  0004                     	;# 
  1812  0005                     	;# 
  1813  0006                     	;# 
  1814  0007                     	;# 
  1815  0008                     	;# 
  1816  0009                     	;# 
  1817  000A                     	;# 
  1818  000B                     	;# 
  1819  000C                     	;# 
  1820  000D                     	;# 
  1821  000E                     	;# 
  1822  0010                     	;# 
  1823  0011                     	;# 
  1824  0012                     	;# 
  1825  0013                     	;# 
  1826  0014                     	;# 
  1827  0015                     	;# 
  1828  0016                     	;# 
  1829  0017                     	;# 
  1830  0018                     	;# 
  1831  0018                     	;# 
  1832  0019                     	;# 
  1833  001A                     	;# 
  1834  001B                     	;# 
  1835  001C                     	;# 
  1836  001C                     	;# 
  1837  001D                     	;# 
  1838  001E                     	;# 
  1839  001F                     	;# 
  1840  008C                     	;# 
  1841  008D                     	;# 
  1842  008E                     	;# 
  1843  0090                     	;# 
  1844  0091                     	;# 
  1845  0092                     	;# 
  1846  0093                     	;# 
  1847  0094                     	;# 
  1848  0095                     	;# 
  1849  0096                     	;# 
  1850  0097                     	;# 
  1851  0098                     	;# 
  1852  0099                     	;# 
  1853  009A                     	;# 
  1854  009B                     	;# 
  1855  009C                     	;# 
  1856  009D                     	;# 
  1857  009E                     	;# 
  1858  009F                     	;# 
  1859  010C                     	;# 
  1860  010D                     	;# 
  1861  010E                     	;# 
  1862  0111                     	;# 
  1863  0112                     	;# 
  1864  0113                     	;# 
  1865  0114                     	;# 
  1866  0115                     	;# 
  1867  0116                     	;# 
  1868  0117                     	;# 
  1869  0118                     	;# 
  1870  0119                     	;# 
  1871  011A                     	;# 
  1872  011B                     	;# 
  1873  011C                     	;# 
  1874  011D                     	;# 
  1875  018C                     	;# 
  1876  018D                     	;# 
  1877  018E                     	;# 
  1878  0191                     	;# 
  1879  0191                     	;# 
  1880  0192                     	;# 
  1881  0193                     	;# 
  1882  0193                     	;# 
  1883  0194                     	;# 
  1884  0195                     	;# 
  1885  0196                     	;# 
  1886  0197                     	;# 
  1887  0199                     	;# 
  1888  0199                     	;# 
  1889  0199                     	;# 
  1890  019A                     	;# 
  1891  019A                     	;# 
  1892  019A                     	;# 
  1893  019B                     	;# 
  1894  019B                     	;# 
  1895  019B                     	;# 
  1896  019B                     	;# 
  1897  019B                     	;# 
  1898  019C                     	;# 
  1899  019C                     	;# 
  1900  019C                     	;# 
  1901  019D                     	;# 
  1902  019D                     	;# 
  1903  019D                     	;# 
  1904  019E                     	;# 
  1905  019E                     	;# 
  1906  019E                     	;# 
  1907  019F                     	;# 
  1908  019F                     	;# 
  1909  019F                     	;# 
  1910  019F                     	;# 
  1911  019F                     	;# 
  1912  020C                     	;# 
  1913  020D                     	;# 
  1914  020E                     	;# 
  1915  0210                     	;# 
  1916  0211                     	;# 
  1917  0211                     	;# 
  1918  0212                     	;# 
  1919  0212                     	;# 
  1920  0213                     	;# 
  1921  0213                     	;# 
  1922  0214                     	;# 
  1923  0214                     	;# 
  1924  0215                     	;# 
  1925  0215                     	;# 
  1926  0215                     	;# 
  1927  0215                     	;# 
  1928  0216                     	;# 
  1929  0216                     	;# 
  1930  0217                     	;# 
  1931  0217                     	;# 
  1932  021B                     	;# 
  1933  021C                     	;# 
  1934  021D                     	;# 
  1935  021E                     	;# 
  1936  021F                     	;# 
  1937  028C                     	;# 
  1938  028D                     	;# 
  1939  028E                     	;# 
  1940  0291                     	;# 
  1941  0291                     	;# 
  1942  0292                     	;# 
  1943  0293                     	;# 
  1944  0294                     	;# 
  1945  0295                     	;# 
  1946  0295                     	;# 
  1947  0296                     	;# 
  1948  0297                     	;# 
  1949  0298                     	;# 
  1950  0299                     	;# 
  1951  0299                     	;# 
  1952  029A                     	;# 
  1953  029B                     	;# 
  1954  029C                     	;# 
  1955  029E                     	;# 
  1956  029F                     	;# 
  1957  030C                     	;# 
  1958  030D                     	;# 
  1959  030E                     	;# 
  1960  0315                     	;# 
  1961  0316                     	;# 
  1962  0317                     	;# 
  1963  0318                     	;# 
  1964  0319                     	;# 
  1965  031B                     	;# 
  1966  031C                     	;# 
  1967  031D                     	;# 
  1968  031E                     	;# 
  1969  031F                     	;# 
  1970  038C                     	;# 
  1971  038D                     	;# 
  1972  038E                     	;# 
  1973  0390                     	;# 
  1974  0391                     	;# 
  1975  0392                     	;# 
  1976  0393                     	;# 
  1977  0394                     	;# 
  1978  0395                     	;# 
  1979  0396                     	;# 
  1980  0397                     	;# 
  1981  0398                     	;# 
  1982  0399                     	;# 
  1983  039D                     	;# 
  1984  039E                     	;# 
  1985  039F                     	;# 
  1986  040D                     	;# 
  1987  040F                     	;# 
  1988  040F                     	;# 
  1989  0410                     	;# 
  1990  0411                     	;# 
  1991  0412                     	;# 
  1992  0413                     	;# 
  1993  0413                     	;# 
  1994  0414                     	;# 
  1995  0414                     	;# 
  1996  0415                     	;# 
  1997  0416                     	;# 
  1998  0417                     	;# 
  1999  0418                     	;# 
  2000  041A                     	;# 
  2001  041A                     	;# 
  2002  041B                     	;# 
  2003  041B                     	;# 
  2004  041C                     	;# 
  2005  041D                     	;# 
  2006  041E                     	;# 
  2007  041F                     	;# 
  2008  048E                     	;# 
  2009  048E                     	;# 
  2010  048F                     	;# 
  2011  0490                     	;# 
  2012  0491                     	;# 
  2013  0492                     	;# 
  2014  0493                     	;# 
  2015  0493                     	;# 
  2016  0494                     	;# 
  2017  0494                     	;# 
  2018  0495                     	;# 
  2019  0496                     	;# 
  2020  0497                     	;# 
  2021  0498                     	;# 
  2022  049A                     	;# 
  2023  049A                     	;# 
  2024  049B                     	;# 
  2025  049B                     	;# 
  2026  049C                     	;# 
  2027  049D                     	;# 
  2028  049E                     	;# 
  2029  049F                     	;# 
  2030  050F                     	;# 
  2031  0510                     	;# 
  2032  0511                     	;# 
  2033  0512                     	;# 
  2034  0513                     	;# 
  2035  0514                     	;# 
  2036  0515                     	;# 
  2037  0516                     	;# 
  2038  0517                     	;# 
  2039  0518                     	;# 
  2040  0519                     	;# 
  2041  051A                     	;# 
  2042  058D                     	;# 
  2043  058E                     	;# 
  2044  058F                     	;# 
  2045  058F                     	;# 
  2046  058F                     	;# 
  2047  0590                     	;# 
  2048  0590                     	;# 
  2049  0591                     	;# 
  2050  0592                     	;# 
  2051  0592                     	;# 
  2052  0592                     	;# 
  2053  0593                     	;# 
  2054  0593                     	;# 
  2055  0594                     	;# 
  2056  0595                     	;# 
  2057  0595                     	;# 
  2058  0596                     	;# 
  2059  0597                     	;# 
  2060  0597                     	;# 
  2061  0598                     	;# 
  2062  0599                     	;# 
  2063  0599                     	;# 
  2064  0599                     	;# 
  2065  059A                     	;# 
  2066  059A                     	;# 
  2067  059E                     	;# 
  2068  059F                     	;# 
  2069  059F                     	;# 
  2070  0614                     	;# 
  2071  0614                     	;# 
  2072  0615                     	;# 
  2073  0616                     	;# 
  2074  0617                     	;# 
  2075  0617                     	;# 
  2076  0618                     	;# 
  2077  0619                     	;# 
  2078  061A                     	;# 
  2079  061A                     	;# 
  2080  061B                     	;# 
  2081  061C                     	;# 
  2082  068D                     	;# 
  2083  068E                     	;# 
  2084  068F                     	;# 
  2085  0690                     	;# 
  2086  0691                     	;# 
  2087  0692                     	;# 
  2088  0693                     	;# 
  2089  0694                     	;# 
  2090  0695                     	;# 
  2091  0696                     	;# 
  2092  0697                     	;# 
  2093  0698                     	;# 
  2094  0699                     	;# 
  2095  069A                     	;# 
  2096  069B                     	;# 
  2097  069C                     	;# 
  2098  069D                     	;# 
  2099  069E                     	;# 
  2100  069F                     	;# 
  2101  070D                     	;# 
  2102  070E                     	;# 
  2103  070F                     	;# 
  2104  0710                     	;# 
  2105  0711                     	;# 
  2106  0712                     	;# 
  2107  0713                     	;# 
  2108  0714                     	;# 
  2109  0715                     	;# 
  2110  0716                     	;# 
  2111  0717                     	;# 
  2112  0718                     	;# 
  2113  0719                     	;# 
  2114  071A                     	;# 
  2115  071B                     	;# 
  2116  071C                     	;# 
  2117  071D                     	;# 
  2118  071E                     	;# 
  2119  071F                     	;# 
  2120  078E                     	;# 
  2121  078F                     	;# 
  2122  0790                     	;# 
  2123  0791                     	;# 
  2124  0792                     	;# 
  2125  0793                     	;# 
  2126  0794                     	;# 
  2127  0795                     	;# 
  2128  0796                     	;# 
  2129  0797                     	;# 
  2130  0798                     	;# 
  2131  0799                     	;# 
  2132  079A                     	;# 
  2133  079B                     	;# 
  2134  079C                     	;# 
  2135  079D                     	;# 
  2136  079E                     	;# 
  2137  079F                     	;# 
  2138  080D                     	;# 
  2139  080E                     	;# 
  2140  080F                     	;# 
  2141  0810                     	;# 
  2142  0811                     	;# 
  2143  0812                     	;# 
  2144  0813                     	;# 
  2145  0814                     	;# 
  2146  0815                     	;# 
  2147  0816                     	;# 
  2148  0817                     	;# 
  2149  0818                     	;# 
  2150  0819                     	;# 
  2151  081A                     	;# 
  2152  081B                     	;# 
  2153  081C                     	;# 
  2154  081D                     	;# 
  2155  081E                     	;# 
  2156  081F                     	;# 
  2157  090C                     	;# 
  2158  090D                     	;# 
  2159  090E                     	;# 
  2160  090F                     	;# 
  2161  0910                     	;# 
  2162  0911                     	;# 
  2163  0912                     	;# 
  2164  0913                     	;# 
  2165  0914                     	;# 
  2166  0915                     	;# 
  2167  0916                     	;# 
  2168  0917                     	;# 
  2169  0D8E                     	;# 
  2170  0D8F                     	;# 
  2171  0D90                     	;# 
  2172  0D91                     	;# 
  2173  0D91                     	;# 
  2174  0D92                     	;# 
  2175  0D93                     	;# 
  2176  0D93                     	;# 
  2177  0D94                     	;# 
  2178  0D95                     	;# 
  2179  0D95                     	;# 
  2180  0D96                     	;# 
  2181  0D97                     	;# 
  2182  0D97                     	;# 
  2183  0D98                     	;# 
  2184  0D99                     	;# 
  2185  0D99                     	;# 
  2186  0D9A                     	;# 
  2187  0D9B                     	;# 
  2188  0D9C                     	;# 
  2189  0D9C                     	;# 
  2190  0D9D                     	;# 
  2191  0D9D                     	;# 
  2192  0D9E                     	;# 
  2193  0D9F                     	;# 
  2194  0DA0                     	;# 
  2195  0DA1                     	;# 
  2196  0DA1                     	;# 
  2197  0DA2                     	;# 
  2198  0DA3                     	;# 
  2199  0DA3                     	;# 
  2200  0DA4                     	;# 
  2201  0DA5                     	;# 
  2202  0DA5                     	;# 
  2203  0DA6                     	;# 
  2204  0DA7                     	;# 
  2205  0DA7                     	;# 
  2206  0DA8                     	;# 
  2207  0DA9                     	;# 
  2208  0DA9                     	;# 
  2209  0DAA                     	;# 
  2210  0DAB                     	;# 
  2211  0DAC                     	;# 
  2212  0DAC                     	;# 
  2213  0DAD                     	;# 
  2214  0DAD                     	;# 
  2215  0DAE                     	;# 
  2216  0DAF                     	;# 
  2217  0DB0                     	;# 
  2218  0DB1                     	;# 
  2219  0DB1                     	;# 
  2220  0DB2                     	;# 
  2221  0DB3                     	;# 
  2222  0DB3                     	;# 
  2223  0DB4                     	;# 
  2224  0DB5                     	;# 
  2225  0DB5                     	;# 
  2226  0DB6                     	;# 
  2227  0DB7                     	;# 
  2228  0DB7                     	;# 
  2229  0DB8                     	;# 
  2230  0DB9                     	;# 
  2231  0DB9                     	;# 
  2232  0DBA                     	;# 
  2233  0DBB                     	;# 
  2234  0DBC                     	;# 
  2235  0DBC                     	;# 
  2236  0DBD                     	;# 
  2237  0DBD                     	;# 
  2238  0DBE                     	;# 
  2239  0DBF                     	;# 
  2240  0DC0                     	;# 
  2241  0E0C                     	;# 
  2242  0E0D                     	;# 
  2243  0E0E                     	;# 
  2244  0E0F                     	;# 
  2245  0E10                     	;# 
  2246  0E11                     	;# 
  2247  0E12                     	;# 
  2248  0E13                     	;# 
  2249  0E14                     	;# 
  2250  0E15                     	;# 
  2251  0E15                     	;# 
  2252  0E15                     	;# 
  2253  0E16                     	;# 
  2254  0E16                     	;# 
  2255  0E16                     	;# 
  2256  0E17                     	;# 
  2257  0E17                     	;# 
  2258  0E17                     	;# 
  2259  0E18                     	;# 
  2260  0E18                     	;# 
  2261  0E18                     	;# 
  2262  0E19                     	;# 
  2263  0E1A                     	;# 
  2264  0E1B                     	;# 
  2265  0E1D                     	;# 
  2266  0E1E                     	;# 
  2267  0E1F                     	;# 
  2268  0E21                     	;# 
  2269  0E22                     	;# 
  2270  0E23                     	;# 
  2271  0E24                     	;# 
  2272  0E25                     	;# 
  2273  0E26                     	;# 
  2274  0E27                     	;# 
  2275  0E28                     	;# 
  2276  0E29                     	;# 
  2277  0E2D                     	;# 
  2278  0E2E                     	;# 
  2279  0E2F                     	;# 
  2280  0E30                     	;# 
  2281  0E31                     	;# 
  2282  0E32                     	;# 
  2283  0E35                     	;# 
  2284  0E36                     	;# 
  2285  0E37                     	;# 
  2286  0E38                     	;# 
  2287  0E39                     	;# 
  2288  0E3A                     	;# 
  2289  0E3B                     	;# 
  2290  0E3C                     	;# 
  2291  0E3D                     	;# 
  2292  0E3E                     	;# 
  2293  0E90                     	;# 
  2294  0E91                     	;# 
  2295  0E92                     	;# 
  2296  0E93                     	;# 
  2297  0E94                     	;# 
  2298  0E95                     	;# 
  2299  0E96                     	;# 
  2300  0E97                     	;# 
  2301  0E98                     	;# 
  2302  0E99                     	;# 
  2303  0E9A                     	;# 
  2304  0E9B                     	;# 
  2305  0E9C                     	;# 
  2306  0E9D                     	;# 
  2307  0E9E                     	;# 
  2308  0E9F                     	;# 
  2309  0EA0                     	;# 
  2310  0EA1                     	;# 
  2311  0EA2                     	;# 
  2312  0EA3                     	;# 
  2313  0EA4                     	;# 
  2314  0EA5                     	;# 
  2315  0EA6                     	;# 
  2316  0EA7                     	;# 
  2317  0F0F                     	;# 
  2318  0F10                     	;# 
  2319  0F11                     	;# 
  2320  0F12                     	;# 
  2321  0F13                     	;# 
  2322  0F14                     	;# 
  2323  0F15                     	;# 
  2324  0F16                     	;# 
  2325  0F17                     	;# 
  2326  0F18                     	;# 
  2327  0F19                     	;# 
  2328  0F1A                     	;# 
  2329  0F1B                     	;# 
  2330  0F1C                     	;# 
  2331  0F1D                     	;# 
  2332  0F1E                     	;# 
  2333  0F1F                     	;# 
  2334  0F20                     	;# 
  2335  0F21                     	;# 
  2336  0F22                     	;# 
  2337  0F23                     	;# 
  2338  0F24                     	;# 
  2339  0F25                     	;# 
  2340  0F26                     	;# 
  2341  0F27                     	;# 
  2342  0F28                     	;# 
  2343  0F29                     	;# 
  2344  0F2A                     	;# 
  2345  0F2B                     	;# 
  2346  0F2C                     	;# 
  2347  0F2D                     	;# 
  2348  0F2E                     	;# 
  2349  0F2F                     	;# 
  2350  0F30                     	;# 
  2351  0F31                     	;# 
  2352  0F32                     	;# 
  2353  0F33                     	;# 
  2354  0F34                     	;# 
  2355  0F35                     	;# 
  2356  0F36                     	;# 
  2357  0F37                     	;# 
  2358  0FE4                     	;# 
  2359  0FE5                     	;# 
  2360  0FE6                     	;# 
  2361  0FE7                     	;# 
  2362  0FE8                     	;# 
  2363  0FE9                     	;# 
  2364  0FEA                     	;# 
  2365  0FEB                     	;# 
  2366  0FED                     	;# 
  2367  0FEE                     	;# 
  2368  0FEF                     	;# 
  2369  0000                     	;# 
  2370  0001                     	;# 
  2371  0002                     	;# 
  2372  0003                     	;# 
  2373  0004                     	;# 
  2374  0005                     	;# 
  2375  0006                     	;# 
  2376  0007                     	;# 
  2377  0008                     	;# 
  2378  0009                     	;# 
  2379  000A                     	;# 
  2380  000B                     	;# 
  2381  000C                     	;# 
  2382  000D                     	;# 
  2383  000E                     	;# 
  2384  0010                     	;# 
  2385  0011                     	;# 
  2386  0012                     	;# 
  2387  0013                     	;# 
  2388  0014                     	;# 
  2389  0015                     	;# 
  2390  0016                     	;# 
  2391  0017                     	;# 
  2392  0018                     	;# 
  2393  0018                     	;# 
  2394  0019                     	;# 
  2395  001A                     	;# 
  2396  001B                     	;# 
  2397  001C                     	;# 
  2398  001C                     	;# 
  2399  001D                     	;# 
  2400  001E                     	;# 
  2401  001F                     	;# 
  2402  008C                     	;# 
  2403  008D                     	;# 
  2404  008E                     	;# 
  2405  0090                     	;# 
  2406  0091                     	;# 
  2407  0092                     	;# 
  2408  0093                     	;# 
  2409  0094                     	;# 
  2410  0095                     	;# 
  2411  0096                     	;# 
  2412  0097                     	;# 
  2413  0098                     	;# 
  2414  0099                     	;# 
  2415  009A                     	;# 
  2416  009B                     	;# 
  2417  009C                     	;# 
  2418  009D                     	;# 
  2419  009E                     	;# 
  2420  009F                     	;# 
  2421  010C                     	;# 
  2422  010D                     	;# 
  2423  010E                     	;# 
  2424  0111                     	;# 
  2425  0112                     	;# 
  2426  0113                     	;# 
  2427  0114                     	;# 
  2428  0115                     	;# 
  2429  0116                     	;# 
  2430  0117                     	;# 
  2431  0118                     	;# 
  2432  0119                     	;# 
  2433  011A                     	;# 
  2434  011B                     	;# 
  2435  011C                     	;# 
  2436  011D                     	;# 
  2437  018C                     	;# 
  2438  018D                     	;# 
  2439  018E                     	;# 
  2440  0191                     	;# 
  2441  0191                     	;# 
  2442  0192                     	;# 
  2443  0193                     	;# 
  2444  0193                     	;# 
  2445  0194                     	;# 
  2446  0195                     	;# 
  2447  0196                     	;# 
  2448  0197                     	;# 
  2449  0199                     	;# 
  2450  0199                     	;# 
  2451  0199                     	;# 
  2452  019A                     	;# 
  2453  019A                     	;# 
  2454  019A                     	;# 
  2455  019B                     	;# 
  2456  019B                     	;# 
  2457  019B                     	;# 
  2458  019B                     	;# 
  2459  019B                     	;# 
  2460  019C                     	;# 
  2461  019C                     	;# 
  2462  019C                     	;# 
  2463  019D                     	;# 
  2464  019D                     	;# 
  2465  019D                     	;# 
  2466  019E                     	;# 
  2467  019E                     	;# 
  2468  019E                     	;# 
  2469  019F                     	;# 
  2470  019F                     	;# 
  2471  019F                     	;# 
  2472  019F                     	;# 
  2473  019F                     	;# 
  2474  020C                     	;# 
  2475  020D                     	;# 
  2476  020E                     	;# 
  2477  0210                     	;# 
  2478  0211                     	;# 
  2479  0211                     	;# 
  2480  0212                     	;# 
  2481  0212                     	;# 
  2482  0213                     	;# 
  2483  0213                     	;# 
  2484  0214                     	;# 
  2485  0214                     	;# 
  2486  0215                     	;# 
  2487  0215                     	;# 
  2488  0215                     	;# 
  2489  0215                     	;# 
  2490  0216                     	;# 
  2491  0216                     	;# 
  2492  0217                     	;# 
  2493  0217                     	;# 
  2494  021B                     	;# 
  2495  021C                     	;# 
  2496  021D                     	;# 
  2497  021E                     	;# 
  2498  021F                     	;# 
  2499  028C                     	;# 
  2500  028D                     	;# 
  2501  028E                     	;# 
  2502  0291                     	;# 
  2503  0291                     	;# 
  2504  0292                     	;# 
  2505  0293                     	;# 
  2506  0294                     	;# 
  2507  0295                     	;# 
  2508  0295                     	;# 
  2509  0296                     	;# 
  2510  0297                     	;# 
  2511  0298                     	;# 
  2512  0299                     	;# 
  2513  0299                     	;# 
  2514  029A                     	;# 
  2515  029B                     	;# 
  2516  029C                     	;# 
  2517  029E                     	;# 
  2518  029F                     	;# 
  2519  030C                     	;# 
  2520  030D                     	;# 
  2521  030E                     	;# 
  2522  0315                     	;# 
  2523  0316                     	;# 
  2524  0317                     	;# 
  2525  0318                     	;# 
  2526  0319                     	;# 
  2527  031B                     	;# 
  2528  031C                     	;# 
  2529  031D                     	;# 
  2530  031E                     	;# 
  2531  031F                     	;# 
  2532  038C                     	;# 
  2533  038D                     	;# 
  2534  038E                     	;# 
  2535  0390                     	;# 
  2536  0391                     	;# 
  2537  0392                     	;# 
  2538  0393                     	;# 
  2539  0394                     	;# 
  2540  0395                     	;# 
  2541  0396                     	;# 
  2542  0397                     	;# 
  2543  0398                     	;# 
  2544  0399                     	;# 
  2545  039D                     	;# 
  2546  039E                     	;# 
  2547  039F                     	;# 
  2548  040D                     	;# 
  2549  040F                     	;# 
  2550  040F                     	;# 
  2551  0410                     	;# 
  2552  0411                     	;# 
  2553  0412                     	;# 
  2554  0413                     	;# 
  2555  0413                     	;# 
  2556  0414                     	;# 
  2557  0414                     	;# 
  2558  0415                     	;# 
  2559  0416                     	;# 
  2560  0417                     	;# 
  2561  0418                     	;# 
  2562  041A                     	;# 
  2563  041A                     	;# 
  2564  041B                     	;# 
  2565  041B                     	;# 
  2566  041C                     	;# 
  2567  041D                     	;# 
  2568  041E                     	;# 
  2569  041F                     	;# 
  2570  048E                     	;# 
  2571  048E                     	;# 
  2572  048F                     	;# 
  2573  0490                     	;# 
  2574  0491                     	;# 
  2575  0492                     	;# 
  2576  0493                     	;# 
  2577  0493                     	;# 
  2578  0494                     	;# 
  2579  0494                     	;# 
  2580  0495                     	;# 
  2581  0496                     	;# 
  2582  0497                     	;# 
  2583  0498                     	;# 
  2584  049A                     	;# 
  2585  049A                     	;# 
  2586  049B                     	;# 
  2587  049B                     	;# 
  2588  049C                     	;# 
  2589  049D                     	;# 
  2590  049E                     	;# 
  2591  049F                     	;# 
  2592  050F                     	;# 
  2593  0510                     	;# 
  2594  0511                     	;# 
  2595  0512                     	;# 
  2596  0513                     	;# 
  2597  0514                     	;# 
  2598  0515                     	;# 
  2599  0516                     	;# 
  2600  0517                     	;# 
  2601  0518                     	;# 
  2602  0519                     	;# 
  2603  051A                     	;# 
  2604  058D                     	;# 
  2605  058E                     	;# 
  2606  058F                     	;# 
  2607  058F                     	;# 
  2608  058F                     	;# 
  2609  0590                     	;# 
  2610  0590                     	;# 
  2611  0591                     	;# 
  2612  0592                     	;# 
  2613  0592                     	;# 
  2614  0592                     	;# 
  2615  0593                     	;# 
  2616  0593                     	;# 
  2617  0594                     	;# 
  2618  0595                     	;# 
  2619  0595                     	;# 
  2620  0596                     	;# 
  2621  0597                     	;# 
  2622  0597                     	;# 
  2623  0598                     	;# 
  2624  0599                     	;# 
  2625  0599                     	;# 
  2626  0599                     	;# 
  2627  059A                     	;# 
  2628  059A                     	;# 
  2629  059E                     	;# 
  2630  059F                     	;# 
  2631  059F                     	;# 
  2632  0614                     	;# 
  2633  0614                     	;# 
  2634  0615                     	;# 
  2635  0616                     	;# 
  2636  0617                     	;# 
  2637  0617                     	;# 
  2638  0618                     	;# 
  2639  0619                     	;# 
  2640  061A                     	;# 
  2641  061A                     	;# 
  2642  061B                     	;# 
  2643  061C                     	;# 
  2644  068D                     	;# 
  2645  068E                     	;# 
  2646  068F                     	;# 
  2647  0690                     	;# 
  2648  0691                     	;# 
  2649  0692                     	;# 
  2650  0693                     	;# 
  2651  0694                     	;# 
  2652  0695                     	;# 
  2653  0696                     	;# 
  2654  0697                     	;# 
  2655  0698                     	;# 
  2656  0699                     	;# 
  2657  069A                     	;# 
  2658  069B                     	;# 
  2659  069C                     	;# 
  2660  069D                     	;# 
  2661  069E                     	;# 
  2662  069F                     	;# 
  2663  070D                     	;# 
  2664  070E                     	;# 
  2665  070F                     	;# 
  2666  0710                     	;# 
  2667  0711                     	;# 
  2668  0712                     	;# 
  2669  0713                     	;# 
  2670  0714                     	;# 
  2671  0715                     	;# 
  2672  0716                     	;# 
  2673  0717                     	;# 
  2674  0718                     	;# 
  2675  0719                     	;# 
  2676  071A                     	;# 
  2677  071B                     	;# 
  2678  071C                     	;# 
  2679  071D                     	;# 
  2680  071E                     	;# 
  2681  071F                     	;# 
  2682  078E                     	;# 
  2683  078F                     	;# 
  2684  0790                     	;# 
  2685  0791                     	;# 
  2686  0792                     	;# 
  2687  0793                     	;# 
  2688  0794                     	;# 
  2689  0795                     	;# 
  2690  0796                     	;# 
  2691  0797                     	;# 
  2692  0798                     	;# 
  2693  0799                     	;# 
  2694  079A                     	;# 
  2695  079B                     	;# 
  2696  079C                     	;# 
  2697  079D                     	;# 
  2698  079E                     	;# 
  2699  079F                     	;# 
  2700  080D                     	;# 
  2701  080E                     	;# 
  2702  080F                     	;# 
  2703  0810                     	;# 
  2704  0811                     	;# 
  2705  0812                     	;# 
  2706  0813                     	;# 
  2707  0814                     	;# 
  2708  0815                     	;# 
  2709  0816                     	;# 
  2710  0817                     	;# 
  2711  0818                     	;# 
  2712  0819                     	;# 
  2713  081A                     	;# 
  2714  081B                     	;# 
  2715  081C                     	;# 
  2716  081D                     	;# 
  2717  081E                     	;# 
  2718  081F                     	;# 
  2719  090C                     	;# 
  2720  090D                     	;# 
  2721  090E                     	;# 
  2722  090F                     	;# 
  2723  0910                     	;# 
  2724  0911                     	;# 
  2725  0912                     	;# 
  2726  0913                     	;# 
  2727  0914                     	;# 
  2728  0915                     	;# 
  2729  0916                     	;# 
  2730  0917                     	;# 
  2731  0D8E                     	;# 
  2732  0D8F                     	;# 
  2733  0D90                     	;# 
  2734  0D91                     	;# 
  2735  0D91                     	;# 
  2736  0D92                     	;# 
  2737  0D93                     	;# 
  2738  0D93                     	;# 
  2739  0D94                     	;# 
  2740  0D95                     	;# 
  2741  0D95                     	;# 
  2742  0D96                     	;# 
  2743  0D97                     	;# 
  2744  0D97                     	;# 
  2745  0D98                     	;# 
  2746  0D99                     	;# 
  2747  0D99                     	;# 
  2748  0D9A                     	;# 
  2749  0D9B                     	;# 
  2750  0D9C                     	;# 
  2751  0D9C                     	;# 
  2752  0D9D                     	;# 
  2753  0D9D                     	;# 
  2754  0D9E                     	;# 
  2755  0D9F                     	;# 
  2756  0DA0                     	;# 
  2757  0DA1                     	;# 
  2758  0DA1                     	;# 
  2759  0DA2                     	;# 
  2760  0DA3                     	;# 
  2761  0DA3                     	;# 
  2762  0DA4                     	;# 
  2763  0DA5                     	;# 
  2764  0DA5                     	;# 
  2765  0DA6                     	;# 
  2766  0DA7                     	;# 
  2767  0DA7                     	;# 
  2768  0DA8                     	;# 
  2769  0DA9                     	;# 
  2770  0DA9                     	;# 
  2771  0DAA                     	;# 
  2772  0DAB                     	;# 
  2773  0DAC                     	;# 
  2774  0DAC                     	;# 
  2775  0DAD                     	;# 
  2776  0DAD                     	;# 
  2777  0DAE                     	;# 
  2778  0DAF                     	;# 
  2779  0DB0                     	;# 
  2780  0DB1                     	;# 
  2781  0DB1                     	;# 
  2782  0DB2                     	;# 
  2783  0DB3                     	;# 
  2784  0DB3                     	;# 
  2785  0DB4                     	;# 
  2786  0DB5                     	;# 
  2787  0DB5                     	;# 
  2788  0DB6                     	;# 
  2789  0DB7                     	;# 
  2790  0DB7                     	;# 
  2791  0DB8                     	;# 
  2792  0DB9                     	;# 
  2793  0DB9                     	;# 
  2794  0DBA                     	;# 
  2795  0DBB                     	;# 
  2796  0DBC                     	;# 
  2797  0DBC                     	;# 
  2798  0DBD                     	;# 
  2799  0DBD                     	;# 
  2800  0DBE                     	;# 
  2801  0DBF                     	;# 
  2802  0DC0                     	;# 
  2803  0E0C                     	;# 
  2804  0E0D                     	;# 
  2805  0E0E                     	;# 
  2806  0E0F                     	;# 
  2807  0E10                     	;# 
  2808  0E11                     	;# 
  2809  0E12                     	;# 
  2810  0E13                     	;# 
  2811  0E14                     	;# 
  2812  0E15                     	;# 
  2813  0E15                     	;# 
  2814  0E15                     	;# 
  2815  0E16                     	;# 
  2816  0E16                     	;# 
  2817  0E16                     	;# 
  2818  0E17                     	;# 
  2819  0E17                     	;# 
  2820  0E17                     	;# 
  2821  0E18                     	;# 
  2822  0E18                     	;# 
  2823  0E18                     	;# 
  2824  0E19                     	;# 
  2825  0E1A                     	;# 
  2826  0E1B                     	;# 
  2827  0E1D                     	;# 
  2828  0E1E                     	;# 
  2829  0E1F                     	;# 
  2830  0E21                     	;# 
  2831  0E22                     	;# 
  2832  0E23                     	;# 
  2833  0E24                     	;# 
  2834  0E25                     	;# 
  2835  0E26                     	;# 
  2836  0E27                     	;# 
  2837  0E28                     	;# 
  2838  0E29                     	;# 
  2839  0E2D                     	;# 
  2840  0E2E                     	;# 
  2841  0E2F                     	;# 
  2842  0E30                     	;# 
  2843  0E31                     	;# 
  2844  0E32                     	;# 
  2845  0E35                     	;# 
  2846  0E36                     	;# 
  2847  0E37                     	;# 
  2848  0E38                     	;# 
  2849  0E39                     	;# 
  2850  0E3A                     	;# 
  2851  0E3B                     	;# 
  2852  0E3C                     	;# 
  2853  0E3D                     	;# 
  2854  0E3E                     	;# 
  2855  0E90                     	;# 
  2856  0E91                     	;# 
  2857  0E92                     	;# 
  2858  0E93                     	;# 
  2859  0E94                     	;# 
  2860  0E95                     	;# 
  2861  0E96                     	;# 
  2862  0E97                     	;# 
  2863  0E98                     	;# 
  2864  0E99                     	;# 
  2865  0E9A                     	;# 
  2866  0E9B                     	;# 
  2867  0E9C                     	;# 
  2868  0E9D                     	;# 
  2869  0E9E                     	;# 
  2870  0E9F                     	;# 
  2871  0EA0                     	;# 
  2872  0EA1                     	;# 
  2873  0EA2                     	;# 
  2874  0EA3                     	;# 
  2875  0EA4                     	;# 
  2876  0EA5                     	;# 
  2877  0EA6                     	;# 
  2878  0EA7                     	;# 
  2879  0F0F                     	;# 
  2880  0F10                     	;# 
  2881  0F11                     	;# 
  2882  0F12                     	;# 
  2883  0F13                     	;# 
  2884  0F14                     	;# 
  2885  0F15                     	;# 
  2886  0F16                     	;# 
  2887  0F17                     	;# 
  2888  0F18                     	;# 
  2889  0F19                     	;# 
  2890  0F1A                     	;# 
  2891  0F1B                     	;# 
  2892  0F1C                     	;# 
  2893  0F1D                     	;# 
  2894  0F1E                     	;# 
  2895  0F1F                     	;# 
  2896  0F20                     	;# 
  2897  0F21                     	;# 
  2898  0F22                     	;# 
  2899  0F23                     	;# 
  2900  0F24                     	;# 
  2901  0F25                     	;# 
  2902  0F26                     	;# 
  2903  0F27                     	;# 
  2904  0F28                     	;# 
  2905  0F29                     	;# 
  2906  0F2A                     	;# 
  2907  0F2B                     	;# 
  2908  0F2C                     	;# 
  2909  0F2D                     	;# 
  2910  0F2E                     	;# 
  2911  0F2F                     	;# 
  2912  0F30                     	;# 
  2913  0F31                     	;# 
  2914  0F32                     	;# 
  2915  0F33                     	;# 
  2916  0F34                     	;# 
  2917  0F35                     	;# 
  2918  0F36                     	;# 
  2919  0F37                     	;# 
  2920  0FE4                     	;# 
  2921  0FE5                     	;# 
  2922  0FE6                     	;# 
  2923  0FE7                     	;# 
  2924  0FE8                     	;# 
  2925  0FE9                     	;# 
  2926  0FEA                     	;# 
  2927  0FEB                     	;# 
  2928  0FED                     	;# 
  2929  0FEE                     	;# 
  2930  0FEF                     	;# 
  2931  0000                     	;# 
  2932  0001                     	;# 
  2933  0002                     	;# 
  2934  0003                     	;# 
  2935  0004                     	;# 
  2936  0005                     	;# 
  2937  0006                     	;# 
  2938  0007                     	;# 
  2939  0008                     	;# 
  2940  0009                     	;# 
  2941  000A                     	;# 
  2942  000B                     	;# 
  2943  000C                     	;# 
  2944  000D                     	;# 
  2945  000E                     	;# 
  2946  0010                     	;# 
  2947  0011                     	;# 
  2948  0012                     	;# 
  2949  0013                     	;# 
  2950  0014                     	;# 
  2951  0015                     	;# 
  2952  0016                     	;# 
  2953  0017                     	;# 
  2954  0018                     	;# 
  2955  0018                     	;# 
  2956  0019                     	;# 
  2957  001A                     	;# 
  2958  001B                     	;# 
  2959  001C                     	;# 
  2960  001C                     	;# 
  2961  001D                     	;# 
  2962  001E                     	;# 
  2963  001F                     	;# 
  2964  008C                     	;# 
  2965  008D                     	;# 
  2966  008E                     	;# 
  2967  0090                     	;# 
  2968  0091                     	;# 
  2969  0092                     	;# 
  2970  0093                     	;# 
  2971  0094                     	;# 
  2972  0095                     	;# 
  2973  0096                     	;# 
  2974  0097                     	;# 
  2975  0098                     	;# 
  2976  0099                     	;# 
  2977  009A                     	;# 
  2978  009B                     	;# 
  2979  009C                     	;# 
  2980  009D                     	;# 
  2981  009E                     	;# 
  2982  009F                     	;# 
  2983  010C                     	;# 
  2984  010D                     	;# 
  2985  010E                     	;# 
  2986  0111                     	;# 
  2987  0112                     	;# 
  2988  0113                     	;# 
  2989  0114                     	;# 
  2990  0115                     	;# 
  2991  0116                     	;# 
  2992  0117                     	;# 
  2993  0118                     	;# 
  2994  0119                     	;# 
  2995  011A                     	;# 
  2996  011B                     	;# 
  2997  011C                     	;# 
  2998  011D                     	;# 
  2999  018C                     	;# 
  3000  018D                     	;# 
  3001  018E                     	;# 
  3002  0191                     	;# 
  3003  0191                     	;# 
  3004  0192                     	;# 
  3005  0193                     	;# 
  3006  0193                     	;# 
  3007  0194                     	;# 
  3008  0195                     	;# 
  3009  0196                     	;# 
  3010  0197                     	;# 
  3011  0199                     	;# 
  3012  0199                     	;# 
  3013  0199                     	;# 
  3014  019A                     	;# 
  3015  019A                     	;# 
  3016  019A                     	;# 
  3017  019B                     	;# 
  3018  019B                     	;# 
  3019  019B                     	;# 
  3020  019B                     	;# 
  3021  019B                     	;# 
  3022  019C                     	;# 
  3023  019C                     	;# 
  3024  019C                     	;# 
  3025  019D                     	;# 
  3026  019D                     	;# 
  3027  019D                     	;# 
  3028  019E                     	;# 
  3029  019E                     	;# 
  3030  019E                     	;# 
  3031  019F                     	;# 
  3032  019F                     	;# 
  3033  019F                     	;# 
  3034  019F                     	;# 
  3035  019F                     	;# 
  3036  020C                     	;# 
  3037  020D                     	;# 
  3038  020E                     	;# 
  3039  0210                     	;# 
  3040  0211                     	;# 
  3041  0211                     	;# 
  3042  0212                     	;# 
  3043  0212                     	;# 
  3044  0213                     	;# 
  3045  0213                     	;# 
  3046  0214                     	;# 
  3047  0214                     	;# 
  3048  0215                     	;# 
  3049  0215                     	;# 
  3050  0215                     	;# 
  3051  0215                     	;# 
  3052  0216                     	;# 
  3053  0216                     	;# 
  3054  0217                     	;# 
  3055  0217                     	;# 
  3056  021B                     	;# 
  3057  021C                     	;# 
  3058  021D                     	;# 
  3059  021E                     	;# 
  3060  021F                     	;# 
  3061  028C                     	;# 
  3062  028D                     	;# 
  3063  028E                     	;# 
  3064  0291                     	;# 
  3065  0291                     	;# 
  3066  0292                     	;# 
  3067  0293                     	;# 
  3068  0294                     	;# 
  3069  0295                     	;# 
  3070  0295                     	;# 
  3071  0296                     	;# 
  3072  0297                     	;# 
  3073  0298                     	;# 
  3074  0299                     	;# 
  3075  0299                     	;# 
  3076  029A                     	;# 
  3077  029B                     	;# 
  3078  029C                     	;# 
  3079  029E                     	;# 
  3080  029F                     	;# 
  3081  030C                     	;# 
  3082  030D                     	;# 
  3083  030E                     	;# 
  3084  0315                     	;# 
  3085  0316                     	;# 
  3086  0317                     	;# 
  3087  0318                     	;# 
  3088  0319                     	;# 
  3089  031B                     	;# 
  3090  031C                     	;# 
  3091  031D                     	;# 
  3092  031E                     	;# 
  3093  031F                     	;# 
  3094  038C                     	;# 
  3095  038D                     	;# 
  3096  038E                     	;# 
  3097  0390                     	;# 
  3098  0391                     	;# 
  3099  0392                     	;# 
  3100  0393                     	;# 
  3101  0394                     	;# 
  3102  0395                     	;# 
  3103  0396                     	;# 
  3104  0397                     	;# 
  3105  0398                     	;# 
  3106  0399                     	;# 
  3107  039D                     	;# 
  3108  039E                     	;# 
  3109  039F                     	;# 
  3110  040D                     	;# 
  3111  040F                     	;# 
  3112  040F                     	;# 
  3113  0410                     	;# 
  3114  0411                     	;# 
  3115  0412                     	;# 
  3116  0413                     	;# 
  3117  0413                     	;# 
  3118  0414                     	;# 
  3119  0414                     	;# 
  3120  0415                     	;# 
  3121  0416                     	;# 
  3122  0417                     	;# 
  3123  0418                     	;# 
  3124  041A                     	;# 
  3125  041A                     	;# 
  3126  041B                     	;# 
  3127  041B                     	;# 
  3128  041C                     	;# 
  3129  041D                     	;# 
  3130  041E                     	;# 
  3131  041F                     	;# 
  3132  048E                     	;# 
  3133  048E                     	;# 
  3134  048F                     	;# 
  3135  0490                     	;# 
  3136  0491                     	;# 
  3137  0492                     	;# 
  3138  0493                     	;# 
  3139  0493                     	;# 
  3140  0494                     	;# 
  3141  0494                     	;# 
  3142  0495                     	;# 
  3143  0496                     	;# 
  3144  0497                     	;# 
  3145  0498                     	;# 
  3146  049A                     	;# 
  3147  049A                     	;# 
  3148  049B                     	;# 
  3149  049B                     	;# 
  3150  049C                     	;# 
  3151  049D                     	;# 
  3152  049E                     	;# 
  3153  049F                     	;# 
  3154  050F                     	;# 
  3155  0510                     	;# 
  3156  0511                     	;# 
  3157  0512                     	;# 
  3158  0513                     	;# 
  3159  0514                     	;# 
  3160  0515                     	;# 
  3161  0516                     	;# 
  3162  0517                     	;# 
  3163  0518                     	;# 
  3164  0519                     	;# 
  3165  051A                     	;# 
  3166  058D                     	;# 
  3167  058E                     	;# 
  3168  058F                     	;# 
  3169  058F                     	;# 
  3170  058F                     	;# 
  3171  0590                     	;# 
  3172  0590                     	;# 
  3173  0591                     	;# 
  3174  0592                     	;# 
  3175  0592                     	;# 
  3176  0592                     	;# 
  3177  0593                     	;# 
  3178  0593                     	;# 
  3179  0594                     	;# 
  3180  0595                     	;# 
  3181  0595                     	;# 
  3182  0596                     	;# 
  3183  0597                     	;# 
  3184  0597                     	;# 
  3185  0598                     	;# 
  3186  0599                     	;# 
  3187  0599                     	;# 
  3188  0599                     	;# 
  3189  059A                     	;# 
  3190  059A                     	;# 
  3191  059E                     	;# 
  3192  059F                     	;# 
  3193  059F                     	;# 
  3194  0614                     	;# 
  3195  0614                     	;# 
  3196  0615                     	;# 
  3197  0616                     	;# 
  3198  0617                     	;# 
  3199  0617                     	;# 
  3200  0618                     	;# 
  3201  0619                     	;# 
  3202  061A                     	;# 
  3203  061A                     	;# 
  3204  061B                     	;# 
  3205  061C                     	;# 
  3206  068D                     	;# 
  3207  068E                     	;# 
  3208  068F                     	;# 
  3209  0690                     	;# 
  3210  0691                     	;# 
  3211  0692                     	;# 
  3212  0693                     	;# 
  3213  0694                     	;# 
  3214  0695                     	;# 
  3215  0696                     	;# 
  3216  0697                     	;# 
  3217  0698                     	;# 
  3218  0699                     	;# 
  3219  069A                     	;# 
  3220  069B                     	;# 
  3221  069C                     	;# 
  3222  069D                     	;# 
  3223  069E                     	;# 
  3224  069F                     	;# 
  3225  070D                     	;# 
  3226  070E                     	;# 
  3227  070F                     	;# 
  3228  0710                     	;# 
  3229  0711                     	;# 
  3230  0712                     	;# 
  3231  0713                     	;# 
  3232  0714                     	;# 
  3233  0715                     	;# 
  3234  0716                     	;# 
  3235  0717                     	;# 
  3236  0718                     	;# 
  3237  0719                     	;# 
  3238  071A                     	;# 
  3239  071B                     	;# 
  3240  071C                     	;# 
  3241  071D                     	;# 
  3242  071E                     	;# 
  3243  071F                     	;# 
  3244  078E                     	;# 
  3245  078F                     	;# 
  3246  0790                     	;# 
  3247  0791                     	;# 
  3248  0792                     	;# 
  3249  0793                     	;# 
  3250  0794                     	;# 
  3251  0795                     	;# 
  3252  0796                     	;# 
  3253  0797                     	;# 
  3254  0798                     	;# 
  3255  0799                     	;# 
  3256  079A                     	;# 
  3257  079B                     	;# 
  3258  079C                     	;# 
  3259  079D                     	;# 
  3260  079E                     	;# 
  3261  079F                     	;# 
  3262  080D                     	;# 
  3263  080E                     	;# 
  3264  080F                     	;# 
  3265  0810                     	;# 
  3266  0811                     	;# 
  3267  0812                     	;# 
  3268  0813                     	;# 
  3269  0814                     	;# 
  3270  0815                     	;# 
  3271  0816                     	;# 
  3272  0817                     	;# 
  3273  0818                     	;# 
  3274  0819                     	;# 
  3275  081A                     	;# 
  3276  081B                     	;# 
  3277  081C                     	;# 
  3278  081D                     	;# 
  3279  081E                     	;# 
  3280  081F                     	;# 
  3281  090C                     	;# 
  3282  090D                     	;# 
  3283  090E                     	;# 
  3284  090F                     	;# 
  3285  0910                     	;# 
  3286  0911                     	;# 
  3287  0912                     	;# 
  3288  0913                     	;# 
  3289  0914                     	;# 
  3290  0915                     	;# 
  3291  0916                     	;# 
  3292  0917                     	;# 
  3293  0D8E                     	;# 
  3294  0D8F                     	;# 
  3295  0D90                     	;# 
  3296  0D91                     	;# 
  3297  0D91                     	;# 
  3298  0D92                     	;# 
  3299  0D93                     	;# 
  3300  0D93                     	;# 
  3301  0D94                     	;# 
  3302  0D95                     	;# 
  3303  0D95                     	;# 
  3304  0D96                     	;# 
  3305  0D97                     	;# 
  3306  0D97                     	;# 
  3307  0D98                     	;# 
  3308  0D99                     	;# 
  3309  0D99                     	;# 
  3310  0D9A                     	;# 
  3311  0D9B                     	;# 
  3312  0D9C                     	;# 
  3313  0D9C                     	;# 
  3314  0D9D                     	;# 
  3315  0D9D                     	;# 
  3316  0D9E                     	;# 
  3317  0D9F                     	;# 
  3318  0DA0                     	;# 
  3319  0DA1                     	;# 
  3320  0DA1                     	;# 
  3321  0DA2                     	;# 
  3322  0DA3                     	;# 
  3323  0DA3                     	;# 
  3324  0DA4                     	;# 
  3325  0DA5                     	;# 
  3326  0DA5                     	;# 
  3327  0DA6                     	;# 
  3328  0DA7                     	;# 
  3329  0DA7                     	;# 
  3330  0DA8                     	;# 
  3331  0DA9                     	;# 
  3332  0DA9                     	;# 
  3333  0DAA                     	;# 
  3334  0DAB                     	;# 
  3335  0DAC                     	;# 
  3336  0DAC                     	;# 
  3337  0DAD                     	;# 
  3338  0DAD                     	;# 
  3339  0DAE                     	;# 
  3340  0DAF                     	;# 
  3341  0DB0                     	;# 
  3342  0DB1                     	;# 
  3343  0DB1                     	;# 
  3344  0DB2                     	;# 
  3345  0DB3                     	;# 
  3346  0DB3                     	;# 
  3347  0DB4                     	;# 
  3348  0DB5                     	;# 
  3349  0DB5                     	;# 
  3350  0DB6                     	;# 
  3351  0DB7                     	;# 
  3352  0DB7                     	;# 
  3353  0DB8                     	;# 
  3354  0DB9                     	;# 
  3355  0DB9                     	;# 
  3356  0DBA                     	;# 
  3357  0DBB                     	;# 
  3358  0DBC                     	;# 
  3359  0DBC                     	;# 
  3360  0DBD                     	;# 
  3361  0DBD                     	;# 
  3362  0DBE                     	;# 
  3363  0DBF                     	;# 
  3364  0DC0                     	;# 
  3365  0E0C                     	;# 
  3366  0E0D                     	;# 
  3367  0E0E                     	;# 
  3368  0E0F                     	;# 
  3369  0E10                     	;# 
  3370  0E11                     	;# 
  3371  0E12                     	;# 
  3372  0E13                     	;# 
  3373  0E14                     	;# 
  3374  0E15                     	;# 
  3375  0E15                     	;# 
  3376  0E15                     	;# 
  3377  0E16                     	;# 
  3378  0E16                     	;# 
  3379  0E16                     	;# 
  3380  0E17                     	;# 
  3381  0E17                     	;# 
  3382  0E17                     	;# 
  3383  0E18                     	;# 
  3384  0E18                     	;# 
  3385  0E18                     	;# 
  3386  0E19                     	;# 
  3387  0E1A                     	;# 
  3388  0E1B                     	;# 
  3389  0E1D                     	;# 
  3390  0E1E                     	;# 
  3391  0E1F                     	;# 
  3392  0E21                     	;# 
  3393  0E22                     	;# 
  3394  0E23                     	;# 
  3395  0E24                     	;# 
  3396  0E25                     	;# 
  3397  0E26                     	;# 
  3398  0E27                     	;# 
  3399  0E28                     	;# 
  3400  0E29                     	;# 
  3401  0E2D                     	;# 
  3402  0E2E                     	;# 
  3403  0E2F                     	;# 
  3404  0E30                     	;# 
  3405  0E31                     	;# 
  3406  0E32                     	;# 
  3407  0E35                     	;# 
  3408  0E36                     	;# 
  3409  0E37                     	;# 
  3410  0E38                     	;# 
  3411  0E39                     	;# 
  3412  0E3A                     	;# 
  3413  0E3B                     	;# 
  3414  0E3C                     	;# 
  3415  0E3D                     	;# 
  3416  0E3E                     	;# 
  3417  0E90                     	;# 
  3418  0E91                     	;# 
  3419  0E92                     	;# 
  3420  0E93                     	;# 
  3421  0E94                     	;# 
  3422  0E95                     	;# 
  3423  0E96                     	;# 
  3424  0E97                     	;# 
  3425  0E98                     	;# 
  3426  0E99                     	;# 
  3427  0E9A                     	;# 
  3428  0E9B                     	;# 
  3429  0E9C                     	;# 
  3430  0E9D                     	;# 
  3431  0E9E                     	;# 
  3432  0E9F                     	;# 
  3433  0EA0                     	;# 
  3434  0EA1                     	;# 
  3435  0EA2                     	;# 
  3436  0EA3                     	;# 
  3437  0EA4                     	;# 
  3438  0EA5                     	;# 
  3439  0EA6                     	;# 
  3440  0EA7                     	;# 
  3441  0F0F                     	;# 
  3442  0F10                     	;# 
  3443  0F11                     	;# 
  3444  0F12                     	;# 
  3445  0F13                     	;# 
  3446  0F14                     	;# 
  3447  0F15                     	;# 
  3448  0F16                     	;# 
  3449  0F17                     	;# 
  3450  0F18                     	;# 
  3451  0F19                     	;# 
  3452  0F1A                     	;# 
  3453  0F1B                     	;# 
  3454  0F1C                     	;# 
  3455  0F1D                     	;# 
  3456  0F1E                     	;# 
  3457  0F1F                     	;# 
  3458  0F20                     	;# 
  3459  0F21                     	;# 
  3460  0F22                     	;# 
  3461  0F23                     	;# 
  3462  0F24                     	;# 
  3463  0F25                     	;# 
  3464  0F26                     	;# 
  3465  0F27                     	;# 
  3466  0F28                     	;# 
  3467  0F29                     	;# 
  3468  0F2A                     	;# 
  3469  0F2B                     	;# 
  3470  0F2C                     	;# 
  3471  0F2D                     	;# 
  3472  0F2E                     	;# 
  3473  0F2F                     	;# 
  3474  0F30                     	;# 
  3475  0F31                     	;# 
  3476  0F32                     	;# 
  3477  0F33                     	;# 
  3478  0F34                     	;# 
  3479  0F35                     	;# 
  3480  0F36                     	;# 
  3481  0F37                     	;# 
  3482  0FE4                     	;# 
  3483  0FE5                     	;# 
  3484  0FE6                     	;# 
  3485  0FE7                     	;# 
  3486  0FE8                     	;# 
  3487  0FE9                     	;# 
  3488  0FEA                     	;# 
  3489  0FEB                     	;# 
  3490  0FED                     	;# 
  3491  0FEE                     	;# 
  3492  0FEF                     	;# 
  3493  0000                     	;# 
  3494  0001                     	;# 
  3495  0002                     	;# 
  3496  0003                     	;# 
  3497  0004                     	;# 
  3498  0005                     	;# 
  3499  0006                     	;# 
  3500  0007                     	;# 
  3501  0008                     	;# 
  3502  0009                     	;# 
  3503  000A                     	;# 
  3504  000B                     	;# 
  3505  000C                     	;# 
  3506  000D                     	;# 
  3507  000E                     	;# 
  3508  0010                     	;# 
  3509  0011                     	;# 
  3510  0012                     	;# 
  3511  0013                     	;# 
  3512  0014                     	;# 
  3513  0015                     	;# 
  3514  0016                     	;# 
  3515  0017                     	;# 
  3516  0018                     	;# 
  3517  0018                     	;# 
  3518  0019                     	;# 
  3519  001A                     	;# 
  3520  001B                     	;# 
  3521  001C                     	;# 
  3522  001C                     	;# 
  3523  001D                     	;# 
  3524  001E                     	;# 
  3525  001F                     	;# 
  3526  008C                     	;# 
  3527  008D                     	;# 
  3528  008E                     	;# 
  3529  0090                     	;# 
  3530  0091                     	;# 
  3531  0092                     	;# 
  3532  0093                     	;# 
  3533  0094                     	;# 
  3534  0095                     	;# 
  3535  0096                     	;# 
  3536  0097                     	;# 
  3537  0098                     	;# 
  3538  0099                     	;# 
  3539  009A                     	;# 
  3540  009B                     	;# 
  3541  009C                     	;# 
  3542  009D                     	;# 
  3543  009E                     	;# 
  3544  009F                     	;# 
  3545  010C                     	;# 
  3546  010D                     	;# 
  3547  010E                     	;# 
  3548  0111                     	;# 
  3549  0112                     	;# 
  3550  0113                     	;# 
  3551  0114                     	;# 
  3552  0115                     	;# 
  3553  0116                     	;# 
  3554  0117                     	;# 
  3555  0118                     	;# 
  3556  0119                     	;# 
  3557  011A                     	;# 
  3558  011B                     	;# 
  3559  011C                     	;# 
  3560  011D                     	;# 
  3561  018C                     	;# 
  3562  018D                     	;# 
  3563  018E                     	;# 
  3564  0191                     	;# 
  3565  0191                     	;# 
  3566  0192                     	;# 
  3567  0193                     	;# 
  3568  0193                     	;# 
  3569  0194                     	;# 
  3570  0195                     	;# 
  3571  0196                     	;# 
  3572  0197                     	;# 
  3573  0199                     	;# 
  3574  0199                     	;# 
  3575  0199                     	;# 
  3576  019A                     	;# 
  3577  019A                     	;# 
  3578  019A                     	;# 
  3579  019B                     	;# 
  3580  019B                     	;# 
  3581  019B                     	;# 
  3582  019B                     	;# 
  3583  019B                     	;# 
  3584  019C                     	;# 
  3585  019C                     	;# 
  3586  019C                     	;# 
  3587  019D                     	;# 
  3588  019D                     	;# 
  3589  019D                     	;# 
  3590  019E                     	;# 
  3591  019E                     	;# 
  3592  019E                     	;# 
  3593  019F                     	;# 
  3594  019F                     	;# 
  3595  019F                     	;# 
  3596  019F                     	;# 
  3597  019F                     	;# 
  3598  020C                     	;# 
  3599  020D                     	;# 
  3600  020E                     	;# 
  3601  0210                     	;# 
  3602  0211                     	;# 
  3603  0211                     	;# 
  3604  0212                     	;# 
  3605  0212                     	;# 
  3606  0213                     	;# 
  3607  0213                     	;# 
  3608  0214                     	;# 
  3609  0214                     	;# 
  3610  0215                     	;# 
  3611  0215                     	;# 
  3612  0215                     	;# 
  3613  0215                     	;# 
  3614  0216                     	;# 
  3615  0216                     	;# 
  3616  0217                     	;# 
  3617  0217                     	;# 
  3618  021B                     	;# 
  3619  021C                     	;# 
  3620  021D                     	;# 
  3621  021E                     	;# 
  3622  021F                     	;# 
  3623  028C                     	;# 
  3624  028D                     	;# 
  3625  028E                     	;# 
  3626  0291                     	;# 
  3627  0291                     	;# 
  3628  0292                     	;# 
  3629  0293                     	;# 
  3630  0294                     	;# 
  3631  0295                     	;# 
  3632  0295                     	;# 
  3633  0296                     	;# 
  3634  0297                     	;# 
  3635  0298                     	;# 
  3636  0299                     	;# 
  3637  0299                     	;# 
  3638  029A                     	;# 
  3639  029B                     	;# 
  3640  029C                     	;# 
  3641  029E                     	;# 
  3642  029F                     	;# 
  3643  030C                     	;# 
  3644  030D                     	;# 
  3645  030E                     	;# 
  3646  0315                     	;# 
  3647  0316                     	;# 
  3648  0317                     	;# 
  3649  0318                     	;# 
  3650  0319                     	;# 
  3651  031B                     	;# 
  3652  031C                     	;# 
  3653  031D                     	;# 
  3654  031E                     	;# 
  3655  031F                     	;# 
  3656  038C                     	;# 
  3657  038D                     	;# 
  3658  038E                     	;# 
  3659  0390                     	;# 
  3660  0391                     	;# 
  3661  0392                     	;# 
  3662  0393                     	;# 
  3663  0394                     	;# 
  3664  0395                     	;# 
  3665  0396                     	;# 
  3666  0397                     	;# 
  3667  0398                     	;# 
  3668  0399                     	;# 
  3669  039D                     	;# 
  3670  039E                     	;# 
  3671  039F                     	;# 
  3672  040D                     	;# 
  3673  040F                     	;# 
  3674  040F                     	;# 
  3675  0410                     	;# 
  3676  0411                     	;# 
  3677  0412                     	;# 
  3678  0413                     	;# 
  3679  0413                     	;# 
  3680  0414                     	;# 
  3681  0414                     	;# 
  3682  0415                     	;# 
  3683  0416                     	;# 
  3684  0417                     	;# 
  3685  0418                     	;# 
  3686  041A                     	;# 
  3687  041A                     	;# 
  3688  041B                     	;# 
  3689  041B                     	;# 
  3690  041C                     	;# 
  3691  041D                     	;# 
  3692  041E                     	;# 
  3693  041F                     	;# 
  3694  048E                     	;# 
  3695  048E                     	;# 
  3696  048F                     	;# 
  3697  0490                     	;# 
  3698  0491                     	;# 
  3699  0492                     	;# 
  3700  0493                     	;# 
  3701  0493                     	;# 
  3702  0494                     	;# 
  3703  0494                     	;# 
  3704  0495                     	;# 
  3705  0496                     	;# 
  3706  0497                     	;# 
  3707  0498                     	;# 
  3708  049A                     	;# 
  3709  049A                     	;# 
  3710  049B                     	;# 
  3711  049B                     	;# 
  3712  049C                     	;# 
  3713  049D                     	;# 
  3714  049E                     	;# 
  3715  049F                     	;# 
  3716  050F                     	;# 
  3717  0510                     	;# 
  3718  0511                     	;# 
  3719  0512                     	;# 
  3720  0513                     	;# 
  3721  0514                     	;# 
  3722  0515                     	;# 
  3723  0516                     	;# 
  3724  0517                     	;# 
  3725  0518                     	;# 
  3726  0519                     	;# 
  3727  051A                     	;# 
  3728  058D                     	;# 
  3729  058E                     	;# 
  3730  058F                     	;# 
  3731  058F                     	;# 
  3732  058F                     	;# 
  3733  0590                     	;# 
  3734  0590                     	;# 
  3735  0591                     	;# 
  3736  0592                     	;# 
  3737  0592                     	;# 
  3738  0592                     	;# 
  3739  0593                     	;# 
  3740  0593                     	;# 
  3741  0594                     	;# 
  3742  0595                     	;# 
  3743  0595                     	;# 
  3744  0596                     	;# 
  3745  0597                     	;# 
  3746  0597                     	;# 
  3747  0598                     	;# 
  3748  0599                     	;# 
  3749  0599                     	;# 
  3750  0599                     	;# 
  3751  059A                     	;# 
  3752  059A                     	;# 
  3753  059E                     	;# 
  3754  059F                     	;# 
  3755  059F                     	;# 
  3756  0614                     	;# 
  3757  0614                     	;# 
  3758  0615                     	;# 
  3759  0616                     	;# 
  3760  0617                     	;# 
  3761  0617                     	;# 
  3762  0618                     	;# 
  3763  0619                     	;# 
  3764  061A                     	;# 
  3765  061A                     	;# 
  3766  061B                     	;# 
  3767  061C                     	;# 
  3768  068D                     	;# 
  3769  068E                     	;# 
  3770  068F                     	;# 
  3771  0690                     	;# 
  3772  0691                     	;# 
  3773  0692                     	;# 
  3774  0693                     	;# 
  3775  0694                     	;# 
  3776  0695                     	;# 
  3777  0696                     	;# 
  3778  0697                     	;# 
  3779  0698                     	;# 
  3780  0699                     	;# 
  3781  069A                     	;# 
  3782  069B                     	;# 
  3783  069C                     	;# 
  3784  069D                     	;# 
  3785  069E                     	;# 
  3786  069F                     	;# 
  3787  070D                     	;# 
  3788  070E                     	;# 
  3789  070F                     	;# 
  3790  0710                     	;# 
  3791  0711                     	;# 
  3792  0712                     	;# 
  3793  0713                     	;# 
  3794  0714                     	;# 
  3795  0715                     	;# 
  3796  0716                     	;# 
  3797  0717                     	;# 
  3798  0718                     	;# 
  3799  0719                     	;# 
  3800  071A                     	;# 
  3801  071B                     	;# 
  3802  071C                     	;# 
  3803  071D                     	;# 
  3804  071E                     	;# 
  3805  071F                     	;# 
  3806  078E                     	;# 
  3807  078F                     	;# 
  3808  0790                     	;# 
  3809  0791                     	;# 
  3810  0792                     	;# 
  3811  0793                     	;# 
  3812  0794                     	;# 
  3813  0795                     	;# 
  3814  0796                     	;# 
  3815  0797                     	;# 
  3816  0798                     	;# 
  3817  0799                     	;# 
  3818  079A                     	;# 
  3819  079B                     	;# 
  3820  079C                     	;# 
  3821  079D                     	;# 
  3822  079E                     	;# 
  3823  079F                     	;# 
  3824  080D                     	;# 
  3825  080E                     	;# 
  3826  080F                     	;# 
  3827  0810                     	;# 
  3828  0811                     	;# 
  3829  0812                     	;# 
  3830  0813                     	;# 
  3831  0814                     	;# 
  3832  0815                     	;# 
  3833  0816                     	;# 
  3834  0817                     	;# 
  3835  0818                     	;# 
  3836  0819                     	;# 
  3837  081A                     	;# 
  3838  081B                     	;# 
  3839  081C                     	;# 
  3840  081D                     	;# 
  3841  081E                     	;# 
  3842  081F                     	;# 
  3843  090C                     	;# 
  3844  090D                     	;# 
  3845  090E                     	;# 
  3846  090F                     	;# 
  3847  0910                     	;# 
  3848  0911                     	;# 
  3849  0912                     	;# 
  3850  0913                     	;# 
  3851  0914                     	;# 
  3852  0915                     	;# 
  3853  0916                     	;# 
  3854  0917                     	;# 
  3855  0D8E                     	;# 
  3856  0D8F                     	;# 
  3857  0D90                     	;# 
  3858  0D91                     	;# 
  3859  0D91                     	;# 
  3860  0D92                     	;# 
  3861  0D93                     	;# 
  3862  0D93                     	;# 
  3863  0D94                     	;# 
  3864  0D95                     	;# 
  3865  0D95                     	;# 
  3866  0D96                     	;# 
  3867  0D97                     	;# 
  3868  0D97                     	;# 
  3869  0D98                     	;# 
  3870  0D99                     	;# 
  3871  0D99                     	;# 
  3872  0D9A                     	;# 
  3873  0D9B                     	;# 
  3874  0D9C                     	;# 
  3875  0D9C                     	;# 
  3876  0D9D                     	;# 
  3877  0D9D                     	;# 
  3878  0D9E                     	;# 
  3879  0D9F                     	;# 
  3880  0DA0                     	;# 
  3881  0DA1                     	;# 
  3882  0DA1                     	;# 
  3883  0DA2                     	;# 
  3884  0DA3                     	;# 
  3885  0DA3                     	;# 
  3886  0DA4                     	;# 
  3887  0DA5                     	;# 
  3888  0DA5                     	;# 
  3889  0DA6                     	;# 
  3890  0DA7                     	;# 
  3891  0DA7                     	;# 
  3892  0DA8                     	;# 
  3893  0DA9                     	;# 
  3894  0DA9                     	;# 
  3895  0DAA                     	;# 
  3896  0DAB                     	;# 
  3897  0DAC                     	;# 
  3898  0DAC                     	;# 
  3899  0DAD                     	;# 
  3900  0DAD                     	;# 
  3901  0DAE                     	;# 
  3902  0DAF                     	;# 
  3903  0DB0                     	;# 
  3904  0DB1                     	;# 
  3905  0DB1                     	;# 
  3906  0DB2                     	;# 
  3907  0DB3                     	;# 
  3908  0DB3                     	;# 
  3909  0DB4                     	;# 
  3910  0DB5                     	;# 
  3911  0DB5                     	;# 
  3912  0DB6                     	;# 
  3913  0DB7                     	;# 
  3914  0DB7                     	;# 
  3915  0DB8                     	;# 
  3916  0DB9                     	;# 
  3917  0DB9                     	;# 
  3918  0DBA                     	;# 
  3919  0DBB                     	;# 
  3920  0DBC                     	;# 
  3921  0DBC                     	;# 
  3922  0DBD                     	;# 
  3923  0DBD                     	;# 
  3924  0DBE                     	;# 
  3925  0DBF                     	;# 
  3926  0DC0                     	;# 
  3927  0E0C                     	;# 
  3928  0E0D                     	;# 
  3929  0E0E                     	;# 
  3930  0E0F                     	;# 
  3931  0E10                     	;# 
  3932  0E11                     	;# 
  3933  0E12                     	;# 
  3934  0E13                     	;# 
  3935  0E14                     	;# 
  3936  0E15                     	;# 
  3937  0E15                     	;# 
  3938  0E15                     	;# 
  3939  0E16                     	;# 
  3940  0E16                     	;# 
  3941  0E16                     	;# 
  3942  0E17                     	;# 
  3943  0E17                     	;# 
  3944  0E17                     	;# 
  3945  0E18                     	;# 
  3946  0E18                     	;# 
  3947  0E18                     	;# 
  3948  0E19                     	;# 
  3949  0E1A                     	;# 
  3950  0E1B                     	;# 
  3951  0E1D                     	;# 
  3952  0E1E                     	;# 
  3953  0E1F                     	;# 
  3954  0E21                     	;# 
  3955  0E22                     	;# 
  3956  0E23                     	;# 
  3957  0E24                     	;# 
  3958  0E25                     	;# 
  3959  0E26                     	;# 
  3960  0E27                     	;# 
  3961  0E28                     	;# 
  3962  0E29                     	;# 
  3963  0E2D                     	;# 
  3964  0E2E                     	;# 
  3965  0E2F                     	;# 
  3966  0E30                     	;# 
  3967  0E31                     	;# 
  3968  0E32                     	;# 
  3969  0E35                     	;# 
  3970  0E36                     	;# 
  3971  0E37                     	;# 
  3972  0E38                     	;# 
  3973  0E39                     	;# 
  3974  0E3A                     	;# 
  3975  0E3B                     	;# 
  3976  0E3C                     	;# 
  3977  0E3D                     	;# 
  3978  0E3E                     	;# 
  3979  0E90                     	;# 
  3980  0E91                     	;# 
  3981  0E92                     	;# 
  3982  0E93                     	;# 
  3983  0E94                     	;# 
  3984  0E95                     	;# 
  3985  0E96                     	;# 
  3986  0E97                     	;# 
  3987  0E98                     	;# 
  3988  0E99                     	;# 
  3989  0E9A                     	;# 
  3990  0E9B                     	;# 
  3991  0E9C                     	;# 
  3992  0E9D                     	;# 
  3993  0E9E                     	;# 
  3994  0E9F                     	;# 
  3995  0EA0                     	;# 
  3996  0EA1                     	;# 
  3997  0EA2                     	;# 
  3998  0EA3                     	;# 
  3999  0EA4                     	;# 
  4000  0EA5                     	;# 
  4001  0EA6                     	;# 
  4002  0EA7                     	;# 
  4003  0F0F                     	;# 
  4004  0F10                     	;# 
  4005  0F11                     	;# 
  4006  0F12                     	;# 
  4007  0F13                     	;# 
  4008  0F14                     	;# 
  4009  0F15                     	;# 
  4010  0F16                     	;# 
  4011  0F17                     	;# 
  4012  0F18                     	;# 
  4013  0F19                     	;# 
  4014  0F1A                     	;# 
  4015  0F1B                     	;# 
  4016  0F1C                     	;# 
  4017  0F1D                     	;# 
  4018  0F1E                     	;# 
  4019  0F1F                     	;# 
  4020  0F20                     	;# 
  4021  0F21                     	;# 
  4022  0F22                     	;# 
  4023  0F23                     	;# 
  4024  0F24                     	;# 
  4025  0F25                     	;# 
  4026  0F26                     	;# 
  4027  0F27                     	;# 
  4028  0F28                     	;# 
  4029  0F29                     	;# 
  4030  0F2A                     	;# 
  4031  0F2B                     	;# 
  4032  0F2C                     	;# 
  4033  0F2D                     	;# 
  4034  0F2E                     	;# 
  4035  0F2F                     	;# 
  4036  0F30                     	;# 
  4037  0F31                     	;# 
  4038  0F32                     	;# 
  4039  0F33                     	;# 
  4040  0F34                     	;# 
  4041  0F35                     	;# 
  4042  0F36                     	;# 
  4043  0F37                     	;# 
  4044  0FE4                     	;# 
  4045  0FE5                     	;# 
  4046  0FE6                     	;# 
  4047  0FE7                     	;# 
  4048  0FE8                     	;# 
  4049  0FE9                     	;# 
  4050  0FEA                     	;# 
  4051  0FEB                     	;# 
  4052  0FED                     	;# 
  4053  0FEE                     	;# 
  4054  0FEF                     	;# 
  4055  0000                     	;# 
  4056  0001                     	;# 
  4057  0002                     	;# 
  4058  0003                     	;# 
  4059  0004                     	;# 
  4060  0005                     	;# 
  4061  0006                     	;# 
  4062  0007                     	;# 
  4063  0008                     	;# 
  4064  0009                     	;# 
  4065  000A                     	;# 
  4066  000B                     	;# 
  4067  000C                     	;# 
  4068  000D                     	;# 
  4069  000E                     	;# 
  4070  0010                     	;# 
  4071  0011                     	;# 
  4072  0012                     	;# 
  4073  0013                     	;# 
  4074  0014                     	;# 
  4075  0015                     	;# 
  4076  0016                     	;# 
  4077  0017                     	;# 
  4078  0018                     	;# 
  4079  0018                     	;# 
  4080  0019                     	;# 
  4081  001A                     	;# 
  4082  001B                     	;# 
  4083  001C                     	;# 
  4084  001C                     	;# 
  4085  001D                     	;# 
  4086  001E                     	;# 
  4087  001F                     	;# 
  4088  008C                     	;# 
  4089  008D                     	;# 
  4090  008E                     	;# 
  4091  0090                     	;# 
  4092  0091                     	;# 
  4093  0092                     	;# 
  4094  0093                     	;# 
  4095  0094                     	;# 
  4096  0095                     	;# 
  4097  0096                     	;# 
  4098  0097                     	;# 
  4099  0098                     	;# 
  4100  0099                     	;# 
  4101  009A                     	;# 
  4102  009B                     	;# 
  4103  009C                     	;# 
  4104  009D                     	;# 
  4105  009E                     	;# 
  4106  009F                     	;# 
  4107  010C                     	;# 
  4108  010D                     	;# 
  4109  010E                     	;# 
  4110  0111                     	;# 
  4111  0112                     	;# 
  4112  0113                     	;# 
  4113  0114                     	;# 
  4114  0115                     	;# 
  4115  0116                     	;# 
  4116  0117                     	;# 
  4117  0118                     	;# 
  4118  0119                     	;# 
  4119  011A                     	;# 
  4120  011B                     	;# 
  4121  011C                     	;# 
  4122  011D                     	;# 
  4123  018C                     	;# 
  4124  018D                     	;# 
  4125  018E                     	;# 
  4126  0191                     	;# 
  4127  0191                     	;# 
  4128  0192                     	;# 
  4129  0193                     	;# 
  4130  0193                     	;# 
  4131  0194                     	;# 
  4132  0195                     	;# 
  4133  0196                     	;# 
  4134  0197                     	;# 
  4135  0199                     	;# 
  4136  0199                     	;# 
  4137  0199                     	;# 
  4138  019A                     	;# 
  4139  019A                     	;# 
  4140  019A                     	;# 
  4141  019B                     	;# 
  4142  019B                     	;# 
  4143  019B                     	;# 
  4144  019B                     	;# 
  4145  019B                     	;# 
  4146  019C                     	;# 
  4147  019C                     	;# 
  4148  019C                     	;# 
  4149  019D                     	;# 
  4150  019D                     	;# 
  4151  019D                     	;# 
  4152  019E                     	;# 
  4153  019E                     	;# 
  4154  019E                     	;# 
  4155  019F                     	;# 
  4156  019F                     	;# 
  4157  019F                     	;# 
  4158  019F                     	;# 
  4159  019F                     	;# 
  4160  020C                     	;# 
  4161  020D                     	;# 
  4162  020E                     	;# 
  4163  0210                     	;# 
  4164  0211                     	;# 
  4165  0211                     	;# 
  4166  0212                     	;# 
  4167  0212                     	;# 
  4168  0213                     	;# 
  4169  0213                     	;# 
  4170  0214                     	;# 
  4171  0214                     	;# 
  4172  0215                     	;# 
  4173  0215                     	;# 
  4174  0215                     	;# 
  4175  0215                     	;# 
  4176  0216                     	;# 
  4177  0216                     	;# 
  4178  0217                     	;# 
  4179  0217                     	;# 
  4180  021B                     	;# 
  4181  021C                     	;# 
  4182  021D                     	;# 
  4183  021E                     	;# 
  4184  021F                     	;# 
  4185  028C                     	;# 
  4186  028D                     	;# 
  4187  028E                     	;# 
  4188  0291                     	;# 
  4189  0291                     	;# 
  4190  0292                     	;# 
  4191  0293                     	;# 
  4192  0294                     	;# 
  4193  0295                     	;# 
  4194  0295                     	;# 
  4195  0296                     	;# 
  4196  0297                     	;# 
  4197  0298                     	;# 
  4198  0299                     	;# 
  4199  0299                     	;# 
  4200  029A                     	;# 
  4201  029B                     	;# 
  4202  029C                     	;# 
  4203  029E                     	;# 
  4204  029F                     	;# 
  4205  030C                     	;# 
  4206  030D                     	;# 
  4207  030E                     	;# 
  4208  0315                     	;# 
  4209  0316                     	;# 
  4210  0317                     	;# 
  4211  0318                     	;# 
  4212  0319                     	;# 
  4213  031B                     	;# 
  4214  031C                     	;# 
  4215  031D                     	;# 
  4216  031E                     	;# 
  4217  031F                     	;# 
  4218  038C                     	;# 
  4219  038D                     	;# 
  4220  038E                     	;# 
  4221  0390                     	;# 
  4222  0391                     	;# 
  4223  0392                     	;# 
  4224  0393                     	;# 
  4225  0394                     	;# 
  4226  0395                     	;# 
  4227  0396                     	;# 
  4228  0397                     	;# 
  4229  0398                     	;# 
  4230  0399                     	;# 
  4231  039D                     	;# 
  4232  039E                     	;# 
  4233  039F                     	;# 
  4234  040D                     	;# 
  4235  040F                     	;# 
  4236  040F                     	;# 
  4237  0410                     	;# 
  4238  0411                     	;# 
  4239  0412                     	;# 
  4240  0413                     	;# 
  4241  0413                     	;# 
  4242  0414                     	;# 
  4243  0414                     	;# 
  4244  0415                     	;# 
  4245  0416                     	;# 
  4246  0417                     	;# 
  4247  0418                     	;# 
  4248  041A                     	;# 
  4249  041A                     	;# 
  4250  041B                     	;# 
  4251  041B                     	;# 
  4252  041C                     	;# 
  4253  041D                     	;# 
  4254  041E                     	;# 
  4255  041F                     	;# 
  4256  048E                     	;# 
  4257  048E                     	;# 
  4258  048F                     	;# 
  4259  0490                     	;# 
  4260  0491                     	;# 
  4261  0492                     	;# 
  4262  0493                     	;# 
  4263  0493                     	;# 
  4264  0494                     	;# 
  4265  0494                     	;# 
  4266  0495                     	;# 
  4267  0496                     	;# 
  4268  0497                     	;# 
  4269  0498                     	;# 
  4270  049A                     	;# 
  4271  049A                     	;# 
  4272  049B                     	;# 
  4273  049B                     	;# 
  4274  049C                     	;# 
  4275  049D                     	;# 
  4276  049E                     	;# 
  4277  049F                     	;# 
  4278  050F                     	;# 
  4279  0510                     	;# 
  4280  0511                     	;# 
  4281  0512                     	;# 
  4282  0513                     	;# 
  4283  0514                     	;# 
  4284  0515                     	;# 
  4285  0516                     	;# 
  4286  0517                     	;# 
  4287  0518                     	;# 
  4288  0519                     	;# 
  4289  051A                     	;# 
  4290  058D                     	;# 
  4291  058E                     	;# 
  4292  058F                     	;# 
  4293  058F                     	;# 
  4294  058F                     	;# 
  4295  0590                     	;# 
  4296  0590                     	;# 
  4297  0591                     	;# 
  4298  0592                     	;# 
  4299  0592                     	;# 
  4300  0592                     	;# 
  4301  0593                     	;# 
  4302  0593                     	;# 
  4303  0594                     	;# 
  4304  0595                     	;# 
  4305  0595                     	;# 
  4306  0596                     	;# 
  4307  0597                     	;# 
  4308  0597                     	;# 
  4309  0598                     	;# 
  4310  0599                     	;# 
  4311  0599                     	;# 
  4312  0599                     	;# 
  4313  059A                     	;# 
  4314  059A                     	;# 
  4315  059E                     	;# 
  4316  059F                     	;# 
  4317  059F                     	;# 
  4318  0614                     	;# 
  4319  0614                     	;# 
  4320  0615                     	;# 
  4321  0616                     	;# 
  4322  0617                     	;# 
  4323  0617                     	;# 
  4324  0618                     	;# 
  4325  0619                     	;# 
  4326  061A                     	;# 
  4327  061A                     	;# 
  4328  061B                     	;# 
  4329  061C                     	;# 
  4330  068D                     	;# 
  4331  068E                     	;# 
  4332  068F                     	;# 
  4333  0690                     	;# 
  4334  0691                     	;# 
  4335  0692                     	;# 
  4336  0693                     	;# 
  4337  0694                     	;# 
  4338  0695                     	;# 
  4339  0696                     	;# 
  4340  0697                     	;# 
  4341  0698                     	;# 
  4342  0699                     	;# 
  4343  069A                     	;# 
  4344  069B                     	;# 
  4345  069C                     	;# 
  4346  069D                     	;# 
  4347  069E                     	;# 
  4348  069F                     	;# 
  4349  070D                     	;# 
  4350  070E                     	;# 
  4351  070F                     	;# 
  4352  0710                     	;# 
  4353  0711                     	;# 
  4354  0712                     	;# 
  4355  0713                     	;# 
  4356  0714                     	;# 
  4357  0715                     	;# 
  4358  0716                     	;# 
  4359  0717                     	;# 
  4360  0718                     	;# 
  4361  0719                     	;# 
  4362  071A                     	;# 
  4363  071B                     	;# 
  4364  071C                     	;# 
  4365  071D                     	;# 
  4366  071E                     	;# 
  4367  071F                     	;# 
  4368  078E                     	;# 
  4369  078F                     	;# 
  4370  0790                     	;# 
  4371  0791                     	;# 
  4372  0792                     	;# 
  4373  0793                     	;# 
  4374  0794                     	;# 
  4375  0795                     	;# 
  4376  0796                     	;# 
  4377  0797                     	;# 
  4378  0798                     	;# 
  4379  0799                     	;# 
  4380  079A                     	;# 
  4381  079B                     	;# 
  4382  079C                     	;# 
  4383  079D                     	;# 
  4384  079E                     	;# 
  4385  079F                     	;# 
  4386  080D                     	;# 
  4387  080E                     	;# 
  4388  080F                     	;# 
  4389  0810                     	;# 
  4390  0811                     	;# 
  4391  0812                     	;# 
  4392  0813                     	;# 
  4393  0814                     	;# 
  4394  0815                     	;# 
  4395  0816                     	;# 
  4396  0817                     	;# 
  4397  0818                     	;# 
  4398  0819                     	;# 
  4399  081A                     	;# 
  4400  081B                     	;# 
  4401  081C                     	;# 
  4402  081D                     	;# 
  4403  081E                     	;# 
  4404  081F                     	;# 
  4405  090C                     	;# 
  4406  090D                     	;# 
  4407  090E                     	;# 
  4408  090F                     	;# 
  4409  0910                     	;# 
  4410  0911                     	;# 
  4411  0912                     	;# 
  4412  0913                     	;# 
  4413  0914                     	;# 
  4414  0915                     	;# 
  4415  0916                     	;# 
  4416  0917                     	;# 
  4417  0D8E                     	;# 
  4418  0D8F                     	;# 
  4419  0D90                     	;# 
  4420  0D91                     	;# 
  4421  0D91                     	;# 
  4422  0D92                     	;# 
  4423  0D93                     	;# 
  4424  0D93                     	;# 
  4425  0D94                     	;# 
  4426  0D95                     	;# 
  4427  0D95                     	;# 
  4428  0D96                     	;# 
  4429  0D97                     	;# 
  4430  0D97                     	;# 
  4431  0D98                     	;# 
  4432  0D99                     	;# 
  4433  0D99                     	;# 
  4434  0D9A                     	;# 
  4435  0D9B                     	;# 
  4436  0D9C                     	;# 
  4437  0D9C                     	;# 
  4438  0D9D                     	;# 
  4439  0D9D                     	;# 
  4440  0D9E                     	;# 
  4441  0D9F                     	;# 
  4442  0DA0                     	;# 
  4443  0DA1                     	;# 
  4444  0DA1                     	;# 
  4445  0DA2                     	;# 
  4446  0DA3                     	;# 
  4447  0DA3                     	;# 
  4448  0DA4                     	;# 
  4449  0DA5                     	;# 
  4450  0DA5                     	;# 
  4451  0DA6                     	;# 
  4452  0DA7                     	;# 
  4453  0DA7                     	;# 
  4454  0DA8                     	;# 
  4455  0DA9                     	;# 
  4456  0DA9                     	;# 
  4457  0DAA                     	;# 
  4458  0DAB                     	;# 
  4459  0DAC                     	;# 
  4460  0DAC                     	;# 
  4461  0DAD                     	;# 
  4462  0DAD                     	;# 
  4463  0DAE                     	;# 
  4464  0DAF                     	;# 
  4465  0DB0                     	;# 
  4466  0DB1                     	;# 
  4467  0DB1                     	;# 
  4468  0DB2                     	;# 
  4469  0DB3                     	;# 
  4470  0DB3                     	;# 
  4471  0DB4                     	;# 
  4472  0DB5                     	;# 
  4473  0DB5                     	;# 
  4474  0DB6                     	;# 
  4475  0DB7                     	;# 
  4476  0DB7                     	;# 
  4477  0DB8                     	;# 
  4478  0DB9                     	;# 
  4479  0DB9                     	;# 
  4480  0DBA                     	;# 
  4481  0DBB                     	;# 
  4482  0DBC                     	;# 
  4483  0DBC                     	;# 
  4484  0DBD                     	;# 
  4485  0DBD                     	;# 
  4486  0DBE                     	;# 
  4487  0DBF                     	;# 
  4488  0DC0                     	;# 
  4489  0E0C                     	;# 
  4490  0E0D                     	;# 
  4491  0E0E                     	;# 
  4492  0E0F                     	;# 
  4493  0E10                     	;# 
  4494  0E11                     	;# 
  4495  0E12                     	;# 
  4496  0E13                     	;# 
  4497  0E14                     	;# 
  4498  0E15                     	;# 
  4499  0E15                     	;# 
  4500  0E15                     	;# 
  4501  0E16                     	;# 
  4502  0E16                     	;# 
  4503  0E16                     	;# 
  4504  0E17                     	;# 
  4505  0E17                     	;# 
  4506  0E17                     	;# 
  4507  0E18                     	;# 
  4508  0E18                     	;# 
  4509  0E18                     	;# 
  4510  0E19                     	;# 
  4511  0E1A                     	;# 
  4512  0E1B                     	;# 
  4513  0E1D                     	;# 
  4514  0E1E                     	;# 
  4515  0E1F                     	;# 
  4516  0E21                     	;# 
  4517  0E22                     	;# 
  4518  0E23                     	;# 
  4519  0E24                     	;# 
  4520  0E25                     	;# 
  4521  0E26                     	;# 
  4522  0E27                     	;# 
  4523  0E28                     	;# 
  4524  0E29                     	;# 
  4525  0E2D                     	;# 
  4526  0E2E                     	;# 
  4527  0E2F                     	;# 
  4528  0E30                     	;# 
  4529  0E31                     	;# 
  4530  0E32                     	;# 
  4531  0E35                     	;# 
  4532  0E36                     	;# 
  4533  0E37                     	;# 
  4534  0E38                     	;# 
  4535  0E39                     	;# 
  4536  0E3A                     	;# 
  4537  0E3B                     	;# 
  4538  0E3C                     	;# 
  4539  0E3D                     	;# 
  4540  0E3E                     	;# 
  4541  0E90                     	;# 
  4542  0E91                     	;# 
  4543  0E92                     	;# 
  4544  0E93                     	;# 
  4545  0E94                     	;# 
  4546  0E95                     	;# 
  4547  0E96                     	;# 
  4548  0E97                     	;# 
  4549  0E98                     	;# 
  4550  0E99                     	;# 
  4551  0E9A                     	;# 
  4552  0E9B                     	;# 
  4553  0E9C                     	;# 
  4554  0E9D                     	;# 
  4555  0E9E                     	;# 
  4556  0E9F                     	;# 
  4557  0EA0                     	;# 
  4558  0EA1                     	;# 
  4559  0EA2                     	;# 
  4560  0EA3                     	;# 
  4561  0EA4                     	;# 
  4562  0EA5                     	;# 
  4563  0EA6                     	;# 
  4564  0EA7                     	;# 
  4565  0F0F                     	;# 
  4566  0F10                     	;# 
  4567  0F11                     	;# 
  4568  0F12                     	;# 
  4569  0F13                     	;# 
  4570  0F14                     	;# 
  4571  0F15                     	;# 
  4572  0F16                     	;# 
  4573  0F17                     	;# 
  4574  0F18                     	;# 
  4575  0F19                     	;# 
  4576  0F1A                     	;# 
  4577  0F1B                     	;# 
  4578  0F1C                     	;# 
  4579  0F1D                     	;# 
  4580  0F1E                     	;# 
  4581  0F1F                     	;# 
  4582  0F20                     	;# 
  4583  0F21                     	;# 
  4584  0F22                     	;# 
  4585  0F23                     	;# 
  4586  0F24                     	;# 
  4587  0F25                     	;# 
  4588  0F26                     	;# 
  4589  0F27                     	;# 
  4590  0F28                     	;# 
  4591  0F29                     	;# 
  4592  0F2A                     	;# 
  4593  0F2B                     	;# 
  4594  0F2C                     	;# 
  4595  0F2D                     	;# 
  4596  0F2E                     	;# 
  4597  0F2F                     	;# 
  4598  0F30                     	;# 
  4599  0F31                     	;# 
  4600  0F32                     	;# 
  4601  0F33                     	;# 
  4602  0F34                     	;# 
  4603  0F35                     	;# 
  4604  0F36                     	;# 
  4605  0F37                     	;# 
  4606  0FE4                     	;# 
  4607  0FE5                     	;# 
  4608  0FE6                     	;# 
  4609  0FE7                     	;# 
  4610  0FE8                     	;# 
  4611  0FE9                     	;# 
  4612  0FEA                     	;# 
  4613  0FEB                     	;# 
  4614  0FED                     	;# 
  4615  0FEE                     	;# 
  4616  0FEF                     	;# 
  4617                           
  4618                           	psect	idataBANK0
  4619  01DD                     __pidataBANK0:
  4620                           
  4621                           ;initializer for _Duty
  4622  01DD  34FF               	retlw	255
  4623  01DE  3401               	retlw	1
  4624                           
  4625                           ;initializer for _Flag
  4626  01DF  3401               	retlw	1
  4627                           
  4628                           ;initializer for _Msg2
  4629  01E0  3444               	retlw	68
  4630  01E1  3475               	retlw	117
  4631  01E2  3474               	retlw	116
  4632  01E3  3479               	retlw	121
  4633  01E4  3420               	retlw	32
  4634  01E5  343D               	retlw	61
  4635  01E6  3420               	retlw	32
  4636  01E7  3458               	retlw	88
  4637  01E8  3458               	retlw	88
  4638  01E9  3458               	retlw	88
  4639  01EA  3458               	retlw	88
  4640  01EB  3400               	retlw	0
  4641                           
  4642                           	psect	idataBANK1
  4643  0240                     __pidataBANK1:
  4644                           
  4645                           ;initializer for _Msg1
  4646  0240  3444               	retlw	68
  4647  0241  3443               	retlw	67
  4648  0242  3420               	retlw	32
  4649  0243  344D               	retlw	77
  4650  0244  344F               	retlw	79
  4651  0245  3454               	retlw	84
  4652  0246  344F               	retlw	79
  4653  0247  3452               	retlw	82
  4654  0248  3420               	retlw	32
  4655  0249  3453               	retlw	83
  4656  024A  3450               	retlw	80
  4657  024B  3444               	retlw	68
  4658  024C  3420               	retlw	32
  4659  024D  3443               	retlw	67
  4660  024E  3454               	retlw	84
  4661  024F  344C               	retlw	76
  4662  0250  3400               	retlw	0
  4663                           
  4664                           	psect	stringtext1
  4665  0800                     __pstringtext1:
  4666  0800                     _ICON:
  4667  0800  3400               	retlw	0
  4668  0801  3400               	retlw	0
  4669  0802  3410               	retlw	16
  4670  0803  3400               	retlw	0
  4671  0804  3402               	retlw	2
  4672  0805  3400               	retlw	0
  4673  0806  3410               	retlw	16
  4674  0807  3400               	retlw	0
  4675  0808  3404               	retlw	4
  4676  0809  3400               	retlw	0
  4677  080A  3410               	retlw	16
  4678  080B  3400               	retlw	0
  4679  080C  3406               	retlw	6
  4680  080D  3400               	retlw	0
  4681  080E  3410               	retlw	16
  4682  080F  3400               	retlw	0
  4683  0810  3407               	retlw	7
  4684  0811  3400               	retlw	0
  4685  0812  3410               	retlw	16
  4686  0813  3400               	retlw	0
  4687  0814  3407               	retlw	7
  4688  0815  3400               	retlw	0
  4689  0816  3408               	retlw	8
  4690  0817  3400               	retlw	0
  4691  0818  3407               	retlw	7
  4692  0819  3400               	retlw	0
  4693  081A  3418               	retlw	24
  4694  081B  3400               	retlw	0
  4695  081C  3409               	retlw	9
  4696  081D  3400               	retlw	0
  4697  081E  3410               	retlw	16
  4698  081F  3400               	retlw	0
  4699  0820  340B               	retlw	11
  4700  0821  3400               	retlw	0
  4701  0822  3410               	retlw	16
  4702  0823  3400               	retlw	0
  4703  0824  340D               	retlw	13
  4704  0825  3400               	retlw	0
  4705  0826  3402               	retlw	2
  4706  0827  3400               	retlw	0
  4707  0828  340D               	retlw	13
  4708  0829  3400               	retlw	0
  4709  082A  3412               	retlw	18
  4710  082B  3400               	retlw	0
  4711  082C  340D               	retlw	13
  4712  082D  3400               	retlw	0
  4713  082E  341A               	retlw	26
  4714  082F  3400               	retlw	0
  4715  0830  340D               	retlw	13
  4716  0831  3400               	retlw	0
  4717  0832  341E               	retlw	30
  4718  0833  3400               	retlw	0
  4719  0834  340F               	retlw	15
  4720  0835  3400               	retlw	0
  4721  0836  3410               	retlw	16
  4722  0837  3400               	retlw	0
  4723  0838                     __end_of_ICON:
  4724                           
  4725                           	psect	stringtext2
  4726  0838                     __pstringtext2:
  4727  0838                     _i2c_fsmStateTable:
  4728  0838  3425               	retlw	low _I2C_DO_IDLE
  4729  0839  3401               	retlw	high _I2C_DO_IDLE
  4730  083A  347E               	retlw	low _I2C_DO_SEND_ADR_READ
  4731  083B  3401               	retlw	high _I2C_DO_SEND_ADR_READ
  4732  083C  3476               	retlw	low _I2C_DO_SEND_ADR_WRITE
  4733  083D  3401               	retlw	high _I2C_DO_SEND_ADR_WRITE
  4734  083E  34A2               	retlw	low _I2C_DO_TX
  4735  083F  3405               	retlw	high _I2C_DO_TX
  4736  0840  34E3               	retlw	low _I2C_DO_RX
  4737  0841  3404               	retlw	high _I2C_DO_RX
  4738  0842  346F               	retlw	low _I2C_DO_RCEN
  4739  0843  3401               	retlw	high _I2C_DO_RCEN
  4740  0844  3480               	retlw	low _I2C_DO_TX_EMPTY
  4741  0845  3403               	retlw	high _I2C_DO_TX_EMPTY
  4742  0846  342A               	retlw	low _I2C_DO_SEND_RESTART_READ
  4743  0847  3401               	retlw	high _I2C_DO_SEND_RESTART_READ
  4744  0848  342F               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  4745  0849  3401               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  4746  084A  3434               	retlw	low _I2C_DO_SEND_RESTART
  4747  084B  3401               	retlw	high _I2C_DO_SEND_RESTART
  4748  084C  3439               	retlw	low _I2C_DO_SEND_STOP
  4749  084D  3401               	retlw	high _I2C_DO_SEND_STOP
  4750  084E  343E               	retlw	low _I2C_DO_RX_ACK
  4751  084F  3401               	retlw	high _I2C_DO_RX_ACK
  4752  0850  3443               	retlw	low _I2C_DO_RX_NACK_STOP
  4753  0851  3401               	retlw	high _I2C_DO_RX_NACK_STOP
  4754  0852  3448               	retlw	low _I2C_DO_RX_NACK_RESTART
  4755  0853  3401               	retlw	high _I2C_DO_RX_NACK_RESTART
  4756  0854  344D               	retlw	low _I2C_DO_RESET
  4757  0855  3401               	retlw	high _I2C_DO_RESET
  4758  0856  3436               	retlw	low _I2C_DO_ADDRESS_NACK
  4759  0857  3403               	retlw	high _I2C_DO_ADDRESS_NACK
  4760  0858                     __end_of_i2c_fsmStateTable:
  4761                           
  4762                           	psect	stringtext3
  4763  0858                     __pstringtext3:
  4764  0858                     _dpowers:
  4765  0858  3401               	retlw	1
  4766  0859  3400               	retlw	0
  4767  085A  340A               	retlw	10
  4768  085B  3400               	retlw	0
  4769  085C  3464               	retlw	100
  4770  085D  3400               	retlw	0
  4771  085E  34E8               	retlw	232
  4772  085F  3403               	retlw	3
  4773  0860  3410               	retlw	16
  4774  0861  3427               	retlw	39
  4775  0862                     __end_of_dpowers:
  4776  000D                     _PORTBbits	set	13
  4777  0012                     _PIR2bits	set	18
  4778  0011                     _PIR1bits	set	17
  4779  0091                     _PIE1bits	set	145
  4780  0097                     _OPTION_REGbits	set	151
  4781  008E                     _TRISC	set	142
  4782  008D                     _TRISB	set	141
  4783  008C                     _TRISA	set	140
  4784  0090                     _TRISE	set	144
  4785  0099                     _WDTCON	set	153
  4786  009D                     _BORCON	set	157
  4787  009A                     _OSCTUNE	set	154
  4788  009C                     _OSCSTAT	set	156
  4789  009B                     _OSCCON	set	155
  4790  04E6                     _PLLR	set	1254
  4791  010D                     _LATBbits	set	269
  4792  010E                     _LATC	set	270
  4793  010D                     _LATB	set	269
  4794  010C                     _LATA	set	268
  4795  018C                     _ANSELA	set	396
  4796  018D                     _ANSELB	set	397
  4797  018E                     _ANSELC	set	398
  4798  0214                     _SSP1STATbits	set	532
  4799  0216                     _SSP1CON2bits	set	534
  4800  0211                     _SSP1BUF	set	529
  4801  0215                     _SSP1CON1bits	set	533
  4802  0212                     _SSP1ADD	set	530
  4803  0216                     _SSP1CON2	set	534
  4804  0215                     _SSP1CON1	set	533
  4805  0214                     _SSP1STAT	set	532
  4806  020E                     _WPUC	set	526
  4807  020C                     _WPUA	set	524
  4808  020D                     _WPUB	set	525
  4809  0210                     _WPUE	set	528
  4810  028E                     _ODCONC	set	654
  4811  028D                     _ODCONB	set	653
  4812  028C                     _ODCONA	set	652
  4813  0293                     _CCP1CONbits	set	659
  4814  029E                     _CCPTMRS1bits	set	670
  4815  0291                     _CCPR1L	set	657
  4816  0292                     _CCPR1H	set	658
  4817  0293                     _CCP1CON	set	659
  4818  030E                     _SLRCONC	set	782
  4819  030D                     _SLRCONB	set	781
  4820  030C                     _SLRCONA	set	780
  4821  038E                     _INLVLC	set	910
  4822  038D                     _INLVLB	set	909
  4823  038C                     _INLVLA	set	908
  4824  0494                     _PR2	set	1172
  4825  0493                     _TMR2	set	1171
  4826  0495                     _T2CONbits	set	1173
  4827  0498                     _T2RSTbits	set	1176
  4828  0496                     _T2HLTbits	set	1174
  4829  0495                     _T2CON	set	1173
  4830  0493                     _T2TMR	set	1171
  4831  0494                     _T2PR	set	1172
  4832  0498                     _T2RST	set	1176
  4833  0496                     _T2HLT	set	1174
  4834  0497                     _T2CLKCON	set	1175
  4835  0813                     _COG3CON0bits	set	2067
  4836  081D                     _COG3ASD0bits	set	2077
  4837  080E                     _COG3PHF	set	2062
  4838  080D                     _COG3PHR	set	2061
  4839  0810                     _COG3BLKF	set	2064
  4840  080F                     _COG3BLKR	set	2063
  4841  0812                     _COG3DBF	set	2066
  4842  0811                     _COG3DBR	set	2065
  4843  081F                     _COG3STR	set	2079
  4844  081E                     _COG3ASD1	set	2078
  4845  081D                     _COG3ASD0	set	2077
  4846  081C                     _COG3FSIM1	set	2076
  4847  081B                     _COG3FSIM0	set	2075
  4848  081A                     _COG3FIS1	set	2074
  4849  0819                     _COG3FIS0	set	2073
  4850  0818                     _COG3RSIM1	set	2072
  4851  0817                     _COG3RSIM0	set	2071
  4852  0816                     _COG3RIS1	set	2070
  4853  0815                     _COG3RIS0	set	2069
  4854  0814                     _COG3CON1	set	2068
  4855  0813                     _COG3CON0	set	2067
  4856  0E3A                     _SSPCLKPPS	set	3642
  4857  0E3B                     _SSPDATPPS	set	3643
  4858  0E96                     _RA6PPS	set	3734
  4859  0EA4                     _RC4PPS	set	3748
  4860  0EA1                     _RC1PPS	set	3745
  4861  0EA3                     _RC3PPS	set	3747
  4862  0EA0                     _RC0PPS	set	3744
  4863  0E97                     _RA7PPS	set	3735
  4864  0862                     STR_1:
  4865  0862  3444               	retlw	68	;'D'
  4866  0863  3475               	retlw	117	;'u'
  4867  0864  3474               	retlw	116	;'t'
  4868  0865  3479               	retlw	121	;'y'
  4869  0866  3420               	retlw	32	;' '
  4870  0867  343D               	retlw	61	;'='
  4871  0868  3420               	retlw	32	;' '
  4872  0869  3425               	retlw	37	;'%'
  4873  086A  3434               	retlw	52	;'4'
  4874  086B  3464               	retlw	100	;'d'
  4875  086C  3400               	retlw	0
  4876                           
  4877                           	psect	stringtext4
  4878  0000                     __pstringtext4:
  4879                           
  4880                           	psect	cinit
  4881  07DD                     start_initialization:	
  4882                           ; #config settings
  4883                           
  4884  07DD                     __initialization:
  4885                           
  4886                           ; Initialize objects allocated to BANK0
  4887  07DD  30DD               	movlw	low __pidataBANK0
  4888  07DE  0084               	movwf	4
  4889  07DF  3081               	movlw	(high __pidataBANK0)| (0+128)
  4890  07E0  0085               	movwf	5
  4891  07E1  3050               	movlw	low __pdataBANK0
  4892  07E2  0086               	movwf	6
  4893  07E3  3000               	movlw	high __pdataBANK0
  4894  07E4  0087               	movwf	7
  4895  07E5  300F               	movlw	15
  4896  07E6  3181  2169  3187   	fcall	init_ram
  4897                           
  4898                           ; Initialize objects allocated to BANK1
  4899  07E9  3040               	movlw	low __pidataBANK1
  4900  07EA  0084               	movwf	4
  4901  07EB  3082               	movlw	(high __pidataBANK1)| (0+128)
  4902  07EC  0085               	movwf	5
  4903  07ED  30A0               	movlw	low __pdataBANK1
  4904  07EE  0086               	movwf	6
  4905  07EF  3000               	movlw	high __pdataBANK1
  4906  07F0  0087               	movwf	7
  4907  07F1  3011               	movlw	17
  4908  07F2  3181  2169  3187   	fcall	init_ram
  4909                           
  4910                           ; Clear objects allocated to BANK0
  4911  07F5  3020               	movlw	low __pbssBANK0
  4912  07F6  0084               	movwf	4
  4913  07F7  3000               	movlw	high __pbssBANK0
  4914  07F8  0085               	movwf	5
  4915  07F9  301D               	movlw	29
  4916  07FA  3181  2163  3187   	fcall	clear_ram0
  4917  07FD                     end_of_initialization:	
  4918                           ;End of C runtime variable initialization code
  4919                           
  4920  07FD                     __end_of__initialization:
  4921  07FD  0020               	movlb	0
  4922  07FE  3185  2DF6         	ljmp	_main	;jump to C main() function
  4923                           
  4924                           	psect	bssBANK0
  4925  0020                     __pbssBANK0:
  4926  0020                     _I2C_Status:
  4927  0020                     	ds	29
  4928                           
  4929                           	psect	dataBANK0
  4930  0050                     __pdataBANK0:
  4931  0050                     _Duty:
  4932  0050                     	ds	2
  4933  0052                     _Flag:
  4934  0052                     	ds	1
  4935  0053                     _Msg2:
  4936  0053                     	ds	12
  4937                           
  4938                           	psect	dataBANK1
  4939  00A0                     __pdataBANK1:
  4940  00A0                     _Msg1:
  4941  00A0                     	ds	17
  4942                           
  4943                           	psect	inittext
  4944  0169                     init_ram:
  4945  0169  00FE               	movwf	btemp
  4946  016A                     initloop:
  4947  016A  0012               	moviw fsr0++
  4948  016B  001E               	movwi fsr1++
  4949  016C  0BFE               	decfsz	btemp,f
  4950  016D  296A               	goto	initloop
  4951  016E  3400               	retlw	0
  4952                           
  4953                           	psect	clrtext
  4954  0163                     clear_ram0:	
  4955                           ;	Called with FSR0 containing the base address, and
  4956                           ;	WREG with the size to clear
  4957                           
  4958  0163  0064               	clrwdt	;clear the watchdog before getting into this loop
  4959  0164                     clrloop0:
  4960  0164  0180               	clrf	0	;clear RAM location pointed to by FSR
  4961  0165  3101               	addfsr 0,1
  4962  0166  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4963  0167  2964               	goto	clrloop0	;have we reached the end yet?
  4964  0168  3400               	retlw	0	;all done for this memory range, return
  4965                           
  4966                           	psect	cstackCOMMON
  4967  0070                     __pcstackCOMMON:
  4968  0070                     ?_isdigit:
  4969  0070                     ?_I2C_Open:	
  4970                           ; 1 bit 
  4971                           
  4972  0070                     ??_I2C_Open:	
  4973                           ; 1 bytes @ 0x0
  4974                           
  4975  0070                     ?_I2C_SetBuffer:	
  4976                           ; 1 bytes @ 0x0
  4977                           
  4978  0070                     ?_I2C_MasterWrite:	
  4979                           ; 1 bytes @ 0x0
  4980                           
  4981  0070                     ?_I2C_Close:	
  4982                           ; 1 bytes @ 0x0
  4983                           
  4984  0070                     ??_I2C_Close:	
  4985                           ; 1 bytes @ 0x0
  4986                           
  4987  0070                     ?_I2C_Initialize:	
  4988                           ; 1 bytes @ 0x0
  4989                           
  4990  0070                     ??_I2C_Initialize:	
  4991                           ; 1 bytes @ 0x0
  4992                           
  4993  0070                     ?_PIN_MANAGER_Initialize:	
  4994                           ; 1 bytes @ 0x0
  4995                           
  4996  0070                     ??_PIN_MANAGER_Initialize:	
  4997                           ; 1 bytes @ 0x0
  4998                           
  4999  0070                     ?_OSCILLATOR_Initialize:	
  5000                           ; 1 bytes @ 0x0
  5001                           
  5002  0070                     ??_OSCILLATOR_Initialize:	
  5003                           ; 1 bytes @ 0x0
  5004                           
  5005  0070                     ?_WDT_Initialize:	
  5006                           ; 1 bytes @ 0x0
  5007                           
  5008  0070                     ??_WDT_Initialize:	
  5009                           ; 1 bytes @ 0x0
  5010                           
  5011  0070                     ?_COG3_Initialize:	
  5012                           ; 1 bytes @ 0x0
  5013                           
  5014  0070                     ??_COG3_Initialize:	
  5015                           ; 1 bytes @ 0x0
  5016                           
  5017  0070                     ?_I2C_DO_IDLE:	
  5018                           ; 1 bytes @ 0x0
  5019                           
  5020  0070                     ??_I2C_DO_IDLE:	
  5021                           ; 1 bytes @ 0x0
  5022                           
  5023  0070                     ?_I2C_DO_SEND_ADR_READ:	
  5024                           ; 1 bytes @ 0x0
  5025                           
  5026  0070                     ??_I2C_DO_SEND_ADR_READ:	
  5027                           ; 1 bytes @ 0x0
  5028                           
  5029  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  5030                           ; 1 bytes @ 0x0
  5031                           
  5032  0070                     ?_I2C_DO_TX:	
  5033                           ; 1 bytes @ 0x0
  5034                           
  5035  0070                     ?_I2C_DO_RX:	
  5036                           ; 1 bytes @ 0x0
  5037                           
  5038  0070                     ?_I2C_DO_RCEN:	
  5039                           ; 1 bytes @ 0x0
  5040                           
  5041  0070                     ??_I2C_DO_RCEN:	
  5042                           ; 1 bytes @ 0x0
  5043                           
  5044  0070                     ?_I2C_DO_TX_EMPTY:	
  5045                           ; 1 bytes @ 0x0
  5046                           
  5047  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  5048                           ; 1 bytes @ 0x0
  5049                           
  5050  0070                     ??_I2C_DO_SEND_RESTART_READ:	
  5051                           ; 1 bytes @ 0x0
  5052                           
  5053  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  5054                           ; 1 bytes @ 0x0
  5055                           
  5056  0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  5057                           ; 1 bytes @ 0x0
  5058                           
  5059  0070                     ?_I2C_DO_SEND_RESTART:	
  5060                           ; 1 bytes @ 0x0
  5061                           
  5062  0070                     ??_I2C_DO_SEND_RESTART:	
  5063                           ; 1 bytes @ 0x0
  5064                           
  5065  0070                     ?_I2C_DO_SEND_STOP:	
  5066                           ; 1 bytes @ 0x0
  5067                           
  5068  0070                     ??_I2C_DO_SEND_STOP:	
  5069                           ; 1 bytes @ 0x0
  5070                           
  5071  0070                     ?_I2C_DO_RX_ACK:	
  5072                           ; 1 bytes @ 0x0
  5073                           
  5074  0070                     ??_I2C_DO_RX_ACK:	
  5075                           ; 1 bytes @ 0x0
  5076                           
  5077  0070                     ?_I2C_DO_RX_NACK_STOP:	
  5078                           ; 1 bytes @ 0x0
  5079                           
  5080  0070                     ??_I2C_DO_RX_NACK_STOP:	
  5081                           ; 1 bytes @ 0x0
  5082                           
  5083  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  5084                           ; 1 bytes @ 0x0
  5085                           
  5086  0070                     ??_I2C_DO_RX_NACK_RESTART:	
  5087                           ; 1 bytes @ 0x0
  5088                           
  5089  0070                     ?_I2C_DO_RESET:	
  5090                           ; 1 bytes @ 0x0
  5091                           
  5092  0070                     ??_I2C_DO_RESET:	
  5093                           ; 1 bytes @ 0x0
  5094                           
  5095  0070                     ?_I2C_DO_ADDRESS_NACK:	
  5096                           ; 1 bytes @ 0x0
  5097                           
  5098  0070                     ?_I2C_MasterClearIrq:	
  5099                           ; 1 bytes @ 0x0
  5100                           
  5101  0070                     ??_I2C_MasterClearIrq:	
  5102                           ; 1 bytes @ 0x0
  5103                           
  5104  0070                     ?_I2C_MasterOpen:	
  5105                           ; 1 bytes @ 0x0
  5106                           
  5107  0070                     ??_I2C_MasterOpen:	
  5108                           ; 1 bytes @ 0x0
  5109                           
  5110  0070                     ?_I2C_MasterDisableIrq:	
  5111                           ; 1 bytes @ 0x0
  5112                           
  5113  0070                     ??_I2C_MasterDisableIrq:	
  5114                           ; 1 bytes @ 0x0
  5115                           
  5116  0070                     ?_I2C_MasterClose:	
  5117                           ; 1 bytes @ 0x0
  5118                           
  5119  0070                     ??_I2C_MasterClose:	
  5120                           ; 1 bytes @ 0x0
  5121                           
  5122  0070                     ?_I2C_MasterStart:	
  5123                           ; 1 bytes @ 0x0
  5124                           
  5125  0070                     ??_I2C_MasterStart:	
  5126                           ; 1 bytes @ 0x0
  5127                           
  5128  0070                     ?_I2C_Poller:	
  5129                           ; 1 bytes @ 0x0
  5130                           
  5131  0070                     ?_I2C_SetCallback:	
  5132                           ; 1 bytes @ 0x0
  5133                           
  5134  0070                     ?_I2C_MasterWaitForEvent:	
  5135                           ; 1 bytes @ 0x0
  5136                           
  5137  0070                     ??_I2C_MasterWaitForEvent:	
  5138                           ; 1 bytes @ 0x0
  5139                           
  5140  0070                     ?_I2C_MasterFsm:	
  5141                           ; 1 bytes @ 0x0
  5142                           
  5143  0070                     ?_I2C_MasterIsNack:	
  5144                           ; 1 bytes @ 0x0
  5145                           
  5146  0070                     ??_I2C_MasterIsNack:	
  5147                           ; 1 bytes @ 0x0
  5148                           
  5149  0070                     ?_I2C_MasterSendTxData:	
  5150                           ; 1 bytes @ 0x0
  5151                           
  5152  0070                     ??_I2C_MasterSendTxData:	
  5153                           ; 1 bytes @ 0x0
  5154                           
  5155  0070                     ?_I2C_MasterGetRxData:	
  5156                           ; 1 bytes @ 0x0
  5157                           
  5158  0070                     ??_I2C_MasterGetRxData:	
  5159                           ; 1 bytes @ 0x0
  5160                           
  5161  0070                     ?_I2C_MasterSendAck:	
  5162                           ; 1 bytes @ 0x0
  5163                           
  5164  0070                     ??_I2C_MasterSendAck:	
  5165                           ; 1 bytes @ 0x0
  5166                           
  5167  0070                     ?_I2C_MasterStartRx:	
  5168                           ; 1 bytes @ 0x0
  5169                           
  5170  0070                     ??_I2C_MasterStartRx:	
  5171                           ; 1 bytes @ 0x0
  5172                           
  5173  0070                     ?_I2C_MasterSetIrq:	
  5174                           ; 1 bytes @ 0x0
  5175                           
  5176  0070                     ??_I2C_MasterSetIrq:	
  5177                           ; 1 bytes @ 0x0
  5178                           
  5179  0070                     ?_I2C_MasterEnableRestart:	
  5180                           ; 1 bytes @ 0x0
  5181                           
  5182  0070                     ??_I2C_MasterEnableRestart:	
  5183                           ; 1 bytes @ 0x0
  5184                           
  5185  0070                     ?_I2C_MasterStop:	
  5186                           ; 1 bytes @ 0x0
  5187                           
  5188  0070                     ??_I2C_MasterStop:	
  5189                           ; 1 bytes @ 0x0
  5190                           
  5191  0070                     ?_I2C_MasterSendNack:	
  5192                           ; 1 bytes @ 0x0
  5193                           
  5194  0070                     ??_I2C_MasterSendNack:	
  5195                           ; 1 bytes @ 0x0
  5196                           
  5197  0070                     ?_lcd_init:	
  5198                           ; 1 bytes @ 0x0
  5199                           
  5200  0070                     ?_lcd_cmd:	
  5201                           ; 1 bytes @ 0x0
  5202                           
  5203  0070                     ??_isdigit:	
  5204                           ; 1 bytes @ 0x0
  5205                           
  5206  0070                     ?_PWM1_Initialize:	
  5207                           ; 1 bytes @ 0x0
  5208                           
  5209  0070                     ??_PWM1_Initialize:	
  5210                           ; 1 bytes @ 0x0
  5211                           
  5212  0070                     ?_PWM1_LoadDutyValue:	
  5213                           ; 1 bytes @ 0x0
  5214                           
  5215  0070                     ?_TMR2_Initialize:	
  5216                           ; 1 bytes @ 0x0
  5217                           
  5218  0070                     ??_TMR2_Initialize:	
  5219                           ; 1 bytes @ 0x0
  5220                           
  5221  0070                     ?_SYSTEM_Initialize:	
  5222                           ; 1 bytes @ 0x0
  5223                           
  5224  0070                     ??_SYSTEM_Initialize:	
  5225                           ; 1 bytes @ 0x0
  5226                           
  5227  0070                     ?_I2C_MasterOperation:	
  5228                           ; 1 bytes @ 0x0
  5229                           
  5230  0070                     ?_main:	
  5231                           ; 1 bytes @ 0x0
  5232                           
  5233  0070                     ?_lcd_data:	
  5234                           ; 1 bytes @ 0x0
  5235                           
  5236  0070                     ?___wmul:	
  5237                           ; 1 bytes @ 0x0
  5238                           
  5239  0070                     ?___lwdiv:	
  5240                           ; 2 bytes @ 0x0
  5241                           
  5242  0070                     I2C_MasterSendTxData@data:	
  5243                           ; 2 bytes @ 0x0
  5244                           
  5245  0070                     _isdigit$1787:	
  5246                           ; 1 bytes @ 0x0
  5247                           
  5248  0070                     PWM1_LoadDutyValue@dutyValue:	
  5249                           ; 1 bytes @ 0x0
  5250                           
  5251  0070                     I2C_SetBuffer@bufferSize:	
  5252                           ; 2 bytes @ 0x0
  5253                           
  5254  0070                     I2C_SetCallback@cb:	
  5255                           ; 2 bytes @ 0x0
  5256                           
  5257  0070                     ___wmul@multiplier:	
  5258                           ; 2 bytes @ 0x0
  5259                           
  5260  0070                     ___lwdiv@divisor:	
  5261                           ; 2 bytes @ 0x0
  5262                           
  5263                           
  5264                           ; 2 bytes @ 0x0
  5265  0070                     	ds	1
  5266  0071                     ??_I2C_DO_SEND_ADR_WRITE:
  5267  0071                     I2C_Open@address:	
  5268                           ; 1 bytes @ 0x1
  5269                           
  5270  0071                     I2C_Close@returnValue:	
  5271                           ; 1 bytes @ 0x1
  5272                           
  5273  0071                     isdigit@c:	
  5274                           ; 1 bytes @ 0x1
  5275                           
  5276                           
  5277                           ; 1 bytes @ 0x1
  5278  0071                     	ds	1
  5279  0072                     ??_I2C_SetBuffer:
  5280  0072                     ??_PWM1_LoadDutyValue:	
  5281                           ; 1 bytes @ 0x2
  5282                           
  5283  0072                     I2C_Open@returnValue:	
  5284                           ; 1 bytes @ 0x2
  5285                           
  5286  0072                     I2C_SetCallback@ptr:	
  5287                           ; 1 bytes @ 0x2
  5288                           
  5289  0072                     ___wmul@multiplicand:	
  5290                           ; 1 bytes @ 0x2
  5291                           
  5292  0072                     ___lwdiv@dividend:	
  5293                           ; 2 bytes @ 0x2
  5294                           
  5295                           
  5296                           ; 2 bytes @ 0x2
  5297  0072                     	ds	1
  5298  0073                     ??_I2C_SetCallback:
  5299  0073                     I2C_SetBuffer@buffer:	
  5300                           ; 1 bytes @ 0x3
  5301                           
  5302                           
  5303                           ; 1 bytes @ 0x3
  5304  0073                     	ds	1
  5305  0074                     ??___wmul:
  5306  0074                     ??___lwdiv:	
  5307                           ; 1 bytes @ 0x4
  5308                           
  5309  0074                     I2C_SetCallback@idx:	
  5310                           ; 1 bytes @ 0x4
  5311                           
  5312  0074                     ___wmul@product:	
  5313                           ; 1 bytes @ 0x4
  5314                           
  5315                           
  5316                           ; 2 bytes @ 0x4
  5317  0074                     	ds	1
  5318  0075                     ?_I2C_SetDataCompleteCallback:
  5319  0075                     I2C_SetDataCompleteCallback@cb:	
  5320                           ; 1 bytes @ 0x5
  5321                           
  5322  0075                     ___lwdiv@quotient:	
  5323                           ; 2 bytes @ 0x5
  5324                           
  5325                           
  5326                           ; 2 bytes @ 0x5
  5327  0075                     	ds	2
  5328  0077                     I2C_SetDataCompleteCallback@ptr:
  5329  0077                     ___lwdiv@counter:	
  5330                           ; 1 bytes @ 0x7
  5331                           
  5332                           
  5333                           ; 1 bytes @ 0x7
  5334  0077                     	ds	1
  5335  0078                     ??_I2C_SetDataCompleteCallback:
  5336  0078                     ?___lwmod:	
  5337                           ; 1 bytes @ 0x8
  5338                           
  5339  0078                     ___lwmod@divisor:	
  5340                           ; 2 bytes @ 0x8
  5341                           
  5342                           
  5343                           ; 2 bytes @ 0x8
  5344  0078                     	ds	1
  5345  0079                     ?_rd1RegCompleteHandler:
  5346  0079                     ?_rd2RegCompleteHandler:	
  5347                           ; 1 bytes @ 0x9
  5348                           
  5349  0079                     ?_wr1RegCompleteHandler:	
  5350                           ; 1 bytes @ 0x9
  5351                           
  5352  0079                     ?_wr2RegCompleteHandler:	
  5353                           ; 1 bytes @ 0x9
  5354                           
  5355  0079                     ?_rdBlkRegCompleteHandler:	
  5356                           ; 1 bytes @ 0x9
  5357                           
  5358  0079                     ?_I2C_CallbackReturnStop:	
  5359                           ; 1 bytes @ 0x9
  5360                           
  5361  0079                     ?_I2C_CallbackReturnReset:	
  5362                           ; 1 bytes @ 0x9
  5363                           
  5364  0079                     rd1RegCompleteHandler@ptr:	
  5365                           ; 1 bytes @ 0x9
  5366                           
  5367  0079                     rd2RegCompleteHandler@ptr:	
  5368                           ; 1 bytes @ 0x9
  5369                           
  5370  0079                     wr1RegCompleteHandler@ptr:	
  5371                           ; 1 bytes @ 0x9
  5372                           
  5373  0079                     wr2RegCompleteHandler@ptr:	
  5374                           ; 1 bytes @ 0x9
  5375                           
  5376  0079                     rdBlkRegCompleteHandler@ptr:	
  5377                           ; 1 bytes @ 0x9
  5378                           
  5379  0079                     I2C_CallbackReturnStop@funPtr:	
  5380                           ; 1 bytes @ 0x9
  5381                           
  5382  0079                     I2C_CallbackReturnReset@funPtr:	
  5383                           ; 1 bytes @ 0x9
  5384                           
  5385                           
  5386                           ; 1 bytes @ 0x9
  5387  0079                     	ds	1
  5388  007A                     ??_rd1RegCompleteHandler:
  5389  007A                     ??_rd2RegCompleteHandler:	
  5390                           ; 1 bytes @ 0xA
  5391                           
  5392  007A                     ??_wr1RegCompleteHandler:	
  5393                           ; 1 bytes @ 0xA
  5394                           
  5395  007A                     ??_wr2RegCompleteHandler:	
  5396                           ; 1 bytes @ 0xA
  5397                           
  5398  007A                     ??_rdBlkRegCompleteHandler:	
  5399                           ; 1 bytes @ 0xA
  5400                           
  5401  007A                     ??_I2C_DO_TX:	
  5402                           ; 1 bytes @ 0xA
  5403                           
  5404  007A                     ??_I2C_DO_RX:	
  5405                           ; 1 bytes @ 0xA
  5406                           
  5407  007A                     ??_I2C_DO_TX_EMPTY:	
  5408                           ; 1 bytes @ 0xA
  5409                           
  5410  007A                     ??_I2C_DO_ADDRESS_NACK:	
  5411                           ; 1 bytes @ 0xA
  5412                           
  5413  007A                     ??_I2C_CallbackReturnStop:	
  5414                           ; 1 bytes @ 0xA
  5415                           
  5416  007A                     ??_I2C_CallbackReturnReset:	
  5417                           ; 1 bytes @ 0xA
  5418                           
  5419  007A                     ___lwmod@dividend:	
  5420                           ; 1 bytes @ 0xA
  5421                           
  5422                           
  5423                           ; 2 bytes @ 0xA
  5424  007A                     	ds	1
  5425  007B                     _I2C_DO_TX$1178:
  5426                           
  5427                           ; 2 bytes @ 0xB
  5428  007B                     	ds	1
  5429  007C                     ??___lwmod:
  5430                           
  5431                           ; 1 bytes @ 0xC
  5432  007C                     	ds	1
  5433  007D                     ??_I2C_Poller:
  5434  007D                     ??_I2C_MasterOperation:	
  5435                           ; 1 bytes @ 0xD
  5436                           
  5437  007D                     ___lwmod@counter:	
  5438                           ; 1 bytes @ 0xD
  5439                           
  5440                           
  5441                           ; 1 bytes @ 0xD
  5442  007D                     	ds	1
  5443  007E                     ??_I2C_MasterWrite:
  5444                           
  5445                           	psect	cstackBANK0
  5446  003D                     __pcstackBANK0:	
  5447                           ; 1 bytes @ 0xE
  5448                           
  5449  003D                     ??_I2C_MasterFsm:
  5450  003D                     ?_sprintf:	
  5451                           ; 1 bytes @ 0x0
  5452                           
  5453  003D                     sprintf@f:	
  5454                           ; 2 bytes @ 0x0
  5455                           
  5456                           
  5457                           ; 2 bytes @ 0x0
  5458  003D                     	ds	3
  5459  0040                     I2C_MasterOperation@read:
  5460                           
  5461                           ; 1 bytes @ 0x3
  5462  0040                     	ds	1
  5463  0041                     ??_sprintf:
  5464  0041                     I2C_MasterOperation@returnValue:	
  5465                           ; 1 bytes @ 0x4
  5466                           
  5467                           
  5468                           ; 1 bytes @ 0x4
  5469  0041                     	ds	1
  5470  0042                     ??_lcd_cmd:
  5471  0042                     ??_lcd_data:	
  5472                           ; 1 bytes @ 0x5
  5473                           
  5474                           
  5475                           ; 1 bytes @ 0x5
  5476  0042                     	ds	1
  5477  0043                     lcd_data@data:
  5478  0043                     lcd_cmd@tbuf:	
  5479                           ; 1 bytes @ 0x6
  5480                           
  5481                           
  5482                           ; 2 bytes @ 0x6
  5483  0043                     	ds	1
  5484  0044                     lcd_data@tbuf:
  5485                           
  5486                           ; 2 bytes @ 0x7
  5487  0044                     	ds	1
  5488  0045                     lcd_cmd@cmd:
  5489  0045                     sprintf@ap:	
  5490                           ; 1 bytes @ 0x8
  5491                           
  5492                           
  5493                           ; 1 bytes @ 0x8
  5494  0045                     	ds	1
  5495  0046                     ??_lcd_init:
  5496  0046                     ?_lcd_str:	
  5497                           ; 1 bytes @ 0x9
  5498                           
  5499  0046                     ??_lcd_str:	
  5500                           ; 1 bytes @ 0x9
  5501                           
  5502  0046                     sprintf@prec:	
  5503                           ; 1 bytes @ 0x9
  5504                           
  5505                           
  5506                           ; 1 bytes @ 0x9
  5507  0046                     	ds	1
  5508  0047                     lcd_str@ptr:
  5509  0047                     sprintf@flag:	
  5510                           ; 1 bytes @ 0xA
  5511                           
  5512                           
  5513                           ; 1 bytes @ 0xA
  5514  0047                     	ds	1
  5515  0048                     sprintf@val:
  5516                           
  5517                           ; 2 bytes @ 0xB
  5518  0048                     	ds	2
  5519  004A                     sprintf@width:
  5520                           
  5521                           ; 2 bytes @ 0xD
  5522  004A                     	ds	2
  5523  004C                     sprintf@sp:
  5524                           
  5525                           ; 1 bytes @ 0xF
  5526  004C                     	ds	1
  5527  004D                     sprintf@c:
  5528                           
  5529                           ; 1 bytes @ 0x10
  5530  004D                     	ds	1
  5531  004E                     ??_main:
  5532                           
  5533                           ; 1 bytes @ 0x11
  5534  004E                     	ds	2
  5535                           
  5536                           	psect	maintext
  5537  05F6                     __pmaintext:	
  5538 ;;
  5539 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5540 ;;
  5541 ;; *************** function _main *****************
  5542 ;; Defined at:
  5543 ;;		line 61 in file "main.c"
  5544 ;; Parameters:    Size  Location     Type
  5545 ;;		None
  5546 ;; Auto vars:     Size  Location     Type
  5547 ;;		None
  5548 ;; Return value:  Size  Location     Type
  5549 ;;                  1    wreg      void 
  5550 ;; Registers used:
  5551 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5552 ;; Tracked objects:
  5553 ;;		On entry : B1F/0
  5554 ;;		On exit  : 0/0
  5555 ;;		Unchanged: 0/0
  5556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5559 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5560 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5561 ;;Total ram usage:        2 bytes
  5562 ;; Hardware stack levels required when called:   10
  5563 ;; This function calls:
  5564 ;;		_PWM1_LoadDutyValue
  5565 ;;		_SYSTEM_Initialize
  5566 ;;		_lcd_cmd
  5567 ;;		_lcd_init
  5568 ;;		_lcd_str
  5569 ;;		_sprintf
  5570 ;; This function is called by:
  5571 ;;		Startup code after reset
  5572 ;; This function uses a non-reentrant model
  5573 ;;
  5574                           
  5575                           
  5576                           ;psect for function _main
  5577  05F6                     _main:
  5578  05F6                     l3334:	
  5579                           ;incstack = 0
  5580                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5581                           
  5582                           
  5583                           ;main.c: 64: SYSTEM_Initialize();
  5584  05F6  3182  2276  3185   	fcall	_SYSTEM_Initialize
  5585  05F9                     l3336:
  5586  05F9  0022               	movlb	2	; select bank2
  5587  05FA  108D               	bcf	13,1	;volatile
  5588  05FB                     l3338:
  5589                           
  5590                           ;main.c: 85: _delay((unsigned long)((10)*(32000000/4000.0)));
  5591  05FB  3068               	movlw	104
  5592  05FC  0020               	movlb	0	; select bank0
  5593  05FD  00CE               	movwf	??_main
  5594  05FE  30E4               	movlw	228
  5595  05FF                     u1757:
  5596  05FF  0B89               	decfsz	9,f
  5597  0600  2DFF               	goto	u1757
  5598  0601  0BCE               	decfsz	??_main,f
  5599  0602  2DFF               	goto	u1757
  5600  0603  0000               	nop
  5601  0604                     l3340:
  5602  0604  0022               	movlb	2	; select bank2
  5603  0605  148D               	bsf	13,1	;volatile
  5604  0606                     l3342:
  5605                           
  5606                           ;main.c: 87: lcd_init();
  5607  0606  3185  2521  3185   	fcall	_lcd_init
  5608  0609                     l3344:
  5609                           
  5610                           ;main.c: 88: lcd_cmd(0x80);
  5611  0609  3080               	movlw	128
  5612  060A  3184  24A6  3185   	fcall	_lcd_cmd
  5613  060D                     l3346:
  5614                           
  5615                           ;main.c: 89: lcd_str(Msg1);
  5616  060D  30A0               	movlw	(low (_Msg1| 0))& (0+255)
  5617  060E  3182  22A4  3185   	fcall	_lcd_str
  5618  0611                     l3348:
  5619                           
  5620                           ;main.c: 91: COG3CON0bits.MD = 2;
  5621  0611  0030               	movlb	16	; select bank16
  5622  0612  0813               	movf	19,w	;volatile
  5623  0613  39F8               	andlw	-8
  5624  0614  3802               	iorlw	2
  5625  0615  0093               	movwf	19	;volatile
  5626  0616                     l3350:
  5627                           
  5628                           ;main.c: 94: sprintf(Msg2, "Duty = %4d", Duty);
  5629  0616  3062               	movlw	low (STR_1| (0+32768))
  5630  0617  0020               	movlb	0	; select bank0
  5631  0618  00BD               	movwf	sprintf@f
  5632  0619  3088               	movlw	high (STR_1| (0+32768))
  5633  061A  00BE               	movwf	sprintf@f+1
  5634  061B  0851               	movf	_Duty+1,w
  5635  061C  00C0               	movwf	?_sprintf+3
  5636  061D  0850               	movf	_Duty,w
  5637  061E  00BF               	movwf	?_sprintf+2
  5638  061F  3053               	movlw	(low (_Msg2| 0))& (0+255)
  5639  0620  3186  2680  3185   	fcall	_sprintf
  5640  0623                     l3352:
  5641                           
  5642                           ;main.c: 95: lcd_cmd(0xC0);
  5643  0623  30C0               	movlw	192
  5644  0624  3184  24A6  3185   	fcall	_lcd_cmd
  5645  0627                     l3354:
  5646                           
  5647                           ;main.c: 96: lcd_str(Msg2);
  5648  0627  3053               	movlw	(low (_Msg2| 0))& (0+255)
  5649  0628  3182  22A4  3185   	fcall	_lcd_str
  5650  062B                     l3356:
  5651                           
  5652                           ;main.c: 97: _delay((unsigned long)((50)*(32000000/4000.0)));
  5653  062B  3003               	movlw	3
  5654  062C  0020               	movlb	0	; select bank0
  5655  062D  00CF               	movwf	??_main+1
  5656  062E  3008               	movlw	8
  5657  062F  00CE               	movwf	??_main
  5658  0630  3077               	movlw	119
  5659  0631                     u1767:
  5660  0631  0B89               	decfsz	9,f
  5661  0632  2E31               	goto	u1767
  5662  0633  0BCE               	decfsz	??_main,f
  5663  0634  2E31               	goto	u1767
  5664  0635  0BCF               	decfsz	??_main+1,f
  5665  0636  2E31               	goto	u1767
  5666  0637                     l3358:
  5667                           
  5668                           ;main.c: 99: if (PORTBbits.RB5 == 0) {
  5669  0637  0020               	movlb	0	; select bank0
  5670  0638  1A8D               	btfsc	13,5	;volatile
  5671  0639  2E3B               	goto	u1711
  5672  063A  2E3C               	goto	u1710
  5673  063B                     u1711:
  5674  063B  2E16               	goto	l3350
  5675  063C                     u1710:
  5676  063C                     l3360:
  5677                           
  5678                           ;main.c: 100: if (Flag == 1) {
  5679  063C  0352               	decf	_Flag,w
  5680  063D  1D03               	btfss	3,2
  5681  063E  2E40               	goto	u1721
  5682  063F  2E41               	goto	u1720
  5683  0640                     u1721:
  5684  0640  2E65               	goto	l3372
  5685  0641                     u1720:
  5686  0641                     l3362:
  5687                           
  5688                           ;main.c: 101: if (Duty < 1024) {
  5689  0641  3004               	movlw	4
  5690  0642  0251               	subwf	_Duty+1,w
  5691  0643  3000               	movlw	0
  5692  0644  1903               	skipnz
  5693  0645  0250               	subwf	_Duty,w
  5694  0646  1803               	skipnc
  5695  0647  2E49               	goto	u1731
  5696  0648  2E4A               	goto	u1730
  5697  0649                     u1731:
  5698  0649  2E63               	goto	l3370
  5699  064A                     u1730:
  5700  064A                     l727:	
  5701                           ;main.c: 102: do { LATBbits.LATB4 = 1; } while(0);
  5702                           
  5703  064A  0022               	movlb	2	; select bank2
  5704  064B  160D               	bsf	13,4	;volatile
  5705  064C                     l3364:
  5706                           
  5707                           ;main.c: 103: PWM1_LoadDutyValue(Duty++);
  5708  064C  0020               	movlb	0	; select bank0
  5709  064D  0851               	movf	_Duty+1,w
  5710  064E  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  5711  064F  0850               	movf	_Duty,w
  5712  0650  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  5713  0651  3182  2263  3185   	fcall	_PWM1_LoadDutyValue
  5714  0654                     l3366:
  5715  0654  3001               	movlw	1
  5716  0655  0020               	movlb	0	; select bank0
  5717  0656  07D0               	addwf	_Duty,f
  5718  0657  3000               	movlw	0
  5719  0658  3DD1               	addwfc	_Duty+1,f
  5720  0659                     l3368:
  5721                           
  5722                           ;main.c: 104: _delay((unsigned long)((10)*(32000000/4000.0)));
  5723  0659  3068               	movlw	104
  5724  065A  0020               	movlb	0	; select bank0
  5725  065B  00CE               	movwf	??_main
  5726  065C  30E4               	movlw	228
  5727  065D                     u1777:
  5728  065D  0B89               	decfsz	9,f
  5729  065E  2E5D               	goto	u1777
  5730  065F  0BCE               	decfsz	??_main,f
  5731  0660  2E5D               	goto	u1777
  5732  0661  0000               	nop
  5733                           
  5734                           ;main.c: 105: } else {
  5735  0662  2E16               	goto	l3350
  5736  0663                     l3370:
  5737                           
  5738                           ;main.c: 106: Flag = 0;
  5739  0663  01D2               	clrf	_Flag
  5740  0664  2E16               	goto	l3350
  5741  0665                     l3372:
  5742                           
  5743                           ;main.c: 110: if (Duty > 0) {
  5744  0665  0850               	movf	_Duty,w
  5745  0666  0451               	iorwf	_Duty+1,w
  5746  0667  1903               	btfsc	3,2
  5747  0668  2E6A               	goto	u1741
  5748  0669  2E6B               	goto	u1740
  5749  066A                     u1741:
  5750  066A  2E7B               	goto	l731
  5751  066B                     u1740:
  5752  066B                     l732:	
  5753                           ;main.c: 111: do { LATBbits.LATB4 = 0; } while(0);
  5754                           
  5755  066B  0022               	movlb	2	; select bank2
  5756  066C  120D               	bcf	13,4	;volatile
  5757  066D                     l3374:
  5758                           
  5759                           ;main.c: 112: PWM1_LoadDutyValue(Duty--);
  5760  066D  0020               	movlb	0	; select bank0
  5761  066E  0851               	movf	_Duty+1,w
  5762  066F  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  5763  0670  0850               	movf	_Duty,w
  5764  0671  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  5765  0672  3182  2263  3185   	fcall	_PWM1_LoadDutyValue
  5766  0675                     l3376:
  5767  0675  3001               	movlw	1
  5768  0676  0020               	movlb	0	; select bank0
  5769  0677  02D0               	subwf	_Duty,f
  5770  0678  3000               	movlw	0
  5771  0679  3BD1               	subwfb	_Duty+1,f
  5772  067A  2E59               	goto	l3368
  5773  067B                     l731:
  5774                           
  5775                           ;main.c: 115: Flag = 1;
  5776  067B  01D2               	clrf	_Flag
  5777  067C  0AD2               	incf	_Flag,f
  5778  067D  2E16               	goto	l3350
  5779  067E  3180  2802         	ljmp	start
  5780  0680                     __end_of_main:
  5781                           
  5782                           	psect	text1
  5783  0680                     __ptext1:	
  5784 ;; *************** function _sprintf *****************
  5785 ;; Defined at:
  5786 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;  sp              1    wreg     PTR unsigned char 
  5789 ;;		 -> Msg2(12), 
  5790 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  5791 ;;		 -> STR_1(11), 
  5792 ;; Auto vars:     Size  Location     Type
  5793 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  5794 ;;		 -> Msg2(12), 
  5795 ;;  tmpval          4    0        struct .
  5796 ;;  width           2   13[BANK0 ] int 
  5797 ;;  val             2   11[BANK0 ] unsigned int 
  5798 ;;  cp              2    0        PTR const unsigned char 
  5799 ;;  len             2    0        unsigned int 
  5800 ;;  c               1   16[BANK0 ] unsigned char 
  5801 ;;  flag            1   10[BANK0 ] unsigned char 
  5802 ;;  prec            1    9[BANK0 ] char 
  5803 ;;  ap              1    8[BANK0 ] PTR void [1]
  5804 ;;		 -> ?_sprintf(2), 
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  2    0[BANK0 ] int 
  5807 ;; Registers used:
  5808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5809 ;; Tracked objects:
  5810 ;;		On entry : 0/0
  5811 ;;		On exit  : 0/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5814 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5815 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5816 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5817 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5818 ;;Total ram usage:       17 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; Hardware stack levels required when called:    1
  5821 ;; This function calls:
  5822 ;;		___lwdiv
  5823 ;;		___lwmod
  5824 ;;		___wmul
  5825 ;;		_isdigit
  5826 ;; This function is called by:
  5827 ;;		_main
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           
  5832                           ;psect for function _sprintf
  5833  0680                     _sprintf:
  5834                           
  5835                           ;incstack = 0
  5836                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5837                           ;sprintf@sp stored from wreg
  5838  0680  0020               	movlb	0	; select bank0
  5839  0681  00CC               	movwf	sprintf@sp
  5840  0682                     l3246:
  5841                           
  5842                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  5843  0682  303F               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  5844  0683  00C1               	movwf	??_sprintf
  5845  0684  0841               	movf	??_sprintf,w
  5846  0685  00C5               	movwf	sprintf@ap
  5847                           
  5848                           ;doprnt.c: 553: while((c = *f++)) {
  5849  0686  2FC4               	goto	l3328
  5850  0687                     l3248:
  5851                           
  5852                           ;doprnt.c: 555: if(c != '%')
  5853  0687  3025               	movlw	37
  5854  0688  064D               	xorwf	sprintf@c,w
  5855  0689  1903               	btfsc	3,2
  5856  068A  2E8C               	goto	u1571
  5857  068B  2E8D               	goto	u1570
  5858  068C                     u1571:
  5859  068C  2E99               	goto	l3254
  5860  068D                     u1570:
  5861  068D                     l3250:
  5862                           
  5863                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  5864  068D  084D               	movf	sprintf@c,w
  5865  068E  00C1               	movwf	??_sprintf
  5866  068F  084C               	movf	sprintf@sp,w
  5867  0690  0086               	movwf	6
  5868  0691  0187               	clrf	7
  5869  0692  0841               	movf	??_sprintf,w
  5870  0693  0081               	movwf	1
  5871  0694                     l3252:
  5872  0694  3001               	movlw	1
  5873  0695  00C1               	movwf	??_sprintf
  5874  0696  0841               	movf	??_sprintf,w
  5875  0697  07CC               	addwf	sprintf@sp,f
  5876                           
  5877                           ;doprnt.c: 559: continue;
  5878  0698  2FC4               	goto	l3328
  5879  0699                     l3254:
  5880                           
  5881                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  5882  0699  01CA               	clrf	sprintf@width
  5883  069A  01CB               	clrf	sprintf@width+1
  5884                           
  5885                           ;doprnt.c: 565: flag = 0;
  5886  069B  01C7               	clrf	sprintf@flag
  5887  069C                     l3256:
  5888                           
  5889                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  5890  069C  083D               	movf	sprintf@f,w
  5891  069D  0084               	movwf	4
  5892  069E  083E               	movf	sprintf@f+1,w
  5893  069F  0085               	movwf	5
  5894  06A0  0800               	movf	0,w	;code access
  5895  06A1  3182  2251  3186   	fcall	_isdigit
  5896  06A4  1C03               	btfss	3,0
  5897  06A5  2EA7               	goto	u1581
  5898  06A6  2EA8               	goto	u1580
  5899  06A7                     u1581:
  5900  06A7  2EDB               	goto	l3270
  5901  06A8                     u1580:
  5902  06A8                     l3258:
  5903                           
  5904                           ;doprnt.c: 615: width = 0;
  5905  06A8  0020               	movlb	0	; select bank0
  5906  06A9  01CA               	clrf	sprintf@width
  5907  06AA  01CB               	clrf	sprintf@width+1
  5908  06AB                     l3260:
  5909                           
  5910                           ;doprnt.c: 617: width *= 10;
  5911  06AB  300A               	movlw	10
  5912  06AC  00F0               	movwf	___wmul@multiplier
  5913  06AD  3000               	movlw	0
  5914  06AE  00F1               	movwf	___wmul@multiplier+1
  5915  06AF  0020               	movlb	0	; select bank0
  5916  06B0  084B               	movf	sprintf@width+1,w
  5917  06B1  00F3               	movwf	___wmul@multiplicand+1
  5918  06B2  084A               	movf	sprintf@width,w
  5919  06B3  00F2               	movwf	___wmul@multiplicand
  5920  06B4  3182  22F7  3186   	fcall	___wmul
  5921  06B7  0871               	movf	?___wmul+1,w
  5922  06B8  0020               	movlb	0	; select bank0
  5923  06B9  00CB               	movwf	sprintf@width+1
  5924  06BA  0870               	movf	?___wmul,w
  5925  06BB  00CA               	movwf	sprintf@width
  5926  06BC                     l3262:
  5927                           
  5928                           ;doprnt.c: 618: width += *f++ - '0';
  5929  06BC  083D               	movf	sprintf@f,w
  5930  06BD  0084               	movwf	4
  5931  06BE  083E               	movf	sprintf@f+1,w
  5932  06BF  0085               	movwf	5
  5933  06C0  0800               	movf	0,w	;code access
  5934  06C1  3ED0               	addlw	208
  5935  06C2  00C1               	movwf	??_sprintf
  5936  06C3  30FF               	movlw	255
  5937  06C4  1803               	skipnc
  5938  06C5  3000               	movlw	0
  5939  06C6  00C2               	movwf	??_sprintf+1
  5940  06C7  0841               	movf	??_sprintf,w
  5941  06C8  07CA               	addwf	sprintf@width,f
  5942  06C9  0842               	movf	??_sprintf+1,w
  5943  06CA  3DCB               	addwfc	sprintf@width+1,f
  5944  06CB                     l3264:
  5945  06CB  3001               	movlw	1
  5946  06CC  07BD               	addwf	sprintf@f,f
  5947  06CD  3000               	movlw	0
  5948  06CE  3DBE               	addwfc	sprintf@f+1,f
  5949  06CF                     l3266:
  5950                           
  5951                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  5952  06CF  083D               	movf	sprintf@f,w
  5953  06D0  0084               	movwf	4
  5954  06D1  083E               	movf	sprintf@f+1,w
  5955  06D2  0085               	movwf	5
  5956  06D3  0800               	movf	0,w	;code access
  5957  06D4  3182  2251  3186   	fcall	_isdigit
  5958  06D7  1803               	btfsc	3,0
  5959  06D8  2EDA               	goto	u1591
  5960  06D9  2EDB               	goto	u1590
  5961  06DA                     u1591:
  5962  06DA  2EAB               	goto	l3260
  5963  06DB                     u1590:
  5964  06DB                     l3270:
  5965  06DB  0020               	movlb	0	; select bank0
  5966  06DC  083E               	movf	sprintf@f+1,w
  5967  06DD  00C2               	movwf	??_sprintf+1
  5968  06DE  083D               	movf	sprintf@f,w
  5969  06DF  00C1               	movwf	??_sprintf
  5970  06E0  0ABD               	incf	sprintf@f,f
  5971  06E1  1903               	skipnz
  5972  06E2  0ABE               	incf	sprintf@f+1,f
  5973  06E3  0841               	movf	??_sprintf,w
  5974  06E4  0084               	movwf	4
  5975  06E5  0842               	movf	??_sprintf+1,w
  5976  06E6  0085               	movwf	5
  5977  06E7  0800               	movf	0,w	;code access
  5978  06E8  00CD               	movwf	sprintf@c
  5979                           
  5980                           ; Switch size 1, requested type "simple"
  5981                           ; Number of cases is 3, Range of values is 0 to 105
  5982                           ; switch strategies available:
  5983                           ; Name         Instructions Cycles
  5984                           ; simple_byte           10     6 (average)
  5985                           ; direct_byte          218     6 (fixed)
  5986                           ; jumptable            260     6 (fixed)
  5987                           ;	Chosen strategy is simple_byte
  5988  06E9  3A00               	xorlw	0	; case 0
  5989  06EA  1903               	skipnz
  5990  06EB  2FD8               	goto	l3330
  5991  06EC  3A64               	xorlw	100	; case 100
  5992  06ED  1903               	skipnz
  5993  06EE  2EF3               	goto	l3272
  5994  06EF  3A0D               	xorlw	13	; case 105
  5995  06F0  1903               	skipnz
  5996  06F1  2EF3               	goto	l3272
  5997  06F2  2FC4               	goto	l3328
  5998  06F3                     l3272:
  5999                           
  6000                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  6001  06F3  0845               	movf	sprintf@ap,w
  6002  06F4  0086               	movwf	6
  6003  06F5  0187               	clrf	7
  6004  06F6  3F40               	moviw [0]fsr1
  6005  06F7  00C8               	movwf	sprintf@val
  6006  06F8  3F41               	moviw [1]fsr1
  6007  06F9  00C9               	movwf	sprintf@val+1
  6008  06FA                     l3274:
  6009  06FA  3002               	movlw	2
  6010  06FB  00C1               	movwf	??_sprintf
  6011  06FC  0841               	movf	??_sprintf,w
  6012  06FD  07C5               	addwf	sprintf@ap,f
  6013  06FE                     l3276:
  6014                           
  6015                           ;doprnt.c: 1287: if((int)val < 0) {
  6016  06FE  1FC9               	btfss	sprintf@val+1,7
  6017  06FF  2F01               	goto	u1601
  6018  0700  2F02               	goto	u1600
  6019  0701                     u1601:
  6020  0701  2F0B               	goto	l3282
  6021  0702                     u1600:
  6022  0702                     l3278:
  6023                           
  6024                           ;doprnt.c: 1288: flag |= 0x03;
  6025  0702  3003               	movlw	3
  6026  0703  00C1               	movwf	??_sprintf
  6027  0704  0841               	movf	??_sprintf,w
  6028  0705  04C7               	iorwf	sprintf@flag,f
  6029  0706                     l3280:
  6030                           
  6031                           ;doprnt.c: 1289: val = -val;
  6032  0706  09C8               	comf	sprintf@val,f
  6033  0707  09C9               	comf	sprintf@val+1,f
  6034  0708  0AC8               	incf	sprintf@val,f
  6035  0709  1903               	skipnz
  6036  070A  0AC9               	incf	sprintf@val+1,f
  6037  070B                     l3282:
  6038                           
  6039                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  6040  070B  01CD               	clrf	sprintf@c
  6041  070C  0ACD               	incf	sprintf@c,f
  6042  070D                     l3288:
  6043                           
  6044                           ;doprnt.c: 1332: if(val < dpowers[c])
  6045  070D  084D               	movf	sprintf@c,w
  6046  070E  00C1               	movwf	??_sprintf
  6047  070F  01C2               	clrf	??_sprintf+1
  6048  0710  35C1               	lslf	??_sprintf,f
  6049  0711  0DC2               	rlf	??_sprintf+1,f
  6050  0712  3058               	movlw	low (_dpowers| (0+32768))
  6051  0713  0741               	addwf	??_sprintf,w
  6052  0714  0084               	movwf	4
  6053  0715  3088               	movlw	high (_dpowers| (0+32768))
  6054  0716  3D42               	addwfc	??_sprintf+1,w
  6055  0717  0085               	movwf	5
  6056  0718  3F00               	moviw [0]fsr0
  6057  0719  00C3               	movwf	??_sprintf+2
  6058  071A  3F01               	moviw [1]fsr0
  6059  071B  00C4               	movwf	??_sprintf+3
  6060  071C  0844               	movf	??_sprintf+3,w
  6061  071D  0249               	subwf	sprintf@val+1,w
  6062  071E  1D03               	skipz
  6063  071F  2F22               	goto	u1615
  6064  0720  0843               	movf	??_sprintf+2,w
  6065  0721  0248               	subwf	sprintf@val,w
  6066  0722                     u1615:
  6067  0722  1803               	skipnc
  6068  0723  2F25               	goto	u1611
  6069  0724  2F26               	goto	u1610
  6070  0725                     u1611:
  6071  0725  2F27               	goto	l3292
  6072  0726                     u1610:
  6073  0726  2F31               	goto	l3294
  6074  0727                     l3292:
  6075  0727  3001               	movlw	1
  6076  0728  00C1               	movwf	??_sprintf
  6077  0729  0841               	movf	??_sprintf,w
  6078  072A  07CD               	addwf	sprintf@c,f
  6079  072B  3005               	movlw	5
  6080  072C  064D               	xorwf	sprintf@c,w
  6081  072D  1D03               	btfss	3,2
  6082  072E  2F30               	goto	u1621
  6083  072F  2F31               	goto	u1620
  6084  0730                     u1621:
  6085  0730  2F0D               	goto	l3288
  6086  0731                     u1620:
  6087  0731                     l3294:
  6088                           
  6089                           ;doprnt.c: 1371: if(width && flag & 0x03)
  6090  0731  084A               	movf	sprintf@width,w
  6091  0732  044B               	iorwf	sprintf@width+1,w
  6092  0733  1903               	btfsc	3,2
  6093  0734  2F36               	goto	u1631
  6094  0735  2F37               	goto	u1630
  6095  0736                     u1631:
  6096  0736  2F41               	goto	l880
  6097  0737                     u1630:
  6098  0737                     l3296:
  6099  0737  0847               	movf	sprintf@flag,w
  6100  0738  3903               	andlw	3
  6101  0739  1903               	btfsc	3,2
  6102  073A  2F3C               	goto	u1641
  6103  073B  2F3D               	goto	u1640
  6104  073C                     u1641:
  6105  073C  2F41               	goto	l880
  6106  073D                     u1640:
  6107  073D                     l3298:
  6108                           
  6109                           ;doprnt.c: 1372: width--;
  6110  073D  30FF               	movlw	255
  6111  073E  07CA               	addwf	sprintf@width,f
  6112  073F  30FF               	movlw	255
  6113  0740  3DCB               	addwfc	sprintf@width+1,f
  6114  0741                     l880:
  6115                           
  6116                           ;doprnt.c: 1407: if(width > c)
  6117  0741  084B               	movf	sprintf@width+1,w
  6118  0742  3A80               	xorlw	128
  6119  0743  3C80               	sublw	128
  6120  0744  1D03               	skipz
  6121  0745  2F48               	goto	u1655
  6122  0746  084A               	movf	sprintf@width,w
  6123  0747  024D               	subwf	sprintf@c,w
  6124  0748                     u1655:
  6125  0748  1803               	skipnc
  6126  0749  2F4B               	goto	u1651
  6127  074A  2F4C               	goto	u1650
  6128  074B                     u1651:
  6129  074B  2F55               	goto	l3302
  6130  074C                     u1650:
  6131  074C                     l3300:
  6132                           
  6133                           ;doprnt.c: 1408: width -= c;
  6134  074C  0020               	movlb	0	; select bank0
  6135  074D  084D               	movf	sprintf@c,w
  6136  074E  00C1               	movwf	??_sprintf
  6137  074F  01C2               	clrf	??_sprintf+1
  6138  0750  0841               	movf	??_sprintf,w
  6139  0751  02CA               	subwf	sprintf@width,f
  6140  0752  0842               	movf	??_sprintf+1,w
  6141  0753  3BCB               	subwfb	sprintf@width+1,f
  6142  0754  2F58               	goto	l3304
  6143  0755                     l3302:
  6144                           
  6145                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  6146  0755  0020               	movlb	0	; select bank0
  6147  0756  01CA               	clrf	sprintf@width
  6148  0757  01CB               	clrf	sprintf@width+1
  6149  0758                     l3304:
  6150                           
  6151                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  6152  0758  084A               	movf	sprintf@width,w
  6153  0759  044B               	iorwf	sprintf@width+1,w
  6154  075A  1903               	btfsc	3,2
  6155  075B  2F5D               	goto	u1661
  6156  075C  2F5E               	goto	u1660
  6157  075D                     u1661:
  6158  075D  2F73               	goto	l3312
  6159  075E                     u1660:
  6160  075E                     l3306:
  6161                           
  6162                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  6163  075E  3020               	movlw	32
  6164  075F  00C1               	movwf	??_sprintf
  6165  0760  084C               	movf	sprintf@sp,w
  6166  0761  0086               	movwf	6
  6167  0762  0187               	clrf	7
  6168  0763  0841               	movf	??_sprintf,w
  6169  0764  0081               	movwf	1
  6170  0765                     l3308:
  6171  0765  3001               	movlw	1
  6172  0766  00C1               	movwf	??_sprintf
  6173  0767  0841               	movf	??_sprintf,w
  6174  0768  07CC               	addwf	sprintf@sp,f
  6175  0769                     l3310:
  6176                           
  6177                           ;doprnt.c: 1457: while(--width);
  6178  0769  30FF               	movlw	255
  6179  076A  07CA               	addwf	sprintf@width,f
  6180  076B  30FF               	movlw	255
  6181  076C  3DCB               	addwfc	sprintf@width+1,f
  6182  076D  084A               	movf	sprintf@width,w
  6183  076E  044B               	iorwf	sprintf@width+1,w
  6184  076F  1D03               	btfss	3,2
  6185  0770  2F72               	goto	u1671
  6186  0771  2F73               	goto	u1670
  6187  0772                     u1671:
  6188  0772  2F5E               	goto	l3306
  6189  0773                     u1670:
  6190  0773                     l3312:
  6191                           
  6192                           ;doprnt.c: 1464: if(flag & 0x03)
  6193  0773  0847               	movf	sprintf@flag,w
  6194  0774  3903               	andlw	3
  6195  0775  1903               	btfsc	3,2
  6196  0776  2F78               	goto	u1681
  6197  0777  2F79               	goto	u1680
  6198  0778                     u1681:
  6199  0778  2F84               	goto	l3318
  6200  0779                     u1680:
  6201  0779                     l3314:
  6202                           
  6203                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  6204  0779  302D               	movlw	45
  6205  077A  00C1               	movwf	??_sprintf
  6206  077B  084C               	movf	sprintf@sp,w
  6207  077C  0086               	movwf	6
  6208  077D  0187               	clrf	7
  6209  077E  0841               	movf	??_sprintf,w
  6210  077F  0081               	movwf	1
  6211  0780                     l3316:
  6212  0780  3001               	movlw	1
  6213  0781  00C1               	movwf	??_sprintf
  6214  0782  0841               	movf	??_sprintf,w
  6215  0783  07CC               	addwf	sprintf@sp,f
  6216  0784                     l3318:
  6217                           
  6218                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  6219  0784  084D               	movf	sprintf@c,w
  6220  0785  00C1               	movwf	??_sprintf
  6221  0786  0841               	movf	??_sprintf,w
  6222  0787  00C6               	movwf	sprintf@prec
  6223                           
  6224                           ;doprnt.c: 1500: while(prec--) {
  6225  0788  2FBB               	goto	l3326
  6226  0789                     l3320:
  6227                           
  6228                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  6229  0789  300A               	movlw	10
  6230  078A  00F8               	movwf	___lwmod@divisor
  6231  078B  3000               	movlw	0
  6232  078C  00F9               	movwf	___lwmod@divisor+1
  6233  078D  0846               	movf	sprintf@prec,w
  6234  078E  00C1               	movwf	??_sprintf
  6235  078F  01C2               	clrf	??_sprintf+1
  6236  0790  35C1               	lslf	??_sprintf,f
  6237  0791  0DC2               	rlf	??_sprintf+1,f
  6238  0792  3058               	movlw	low (_dpowers| (0+32768))
  6239  0793  0741               	addwf	??_sprintf,w
  6240  0794  0084               	movwf	4
  6241  0795  3088               	movlw	high (_dpowers| (0+32768))
  6242  0796  3D42               	addwfc	??_sprintf+1,w
  6243  0797  0085               	movwf	5
  6244  0798  3F00               	moviw [0]fsr0
  6245  0799  00F0               	movwf	___lwdiv@divisor
  6246  079A  3F01               	moviw [1]fsr0
  6247  079B  00F1               	movwf	___lwdiv@divisor+1
  6248  079C  0849               	movf	sprintf@val+1,w
  6249  079D  00F3               	movwf	___lwdiv@dividend+1
  6250  079E  0848               	movf	sprintf@val,w
  6251  079F  00F2               	movwf	___lwdiv@dividend
  6252  07A0  3184  246A  3186   	fcall	___lwdiv
  6253  07A3  0871               	movf	?___lwdiv+1,w
  6254  07A4  00FB               	movwf	___lwmod@dividend+1
  6255  07A5  0870               	movf	?___lwdiv,w
  6256  07A6  00FA               	movwf	___lwmod@dividend
  6257  07A7  3183  23FC  3186   	fcall	___lwmod
  6258  07AA  0878               	movf	?___lwmod,w
  6259  07AB  3E30               	addlw	48
  6260  07AC  0020               	movlb	0	; select bank0
  6261  07AD  00C3               	movwf	??_sprintf+2
  6262  07AE  0843               	movf	??_sprintf+2,w
  6263  07AF  00CD               	movwf	sprintf@c
  6264  07B0                     l3322:
  6265                           
  6266                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  6267  07B0  084D               	movf	sprintf@c,w
  6268  07B1  00C1               	movwf	??_sprintf
  6269  07B2  084C               	movf	sprintf@sp,w
  6270  07B3  0086               	movwf	6
  6271  07B4  0187               	clrf	7
  6272  07B5  0841               	movf	??_sprintf,w
  6273  07B6  0081               	movwf	1
  6274  07B7                     l3324:
  6275  07B7  3001               	movlw	1
  6276  07B8  00C1               	movwf	??_sprintf
  6277  07B9  0841               	movf	??_sprintf,w
  6278  07BA  07CC               	addwf	sprintf@sp,f
  6279  07BB                     l3326:
  6280  07BB  30FF               	movlw	255
  6281  07BC  00C1               	movwf	??_sprintf
  6282  07BD  0841               	movf	??_sprintf,w
  6283  07BE  07C6               	addwf	sprintf@prec,f
  6284  07BF  0A46               	incf	sprintf@prec,w
  6285  07C0  1D03               	btfss	3,2
  6286  07C1  2FC3               	goto	u1691
  6287  07C2  2FC4               	goto	u1690
  6288  07C3                     u1691:
  6289  07C3  2F89               	goto	l3320
  6290  07C4                     u1690:
  6291  07C4                     l3328:
  6292  07C4  083E               	movf	sprintf@f+1,w
  6293  07C5  00C2               	movwf	??_sprintf+1
  6294  07C6  083D               	movf	sprintf@f,w
  6295  07C7  00C1               	movwf	??_sprintf
  6296  07C8  0ABD               	incf	sprintf@f,f
  6297  07C9  1903               	skipnz
  6298  07CA  0ABE               	incf	sprintf@f+1,f
  6299  07CB  0841               	movf	??_sprintf,w
  6300  07CC  0084               	movwf	4
  6301  07CD  0842               	movf	??_sprintf+1,w
  6302  07CE  0085               	movwf	5
  6303  07CF  0800               	movf	0,w	;code access
  6304  07D0  00C3               	movwf	??_sprintf+2
  6305  07D1  0843               	movf	??_sprintf+2,w
  6306  07D2  00CD               	movwf	sprintf@c
  6307  07D3  084D               	movf	sprintf@c,w
  6308  07D4  1D03               	btfss	3,2
  6309  07D5  2FD7               	goto	u1701
  6310  07D6  2FD8               	goto	u1700
  6311  07D7                     u1701:
  6312  07D7  2E87               	goto	l3248
  6313  07D8                     u1700:
  6314  07D8                     l3330:
  6315                           
  6316                           ;doprnt.c: 1564: *sp = 0;
  6317  07D8  084C               	movf	sprintf@sp,w
  6318  07D9  0086               	movwf	6
  6319  07DA  0187               	clrf	7
  6320  07DB  0181               	clrf	1
  6321  07DC                     l891:
  6322  07DC  0008               	return
  6323  07DD                     __end_of_sprintf:
  6324                           
  6325                           	psect	text2
  6326  0251                     __ptext2:	
  6327 ;; *************** function _isdigit *****************
  6328 ;; Defined at:
  6329 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\isdigit.c"
  6330 ;; Parameters:    Size  Location     Type
  6331 ;;  c               1    wreg     unsigned char 
  6332 ;; Auto vars:     Size  Location     Type
  6333 ;;  c               1    1[COMMON] unsigned char 
  6334 ;; Return value:  Size  Location     Type
  6335 ;;		None               void
  6336 ;; Registers used:
  6337 ;;		wreg, status,2, status,0
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6344 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6347 ;;Total ram usage:        2 bytes
  6348 ;; Hardware stack levels used:    1
  6349 ;; This function calls:
  6350 ;;		Nothing
  6351 ;; This function is called by:
  6352 ;;		_sprintf
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           
  6357                           ;psect for function _isdigit
  6358  0251                     _isdigit:
  6359                           
  6360                           ;incstack = 0
  6361                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6362                           ;isdigit@c stored from wreg
  6363  0251  00F1               	movwf	isdigit@c
  6364  0252                     l2846:
  6365  0252  01F0               	clrf	_isdigit$1787
  6366  0253                     l2848:
  6367  0253  303A               	movlw	58
  6368  0254  0271               	subwf	isdigit@c,w
  6369  0255  1803               	skipnc
  6370  0256  2A58               	goto	u1001
  6371  0257  2A59               	goto	u1000
  6372  0258                     u1001:
  6373  0258  2A61               	goto	l2854
  6374  0259                     u1000:
  6375  0259                     l2850:
  6376  0259  3030               	movlw	48
  6377  025A  0271               	subwf	isdigit@c,w
  6378  025B  1C03               	skipc
  6379  025C  2A5E               	goto	u1011
  6380  025D  2A5F               	goto	u1010
  6381  025E                     u1011:
  6382  025E  2A61               	goto	l2854
  6383  025F                     u1010:
  6384  025F                     l2852:
  6385  025F  01F0               	clrf	_isdigit$1787
  6386  0260  0AF0               	incf	_isdigit$1787,f
  6387  0261                     l2854:
  6388  0261  0C70               	rrf	_isdigit$1787,w
  6389  0262                     l1348:
  6390  0262  0008               	return
  6391  0263                     __end_of_isdigit:
  6392                           
  6393                           	psect	text3
  6394  02F7                     __ptext3:	
  6395 ;; *************** function ___wmul *****************
  6396 ;; Defined at:
  6397 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  6398 ;; Parameters:    Size  Location     Type
  6399 ;;  multiplier      2    0[COMMON] unsigned int 
  6400 ;;  multiplicand    2    2[COMMON] unsigned int 
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;  product         2    4[COMMON] unsigned int 
  6403 ;; Return value:  Size  Location     Type
  6404 ;;                  2    0[COMMON] unsigned int 
  6405 ;; Registers used:
  6406 ;;		wreg, status,2, status,0
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6412 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6415 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6416 ;;Total ram usage:        6 bytes
  6417 ;; Hardware stack levels used:    1
  6418 ;; This function calls:
  6419 ;;		Nothing
  6420 ;; This function is called by:
  6421 ;;		_sprintf
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           
  6425                           
  6426                           ;psect for function ___wmul
  6427  02F7                     ___wmul:
  6428  02F7                     l2858:	
  6429                           ;incstack = 0
  6430                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6431                           
  6432  02F7  01F4               	clrf	___wmul@product
  6433  02F8  01F5               	clrf	___wmul@product+1
  6434  02F9                     l2860:
  6435  02F9  1C70               	btfss	___wmul@multiplier,0
  6436  02FA  2AFC               	goto	u1021
  6437  02FB  2AFD               	goto	u1020
  6438  02FC                     u1021:
  6439  02FC  2B01               	goto	l895
  6440  02FD                     u1020:
  6441  02FD                     l2862:
  6442  02FD  0872               	movf	___wmul@multiplicand,w
  6443  02FE  07F4               	addwf	___wmul@product,f
  6444  02FF  0873               	movf	___wmul@multiplicand+1,w
  6445  0300  3DF5               	addwfc	___wmul@product+1,f
  6446  0301                     l895:
  6447  0301  3001               	movlw	1
  6448  0302                     u1035:
  6449  0302  35F2               	lslf	___wmul@multiplicand,f
  6450  0303  0DF3               	rlf	___wmul@multiplicand+1,f
  6451  0304  0B89               	decfsz	9,f
  6452  0305  2B02               	goto	u1035
  6453  0306                     l2864:
  6454  0306  3001               	movlw	1
  6455  0307                     u1045:
  6456  0307  36F1               	lsrf	___wmul@multiplier+1,f
  6457  0308  0CF0               	rrf	___wmul@multiplier,f
  6458  0309  0B89               	decfsz	9,f
  6459  030A  2B07               	goto	u1045
  6460  030B                     l2866:
  6461  030B  0870               	movf	___wmul@multiplier,w
  6462  030C  0471               	iorwf	___wmul@multiplier+1,w
  6463  030D  1D03               	btfss	3,2
  6464  030E  2B10               	goto	u1051
  6465  030F  2B11               	goto	u1050
  6466  0310                     u1051:
  6467  0310  2AF9               	goto	l2860
  6468  0311                     u1050:
  6469  0311                     l2868:
  6470  0311  0875               	movf	___wmul@product+1,w
  6471  0312  00F1               	movwf	?___wmul+1
  6472  0313  0874               	movf	___wmul@product,w
  6473  0314  00F0               	movwf	?___wmul
  6474  0315                     l897:
  6475  0315  0008               	return
  6476  0316                     __end_of___wmul:
  6477                           
  6478                           	psect	text4
  6479  03FC                     __ptext4:	
  6480 ;; *************** function ___lwmod *****************
  6481 ;; Defined at:
  6482 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  divisor         2    8[COMMON] unsigned int 
  6485 ;;  dividend        2   10[COMMON] unsigned int 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  counter         1   13[COMMON] unsigned char 
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  2    8[COMMON] unsigned int 
  6490 ;; Registers used:
  6491 ;;		wreg, status,2, status,0
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6497 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6498 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6499 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6500 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6501 ;;Total ram usage:        6 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; This function calls:
  6504 ;;		Nothing
  6505 ;; This function is called by:
  6506 ;;		_sprintf
  6507 ;; This function uses a non-reentrant model
  6508 ;;
  6509                           
  6510                           
  6511                           ;psect for function ___lwmod
  6512  03FC                     ___lwmod:
  6513  03FC                     l2898:	
  6514                           ;incstack = 0
  6515                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6516                           
  6517  03FC  0878               	movf	___lwmod@divisor,w
  6518  03FD  0479               	iorwf	___lwmod@divisor+1,w
  6519  03FE  1903               	btfsc	3,2
  6520  03FF  2C01               	goto	u1131
  6521  0400  2C02               	goto	u1130
  6522  0401                     u1131:
  6523  0401  2C2B               	goto	l2916
  6524  0402                     u1130:
  6525  0402                     l2900:
  6526  0402  01FD               	clrf	___lwmod@counter
  6527  0403  0AFD               	incf	___lwmod@counter,f
  6528  0404  2C0E               	goto	l2906
  6529  0405                     l2902:
  6530  0405  3001               	movlw	1
  6531  0406                     u1145:
  6532  0406  35F8               	lslf	___lwmod@divisor,f
  6533  0407  0DF9               	rlf	___lwmod@divisor+1,f
  6534  0408  0B89               	decfsz	9,f
  6535  0409  2C06               	goto	u1145
  6536  040A                     l2904:
  6537  040A  3001               	movlw	1
  6538  040B  00FC               	movwf	??___lwmod
  6539  040C  087C               	movf	??___lwmod,w
  6540  040D  07FD               	addwf	___lwmod@counter,f
  6541  040E                     l2906:
  6542  040E  1FF9               	btfss	___lwmod@divisor+1,7
  6543  040F  2C11               	goto	u1151
  6544  0410  2C12               	goto	u1150
  6545  0411                     u1151:
  6546  0411  2C05               	goto	l2902
  6547  0412                     u1150:
  6548  0412                     l2908:
  6549  0412  0879               	movf	___lwmod@divisor+1,w
  6550  0413  027B               	subwf	___lwmod@dividend+1,w
  6551  0414  1D03               	skipz
  6552  0415  2C18               	goto	u1165
  6553  0416  0878               	movf	___lwmod@divisor,w
  6554  0417  027A               	subwf	___lwmod@dividend,w
  6555  0418                     u1165:
  6556  0418  1C03               	skipc
  6557  0419  2C1B               	goto	u1161
  6558  041A  2C1C               	goto	u1160
  6559  041B                     u1161:
  6560  041B  2C20               	goto	l2912
  6561  041C                     u1160:
  6562  041C                     l2910:
  6563  041C  0878               	movf	___lwmod@divisor,w
  6564  041D  02FA               	subwf	___lwmod@dividend,f
  6565  041E  0879               	movf	___lwmod@divisor+1,w
  6566  041F  3BFB               	subwfb	___lwmod@dividend+1,f
  6567  0420                     l2912:
  6568  0420  3001               	movlw	1
  6569  0421                     u1175:
  6570  0421  36F9               	lsrf	___lwmod@divisor+1,f
  6571  0422  0CF8               	rrf	___lwmod@divisor,f
  6572  0423  0B89               	decfsz	9,f
  6573  0424  2C21               	goto	u1175
  6574  0425                     l2914:
  6575  0425  3001               	movlw	1
  6576  0426  02FD               	subwf	___lwmod@counter,f
  6577  0427  1D03               	btfss	3,2
  6578  0428  2C2A               	goto	u1181
  6579  0429  2C2B               	goto	u1180
  6580  042A                     u1181:
  6581  042A  2C12               	goto	l2908
  6582  042B                     u1180:
  6583  042B                     l2916:
  6584  042B  087B               	movf	___lwmod@dividend+1,w
  6585  042C  00F9               	movwf	?___lwmod+1
  6586  042D  087A               	movf	___lwmod@dividend,w
  6587  042E  00F8               	movwf	?___lwmod
  6588  042F                     l1177:
  6589  042F  0008               	return
  6590  0430                     __end_of___lwmod:
  6591                           
  6592                           	psect	text5
  6593  046A                     __ptext5:	
  6594 ;; *************** function ___lwdiv *****************
  6595 ;; Defined at:
  6596 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  6597 ;; Parameters:    Size  Location     Type
  6598 ;;  divisor         2    0[COMMON] unsigned int 
  6599 ;;  dividend        2    2[COMMON] unsigned int 
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;  quotient        2    5[COMMON] unsigned int 
  6602 ;;  counter         1    7[COMMON] unsigned char 
  6603 ;; Return value:  Size  Location     Type
  6604 ;;                  2    0[COMMON] unsigned int 
  6605 ;; Registers used:
  6606 ;;		wreg, status,2, status,0
  6607 ;; Tracked objects:
  6608 ;;		On entry : 0/0
  6609 ;;		On exit  : 0/0
  6610 ;;		Unchanged: 0/0
  6611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6612 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6613 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6614 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6615 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6616 ;;Total ram usage:        8 bytes
  6617 ;; Hardware stack levels used:    1
  6618 ;; This function calls:
  6619 ;;		Nothing
  6620 ;; This function is called by:
  6621 ;;		_sprintf
  6622 ;; This function uses a non-reentrant model
  6623 ;;
  6624                           
  6625                           
  6626                           ;psect for function ___lwdiv
  6627  046A                     ___lwdiv:
  6628  046A                     l2872:	
  6629                           ;incstack = 0
  6630                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6631                           
  6632  046A  01F5               	clrf	___lwdiv@quotient
  6633  046B  01F6               	clrf	___lwdiv@quotient+1
  6634  046C                     l2874:
  6635  046C  0870               	movf	___lwdiv@divisor,w
  6636  046D  0471               	iorwf	___lwdiv@divisor+1,w
  6637  046E  1903               	btfsc	3,2
  6638  046F  2C71               	goto	u1061
  6639  0470  2C72               	goto	u1060
  6640  0471                     u1061:
  6641  0471  2CA1               	goto	l2894
  6642  0472                     u1060:
  6643  0472                     l2876:
  6644  0472  01F7               	clrf	___lwdiv@counter
  6645  0473  0AF7               	incf	___lwdiv@counter,f
  6646  0474  2C7E               	goto	l2882
  6647  0475                     l2878:
  6648  0475  3001               	movlw	1
  6649  0476                     u1075:
  6650  0476  35F0               	lslf	___lwdiv@divisor,f
  6651  0477  0DF1               	rlf	___lwdiv@divisor+1,f
  6652  0478  0B89               	decfsz	9,f
  6653  0479  2C76               	goto	u1075
  6654  047A                     l2880:
  6655  047A  3001               	movlw	1
  6656  047B  00F4               	movwf	??___lwdiv
  6657  047C  0874               	movf	??___lwdiv,w
  6658  047D  07F7               	addwf	___lwdiv@counter,f
  6659  047E                     l2882:
  6660  047E  1FF1               	btfss	___lwdiv@divisor+1,7
  6661  047F  2C81               	goto	u1081
  6662  0480  2C82               	goto	u1080
  6663  0481                     u1081:
  6664  0481  2C75               	goto	l2878
  6665  0482                     u1080:
  6666  0482                     l2884:
  6667  0482  3001               	movlw	1
  6668  0483                     u1095:
  6669  0483  35F5               	lslf	___lwdiv@quotient,f
  6670  0484  0DF6               	rlf	___lwdiv@quotient+1,f
  6671  0485  0B89               	decfsz	9,f
  6672  0486  2C83               	goto	u1095
  6673  0487  0871               	movf	___lwdiv@divisor+1,w
  6674  0488  0273               	subwf	___lwdiv@dividend+1,w
  6675  0489  1D03               	skipz
  6676  048A  2C8D               	goto	u1105
  6677  048B  0870               	movf	___lwdiv@divisor,w
  6678  048C  0272               	subwf	___lwdiv@dividend,w
  6679  048D                     u1105:
  6680  048D  1C03               	skipc
  6681  048E  2C90               	goto	u1101
  6682  048F  2C91               	goto	u1100
  6683  0490                     u1101:
  6684  0490  2C96               	goto	l2890
  6685  0491                     u1100:
  6686  0491                     l2886:
  6687  0491  0870               	movf	___lwdiv@divisor,w
  6688  0492  02F2               	subwf	___lwdiv@dividend,f
  6689  0493  0871               	movf	___lwdiv@divisor+1,w
  6690  0494  3BF3               	subwfb	___lwdiv@dividend+1,f
  6691  0495                     l2888:
  6692  0495  1475               	bsf	___lwdiv@quotient,0
  6693  0496                     l2890:
  6694  0496  3001               	movlw	1
  6695  0497                     u1115:
  6696  0497  36F1               	lsrf	___lwdiv@divisor+1,f
  6697  0498  0CF0               	rrf	___lwdiv@divisor,f
  6698  0499  0B89               	decfsz	9,f
  6699  049A  2C97               	goto	u1115
  6700  049B                     l2892:
  6701  049B  3001               	movlw	1
  6702  049C  02F7               	subwf	___lwdiv@counter,f
  6703  049D  1D03               	btfss	3,2
  6704  049E  2CA0               	goto	u1121
  6705  049F  2CA1               	goto	u1120
  6706  04A0                     u1121:
  6707  04A0  2C82               	goto	l2884
  6708  04A1                     u1120:
  6709  04A1                     l2894:
  6710  04A1  0876               	movf	___lwdiv@quotient+1,w
  6711  04A2  00F1               	movwf	?___lwdiv+1
  6712  04A3  0875               	movf	___lwdiv@quotient,w
  6713  04A4  00F0               	movwf	?___lwdiv
  6714  04A5                     l1167:
  6715  04A5  0008               	return
  6716  04A6                     __end_of___lwdiv:
  6717                           
  6718                           	psect	text6
  6719  02A4                     __ptext6:	
  6720 ;; *************** function _lcd_str *****************
  6721 ;; Defined at:
  6722 ;;		line 85 in file "lcd_lib.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  ptr             1    wreg     PTR const unsigned char 
  6725 ;;		 -> Msg2(12), Msg1(17), 
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;  ptr             1   10[BANK0 ] PTR const unsigned char 
  6728 ;;		 -> Msg2(12), Msg1(17), 
  6729 ;; Return value:  Size  Location     Type
  6730 ;;                  1    wreg      void 
  6731 ;; Registers used:
  6732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6733 ;; Tracked objects:
  6734 ;;		On entry : 0/0
  6735 ;;		On exit  : 0/0
  6736 ;;		Unchanged: 0/0
  6737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6739 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6740 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6741 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6742 ;;Total ram usage:        2 bytes
  6743 ;; Hardware stack levels used:    1
  6744 ;; Hardware stack levels required when called:    9
  6745 ;; This function calls:
  6746 ;;		_lcd_data
  6747 ;; This function is called by:
  6748 ;;		_main
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           
  6753                           ;psect for function _lcd_str
  6754  02A4                     _lcd_str:
  6755                           
  6756                           ;incstack = 0
  6757                           ; Regs used in _lcd_str: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6758                           ;lcd_str@ptr stored from wreg
  6759  02A4  0020               	movlb	0	; select bank0
  6760  02A5  00C7               	movwf	lcd_str@ptr
  6761  02A6                     l3238:
  6762                           
  6763                           ;lcd_lib.c: 87: while (*ptr != 0)
  6764  02A6  2AB3               	goto	l3244
  6765  02A7                     l3240:
  6766                           
  6767                           ;lcd_lib.c: 88: lcd_data(*ptr++);
  6768  02A7  0847               	movf	lcd_str@ptr,w
  6769  02A8  0086               	movwf	6
  6770  02A9  0187               	clrf	7
  6771  02AA  0801               	movf	1,w
  6772  02AB  3183  23A7  3182   	fcall	_lcd_data
  6773  02AE                     l3242:
  6774  02AE  3001               	movlw	1
  6775  02AF  0020               	movlb	0	; select bank0
  6776  02B0  00C6               	movwf	??_lcd_str
  6777  02B1  0846               	movf	??_lcd_str,w
  6778  02B2  07C7               	addwf	lcd_str@ptr,f
  6779  02B3                     l3244:
  6780  02B3  0847               	movf	lcd_str@ptr,w
  6781  02B4  0086               	movwf	6
  6782  02B5  0187               	clrf	7
  6783  02B6  0801               	movf	1,w
  6784  02B7  1D03               	btfss	3,2
  6785  02B8  2ABA               	goto	u1561
  6786  02B9  2ABB               	goto	u1560
  6787  02BA                     u1561:
  6788  02BA  2AA7               	goto	l3240
  6789  02BB                     u1560:
  6790  02BB                     l783:
  6791  02BB  0008               	return
  6792  02BC                     __end_of_lcd_str:
  6793                           
  6794                           	psect	text7
  6795  03A7                     __ptext7:	
  6796 ;; *************** function _lcd_data *****************
  6797 ;; Defined at:
  6798 ;;		line 18 in file "lcd_lib.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;  data            1    wreg     unsigned char 
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;  data            1    6[BANK0 ] unsigned char 
  6803 ;;  tbuf            2    7[BANK0 ] unsigned char [2]
  6804 ;; Return value:  Size  Location     Type
  6805 ;;                  1    wreg      void 
  6806 ;; Registers used:
  6807 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6808 ;; Tracked objects:
  6809 ;;		On entry : 0/0
  6810 ;;		On exit  : 0/0
  6811 ;;		Unchanged: 0/0
  6812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6814 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6815 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6816 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6817 ;;Total ram usage:        4 bytes
  6818 ;; Hardware stack levels used:    1
  6819 ;; Hardware stack levels required when called:    8
  6820 ;; This function calls:
  6821 ;;		_I2C_Close
  6822 ;;		_I2C_MasterWrite
  6823 ;;		_I2C_Open
  6824 ;;		_I2C_SetBuffer
  6825 ;; This function is called by:
  6826 ;;		_lcd_str
  6827 ;;		_lcd_icon
  6828 ;; This function uses a non-reentrant model
  6829 ;;
  6830                           
  6831                           
  6832                           ;psect for function _lcd_data
  6833  03A7                     _lcd_data:
  6834                           
  6835                           ;incstack = 0
  6836                           ; Regs used in _lcd_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6837                           ;lcd_data@data stored from wreg
  6838  03A7  0020               	movlb	0	; select bank0
  6839  03A8  00C3               	movwf	lcd_data@data
  6840  03A9                     l2834:
  6841                           
  6842                           ;lcd_lib.c: 20: unsigned char tbuf[2];;lcd_lib.c: 21: tbuf[0] = 0x40;
  6843  03A9  3040               	movlw	64
  6844  03AA  00C2               	movwf	??_lcd_data
  6845  03AB  0842               	movf	??_lcd_data,w
  6846  03AC  00C4               	movwf	lcd_data@tbuf
  6847                           
  6848                           ;lcd_lib.c: 22: tbuf[1] = data;
  6849  03AD  0843               	movf	lcd_data@data,w
  6850  03AE  00C2               	movwf	??_lcd_data
  6851  03AF  0842               	movf	??_lcd_data,w
  6852  03B0  00C5               	movwf	lcd_data@tbuf+1
  6853  03B1                     l2836:	
  6854                           ;lcd_lib.c: 24: while (!I2C_Open(0x3E));
  6855                           
  6856  03B1  303E               	movlw	62
  6857  03B2  3184  2430  3183   	fcall	_I2C_Open
  6858  03B5  3A00               	xorlw	0
  6859  03B6  1903               	skipnz
  6860  03B7  2BB9               	goto	u981
  6861  03B8  2BBA               	goto	u980
  6862  03B9                     u981:
  6863  03B9  2BB1               	goto	l2836
  6864  03BA                     u980:
  6865  03BA                     l2838:
  6866                           
  6867                           ;lcd_lib.c: 25: I2C_SetBuffer(tbuf, 2);
  6868  03BA  3002               	movlw	2
  6869  03BB  00F0               	movwf	I2C_SetBuffer@bufferSize
  6870  03BC  3000               	movlw	0
  6871  03BD  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6872  03BE  3044               	movlw	(low (lcd_data@tbuf| 0))& (0+255)
  6873  03BF  3181  21EC  3183   	fcall	_I2C_SetBuffer
  6874  03C2                     l2840:
  6875                           
  6876                           ;lcd_lib.c: 26: I2C_MasterWrite();
  6877  03C2  3181  2152  3183   	fcall	_I2C_MasterWrite
  6878  03C5                     l2842:	
  6879                           ;lcd_lib.c: 28: while (I2C_BUSY == I2C_Close());
  6880                           
  6881  03C5  3182  22BC  3183   	fcall	_I2C_Close
  6882  03C8  3A01               	xorlw	1
  6883  03C9  1903               	skipnz
  6884  03CA  2BCC               	goto	u991
  6885  03CB  2BCD               	goto	u990
  6886  03CC                     u991:
  6887  03CC  2BC5               	goto	l2842
  6888  03CD                     u990:
  6889  03CD                     l2844:
  6890                           
  6891                           ;lcd_lib.c: 29: _delay((unsigned long)((30)*(32000000/4000000.0)));
  6892  03CD  3050               	movlw	80
  6893  03CE                     u1787:
  6894  03CE  0B89               	decfsz	9,f
  6895  03CF  2BCE               	goto	u1787
  6896  03D0                     l758:
  6897  03D0  0008               	return
  6898  03D1                     __end_of_lcd_data:
  6899                           
  6900                           	psect	text8
  6901  0521                     __ptext8:	
  6902 ;; *************** function _lcd_init *****************
  6903 ;; Defined at:
  6904 ;;		line 57 in file "lcd_lib.c"
  6905 ;; Parameters:    Size  Location     Type
  6906 ;;		None
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;		None
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  1    wreg      void 
  6911 ;; Registers used:
  6912 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/0
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6920 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6921 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6922 ;;Total ram usage:        2 bytes
  6923 ;; Hardware stack levels used:    1
  6924 ;; Hardware stack levels required when called:    9
  6925 ;; This function calls:
  6926 ;;		_lcd_cmd
  6927 ;; This function is called by:
  6928 ;;		_main
  6929 ;; This function uses a non-reentrant model
  6930 ;;
  6931                           
  6932                           
  6933                           ;psect for function _lcd_init
  6934  0521                     _lcd_init:
  6935  0521                     l2936:	
  6936                           ;incstack = 0
  6937                           ; Regs used in _lcd_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6938                           
  6939                           
  6940                           ;lcd_lib.c: 59: _delay((unsigned long)((150)*(32000000/4000.0)));
  6941  0521  3007               	movlw	7
  6942  0522  0020               	movlb	0	; select bank0
  6943  0523  00C7               	movwf	??_lcd_init+1
  6944  0524  3017               	movlw	23
  6945  0525  00C6               	movwf	??_lcd_init
  6946  0526  306A               	movlw	106
  6947  0527                     u1797:
  6948  0527  0B89               	decfsz	9,f
  6949  0528  2D27               	goto	u1797
  6950  0529  0BC6               	decfsz	??_lcd_init,f
  6951  052A  2D27               	goto	u1797
  6952  052B  0BC7               	decfsz	??_lcd_init+1,f
  6953  052C  2D27               	goto	u1797
  6954  052D  0000               	nop
  6955  052E                     l2938:
  6956                           
  6957                           ;lcd_lib.c: 60: lcd_cmd(0x38);
  6958  052E  3038               	movlw	56
  6959  052F  3184  24A6  3185   	fcall	_lcd_cmd
  6960  0532                     l2940:
  6961                           
  6962                           ;lcd_lib.c: 61: lcd_cmd(0x39);
  6963  0532  3039               	movlw	57
  6964  0533  3184  24A6  3185   	fcall	_lcd_cmd
  6965  0536                     l2942:
  6966                           
  6967                           ;lcd_lib.c: 62: lcd_cmd(0x14);
  6968  0536  3014               	movlw	20
  6969  0537  3184  24A6  3185   	fcall	_lcd_cmd
  6970  053A                     l2944:
  6971                           
  6972                           ;lcd_lib.c: 64: lcd_cmd(0x70 + (0x18 & 0x0F));
  6973  053A  3078               	movlw	120
  6974  053B  3184  24A6  3185   	fcall	_lcd_cmd
  6975  053E                     l2946:
  6976                           
  6977                           ;lcd_lib.c: 65: lcd_cmd(0x5C + (0x18 >> 4));
  6978  053E  305D               	movlw	93
  6979  053F  3184  24A6  3185   	fcall	_lcd_cmd
  6980  0542                     l2948:
  6981                           
  6982                           ;lcd_lib.c: 67: lcd_cmd(0x6B);
  6983  0542  306B               	movlw	107
  6984  0543  3184  24A6  3185   	fcall	_lcd_cmd
  6985                           
  6986                           ;lcd_lib.c: 68: _delay((unsigned long)((300)*(32000000/4000.0)));
  6987  0546  300D               	movlw	13
  6988  0547  0020               	movlb	0	; select bank0
  6989  0548  00C7               	movwf	??_lcd_init+1
  6990  0549  302D               	movlw	45
  6991  054A  00C6               	movwf	??_lcd_init
  6992  054B  30D7               	movlw	215
  6993  054C                     u1807:
  6994  054C  0B89               	decfsz	9,f
  6995  054D  2D4C               	goto	u1807
  6996  054E  0BC6               	decfsz	??_lcd_init,f
  6997  054F  2D4C               	goto	u1807
  6998  0550  0BC7               	decfsz	??_lcd_init+1,f
  6999  0551  2D4C               	goto	u1807
  7000  0552  3200               	nop2
  7001  0553                     l2950:
  7002                           
  7003                           ;lcd_lib.c: 69: lcd_cmd(0x38);
  7004  0553  3038               	movlw	56
  7005  0554  3184  24A6  3185   	fcall	_lcd_cmd
  7006  0557                     l2952:
  7007                           
  7008                           ;lcd_lib.c: 70: lcd_cmd(0x0C);
  7009  0557  300C               	movlw	12
  7010  0558  3184  24A6  3185   	fcall	_lcd_cmd
  7011  055B                     l2954:
  7012                           
  7013                           ;lcd_lib.c: 71: lcd_cmd(0x01);
  7014  055B  3001               	movlw	1
  7015  055C  3184  24A6  3185   	fcall	_lcd_cmd
  7016  055F                     l774:
  7017  055F  0008               	return
  7018  0560                     __end_of_lcd_init:
  7019                           
  7020                           	psect	text9
  7021  04A6                     __ptext9:	
  7022 ;; *************** function _lcd_cmd *****************
  7023 ;; Defined at:
  7024 ;;		line 35 in file "lcd_lib.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;  cmd             1    wreg     unsigned char 
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;  cmd             1    8[BANK0 ] unsigned char 
  7029 ;;  tbuf            2    6[BANK0 ] unsigned char [2]
  7030 ;; Return value:  Size  Location     Type
  7031 ;;                  1    wreg      void 
  7032 ;; Registers used:
  7033 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7034 ;; Tracked objects:
  7035 ;;		On entry : 0/0
  7036 ;;		On exit  : 0/0
  7037 ;;		Unchanged: 0/0
  7038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7040 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7041 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7042 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7043 ;;Total ram usage:        4 bytes
  7044 ;; Hardware stack levels used:    1
  7045 ;; Hardware stack levels required when called:    8
  7046 ;; This function calls:
  7047 ;;		_I2C_Close
  7048 ;;		_I2C_MasterWrite
  7049 ;;		_I2C_Open
  7050 ;;		_I2C_SetBuffer
  7051 ;; This function is called by:
  7052 ;;		_main
  7053 ;;		_lcd_init
  7054 ;;		_lcd_clear
  7055 ;;		_lcd_icon
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           
  7059                           
  7060                           ;psect for function _lcd_cmd
  7061  04A6                     _lcd_cmd:
  7062                           
  7063                           ;incstack = 0
  7064                           ; Regs used in _lcd_cmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7065                           ;lcd_cmd@cmd stored from wreg
  7066  04A6  0020               	movlb	0	; select bank0
  7067  04A7  00C5               	movwf	lcd_cmd@cmd
  7068  04A8                     l2814:
  7069                           
  7070                           ;lcd_lib.c: 37: unsigned char tbuf[2];;lcd_lib.c: 38: tbuf[0] = 0x00;
  7071  04A8  01C3               	clrf	lcd_cmd@tbuf
  7072  04A9                     l2816:
  7073                           
  7074                           ;lcd_lib.c: 39: tbuf[1] = cmd;
  7075  04A9  0845               	movf	lcd_cmd@cmd,w
  7076  04AA  00C2               	movwf	??_lcd_cmd
  7077  04AB  0842               	movf	??_lcd_cmd,w
  7078  04AC  00C4               	movwf	lcd_cmd@tbuf+1
  7079  04AD                     l2818:	
  7080                           ;lcd_lib.c: 41: while (!I2C_Open(0x3E));
  7081                           
  7082  04AD  303E               	movlw	62
  7083  04AE  3184  2430  3184   	fcall	_I2C_Open
  7084  04B1  3A00               	xorlw	0
  7085  04B2  1903               	skipnz
  7086  04B3  2CB5               	goto	u941
  7087  04B4  2CB6               	goto	u940
  7088  04B5                     u941:
  7089  04B5  2CAD               	goto	l2818
  7090  04B6                     u940:
  7091  04B6                     l2820:
  7092                           
  7093                           ;lcd_lib.c: 42: I2C_SetBuffer(tbuf, 2);
  7094  04B6  3002               	movlw	2
  7095  04B7  00F0               	movwf	I2C_SetBuffer@bufferSize
  7096  04B8  3000               	movlw	0
  7097  04B9  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7098  04BA  3043               	movlw	(low (lcd_cmd@tbuf| 0))& (0+255)
  7099  04BB  3181  21EC  3184   	fcall	_I2C_SetBuffer
  7100  04BE                     l2822:
  7101                           
  7102                           ;lcd_lib.c: 43: I2C_MasterWrite();
  7103  04BE  3181  2152  3184   	fcall	_I2C_MasterWrite
  7104  04C1                     l2824:	
  7105                           ;lcd_lib.c: 45: while (I2C_BUSY == I2C_Close());
  7106                           
  7107  04C1  3182  22BC  3184   	fcall	_I2C_Close
  7108  04C4  3A01               	xorlw	1
  7109  04C5  1903               	skipnz
  7110  04C6  2CC8               	goto	u951
  7111  04C7  2CC9               	goto	u950
  7112  04C8                     u951:
  7113  04C8  2CC1               	goto	l2824
  7114  04C9                     u950:
  7115  04C9                     l2826:
  7116                           
  7117                           ;lcd_lib.c: 48: if ((cmd == 0x01) || (cmd == 0x02))
  7118  04C9  0020               	movlb	0	; select bank0
  7119  04CA  0345               	decf	lcd_cmd@cmd,w
  7120  04CB  1903               	btfsc	3,2
  7121  04CC  2CCE               	goto	u961
  7122  04CD  2CCF               	goto	u960
  7123  04CE                     u961:
  7124  04CE  2CD5               	goto	l2830
  7125  04CF                     u960:
  7126  04CF                     l2828:
  7127  04CF  3002               	movlw	2
  7128  04D0  0645               	xorwf	lcd_cmd@cmd,w
  7129  04D1  1D03               	btfss	3,2
  7130  04D2  2CD4               	goto	u971
  7131  04D3  2CD5               	goto	u970
  7132  04D4                     u971:
  7133  04D4  2CDF               	goto	l2832
  7134  04D5                     u970:
  7135  04D5                     l2830:
  7136                           
  7137                           ;lcd_lib.c: 49: _delay((unsigned long)((2)*(32000000/4000.0)));
  7138  04D5  3015               	movlw	21
  7139  04D6  0020               	movlb	0	; select bank0
  7140  04D7  00C2               	movwf	??_lcd_cmd
  7141  04D8  30C6               	movlw	198
  7142  04D9                     u1817:
  7143  04D9  0B89               	decfsz	9,f
  7144  04DA  2CD9               	goto	u1817
  7145  04DB  0BC2               	decfsz	??_lcd_cmd,f
  7146  04DC  2CD9               	goto	u1817
  7147  04DD  0000               	nop
  7148  04DE  2CE2               	goto	l771
  7149  04DF                     l2832:
  7150                           
  7151                           ;lcd_lib.c: 50: else;lcd_lib.c: 51: _delay((unsigned long)((30)*(32000000/4000000.0)));
  7152  04DF  3050               	movlw	80
  7153  04E0                     u1827:
  7154  04E0  0B89               	decfsz	9,f
  7155  04E1  2CE0               	goto	u1827
  7156  04E2                     l771:
  7157  04E2  0008               	return
  7158  04E3                     __end_of_lcd_cmd:
  7159                           
  7160                           	psect	text10
  7161  0430                     __ptext10:	
  7162 ;; *************** function _I2C_Open *****************
  7163 ;; Defined at:
  7164 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;  address         1    wreg     unsigned char 
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;  address         1    1[COMMON] unsigned char 
  7169 ;;  returnValue     1    2[COMMON] enum E92
  7170 ;; Return value:  Size  Location     Type
  7171 ;;                  1    wreg      enum E92
  7172 ;; Registers used:
  7173 ;;		wreg, status,2, status,0, pclath, cstack
  7174 ;; Tracked objects:
  7175 ;;		On entry : 0/0
  7176 ;;		On exit  : 0/0
  7177 ;;		Unchanged: 0/0
  7178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7180 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7181 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7182 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7183 ;;Total ram usage:        3 bytes
  7184 ;; Hardware stack levels used:    1
  7185 ;; Hardware stack levels required when called:    1
  7186 ;; This function calls:
  7187 ;;		_I2C_MasterClearIrq
  7188 ;;		_I2C_MasterOpen
  7189 ;; This function is called by:
  7190 ;;		_lcd_data
  7191 ;;		_lcd_cmd
  7192 ;;		_I2C_Read1ByteRegister
  7193 ;;		_I2C_Read2ByteRegister
  7194 ;;		_I2C_Write1ByteRegister
  7195 ;;		_I2C_Write2ByteRegister
  7196 ;;		_I2C_WriteNBytes
  7197 ;;		_I2C_ReadNBytes
  7198 ;;		_I2C_ReadDataBlock
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201                           
  7202                           
  7203                           ;psect for function _I2C_Open
  7204  0430                     _I2C_Open:
  7205                           
  7206                           ;incstack = 0
  7207                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  7208                           ;I2C_Open@address stored from wreg
  7209  0430  00F1               	movwf	I2C_Open@address
  7210  0431                     l2670:
  7211                           
  7212                           ;i2c_master.c: 178: i2c_error_t returnValue = I2C_BUSY;
  7213  0431  01F2               	clrf	I2C_Open@returnValue
  7214  0432  0AF2               	incf	I2C_Open@returnValue,f
  7215                           
  7216                           ;i2c_master.c: 180: if(!I2C_Status.inUse)
  7217  0433  0020               	movlb	0	; select bank0
  7218  0434  193C               	btfsc	_I2C_Status+28,2
  7219  0435  2C37               	goto	u911
  7220  0436  2C38               	goto	u910
  7221  0437                     u911:
  7222  0437  2C68               	goto	l457
  7223  0438                     u910:
  7224  0438                     l2672:
  7225                           
  7226                           ;i2c_master.c: 181: {;i2c_master.c: 182: I2C_Status.address = address;
  7227  0438  0871               	movf	I2C_Open@address,w
  7228  0439  00F0               	movwf	??_I2C_Open
  7229  043A  0870               	movf	??_I2C_Open,w
  7230  043B  00B6               	movwf	_I2C_Status+22
  7231  043C                     l2674:
  7232                           
  7233                           ;i2c_master.c: 183: I2C_Status.busy = 0;
  7234  043C  10BC               	bcf	_I2C_Status+28,1
  7235  043D                     l2676:
  7236                           
  7237                           ;i2c_master.c: 184: I2C_Status.inUse = 1;
  7238  043D  153C               	bsf	_I2C_Status+28,2
  7239  043E                     l2678:
  7240                           
  7241                           ;i2c_master.c: 185: I2C_Status.addressNackCheck = 0;
  7242  043E  103C               	bcf	_I2C_Status+28,0
  7243                           
  7244                           ;i2c_master.c: 186: I2C_Status.state = I2C_RESET;
  7245  043F  300E               	movlw	14
  7246  0440  00F0               	movwf	??_I2C_Open
  7247  0441  0870               	movf	??_I2C_Open,w
  7248  0442  00BA               	movwf	_I2C_Status+26
  7249                           
  7250                           ;i2c_master.c: 187: I2C_Status.time_out_value = 500;
  7251  0443  30F4               	movlw	244
  7252  0444  00B4               	movwf	_I2C_Status+20
  7253  0445  3001               	movlw	1
  7254  0446  00B5               	movwf	_I2C_Status+21
  7255  0447                     l2680:
  7256                           
  7257                           ;i2c_master.c: 188: I2C_Status.bufferFree = 1;
  7258  0447  15BC               	bsf	_I2C_Status+28,3
  7259                           
  7260                           ;i2c_master.c: 191: I2C_Status.callbackTable[I2C_DATA_COMPLETE]=I2C_CallbackReturnStop;
  7261  0448  30F5               	movlw	low _I2C_CallbackReturnStop
  7262  0449  00A0               	movwf	_I2C_Status
  7263  044A  3000               	movlw	high _I2C_CallbackReturnStop
  7264  044B  00A1               	movwf	_I2C_Status+1
  7265  044C                     l2682:
  7266                           
  7267                           ;i2c_master.c: 192: I2C_Status.callbackPayload[I2C_DATA_COMPLETE] = (0);
  7268  044C  01AC               	clrf	low ((_I2C_Status| 0+12))
  7269  044D                     l2684:
  7270                           
  7271                           ;i2c_master.c: 193: I2C_Status.callbackTable[I2C_WRITE_COLLISION]=I2C_CallbackReturnStop
      +                          ;
  7272  044D  30F5               	movlw	low _I2C_CallbackReturnStop
  7273  044E  00A2               	movwf	low ((_I2C_Status| 0+2))
  7274  044F  3000               	movlw	high _I2C_CallbackReturnStop
  7275  0450  00A3               	movwf	(low ((_I2C_Status| 0+2))+1)
  7276                           
  7277                           ;i2c_master.c: 194: I2C_Status.callbackPayload[I2C_WRITE_COLLISION] = (0);
  7278  0451  01AD               	clrf	low ((_I2C_Status| 0+13))
  7279  0452                     l2686:
  7280                           
  7281                           ;i2c_master.c: 195: I2C_Status.callbackTable[I2C_ADDR_NACK]=I2C_CallbackReturnStop;
  7282  0452  30F5               	movlw	low _I2C_CallbackReturnStop
  7283  0453  00A4               	movwf	low ((_I2C_Status| 0+4))
  7284  0454  3000               	movlw	high _I2C_CallbackReturnStop
  7285  0455  00A5               	movwf	(low ((_I2C_Status| 0+4))+1)
  7286  0456                     l2688:
  7287                           
  7288                           ;i2c_master.c: 196: I2C_Status.callbackPayload[I2C_ADDR_NACK] = (0);
  7289  0456  01AE               	clrf	low ((_I2C_Status| 0+14))
  7290                           
  7291                           ;i2c_master.c: 197: I2C_Status.callbackTable[I2C_DATA_NACK]=I2C_CallbackReturnStop;
  7292  0457  30F5               	movlw	low _I2C_CallbackReturnStop
  7293  0458  00A6               	movwf	low ((_I2C_Status| 0+6))
  7294  0459  3000               	movlw	high _I2C_CallbackReturnStop
  7295  045A  00A7               	movwf	(low ((_I2C_Status| 0+6))+1)
  7296  045B                     l2690:
  7297                           
  7298                           ;i2c_master.c: 198: I2C_Status.callbackPayload[I2C_DATA_NACK] = (0);
  7299  045B  01AF               	clrf	low ((_I2C_Status| 0+15))
  7300  045C                     l2692:
  7301                           
  7302                           ;i2c_master.c: 199: I2C_Status.callbackTable[I2C_TIMEOUT]=I2C_CallbackReturnReset;
  7303  045C  30F7               	movlw	low _I2C_CallbackReturnReset
  7304  045D  00A8               	movwf	low ((_I2C_Status| 0+8))
  7305  045E  3000               	movlw	high _I2C_CallbackReturnReset
  7306  045F  00A9               	movwf	(low ((_I2C_Status| 0+8))+1)
  7307                           
  7308                           ;i2c_master.c: 200: I2C_Status.callbackPayload[I2C_TIMEOUT] = (0);
  7309  0460  01B0               	clrf	low ((_I2C_Status| 0+16))
  7310  0461                     l2694:
  7311                           
  7312                           ;i2c_master.c: 202: I2C_MasterClearIrq();
  7313  0461  3180  20F9  3184   	fcall	_I2C_MasterClearIrq
  7314  0464                     l2696:
  7315                           
  7316                           ;i2c_master.c: 203: I2C_MasterOpen();
  7317  0464  3181  21CF  3184   	fcall	_I2C_MasterOpen
  7318  0467                     l2698:
  7319                           
  7320                           ;i2c_master.c: 204: returnValue = I2C_NOERR;
  7321  0467  01F2               	clrf	I2C_Open@returnValue
  7322  0468                     l457:
  7323                           
  7324                           ;i2c_master.c: 205: };i2c_master.c: 206: return returnValue;
  7325  0468  0872               	movf	I2C_Open@returnValue,w
  7326  0469                     l458:
  7327  0469  0008               	return
  7328  046A                     __end_of_I2C_Open:
  7329                           
  7330                           	psect	text11
  7331  01CF                     __ptext11:	
  7332 ;; *************** function _I2C_MasterOpen *****************
  7333 ;; Defined at:
  7334 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;		None
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;		None
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  1    wreg      unsigned char 
  7341 ;; Registers used:
  7342 ;;		wreg, status,2
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7352 ;;Total ram usage:        0 bytes
  7353 ;; Hardware stack levels used:    1
  7354 ;; This function calls:
  7355 ;;		Nothing
  7356 ;; This function is called by:
  7357 ;;		_I2C_Open
  7358 ;; This function uses a non-reentrant model
  7359 ;;
  7360                           
  7361                           
  7362                           ;psect for function _I2C_MasterOpen
  7363  01CF                     _I2C_MasterOpen:
  7364  01CF                     l2634:	
  7365                           ;incstack = 0
  7366                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
  7367                           
  7368                           
  7369                           ;i2c_master.c: 545: if(!SSP1CON1bits.SSPEN)
  7370  01CF  0024               	movlb	4	; select bank4
  7371  01D0  1A95               	btfsc	21,5	;volatile
  7372  01D1  29D3               	goto	u881
  7373  01D2  29D4               	goto	u880
  7374  01D3                     u881:
  7375  01D3  29DC               	goto	l623
  7376  01D4                     u880:
  7377  01D4                     l2636:
  7378                           
  7379                           ;i2c_master.c: 546: {;i2c_master.c: 547: SSP1STAT = 0x80;
  7380  01D4  3080               	movlw	128
  7381  01D5  0094               	movwf	20	;volatile
  7382                           
  7383                           ;i2c_master.c: 548: SSP1CON1 = 0x08;
  7384  01D6  3008               	movlw	8
  7385  01D7  0095               	movwf	21	;volatile
  7386  01D8                     l2638:
  7387                           
  7388                           ;i2c_master.c: 549: SSP1CON2 = 0x00;
  7389  01D8  0196               	clrf	22	;volatile
  7390  01D9                     l2640:
  7391                           
  7392                           ;i2c_master.c: 550: SSP1ADD = 0x4F;
  7393  01D9  304F               	movlw	79
  7394  01DA  0092               	movwf	18	;volatile
  7395  01DB                     l2642:
  7396                           
  7397                           ;i2c_master.c: 551: SSP1CON1bits.SSPEN = 1;
  7398  01DB  1695               	bsf	21,5	;volatile
  7399  01DC                     l623:
  7400  01DC  0008               	return
  7401  01DD                     __end_of_I2C_MasterOpen:
  7402                           
  7403                           	psect	text12
  7404  0152                     __ptext12:	
  7405 ;; *************** function _I2C_MasterWrite *****************
  7406 ;; Defined at:
  7407 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;		None
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;		None
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  1    wreg      enum E92
  7414 ;; Registers used:
  7415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/0
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7425 ;;Total ram usage:        0 bytes
  7426 ;; Hardware stack levels used:    1
  7427 ;; Hardware stack levels required when called:    7
  7428 ;; This function calls:
  7429 ;;		_I2C_MasterOperation
  7430 ;; This function is called by:
  7431 ;;		_lcd_data
  7432 ;;		_lcd_cmd
  7433 ;;		_I2C_Read1ByteRegister
  7434 ;;		_I2C_Read2ByteRegister
  7435 ;;		_I2C_Write1ByteRegister
  7436 ;;		_I2C_Write2ByteRegister
  7437 ;;		_I2C_WriteNBytes
  7438 ;;		_I2C_ReadDataBlock
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           
  7443                           ;psect for function _I2C_MasterWrite
  7444  0152                     _I2C_MasterWrite:
  7445  0152                     l2702:	
  7446                           ;incstack = 0
  7447                           ; Regs used in _I2C_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7448                           
  7449                           
  7450                           ;i2c_master.c: 253: return I2C_MasterOperation(0);;	Return value of _I2C_MasterWrite is 
      +                          never used
  7451  0152  3000               	movlw	0
  7452  0153  3182  22D8  3181   	fcall	_I2C_MasterOperation
  7453  0156                     l474:
  7454  0156  0008               	return
  7455  0157                     __end_of_I2C_MasterWrite:
  7456                           
  7457                           	psect	text13
  7458  02D8                     __ptext13:	
  7459 ;; *************** function _I2C_MasterOperation *****************
  7460 ;; Defined at:
  7461 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;  read            1    wreg     unsigned char 
  7464 ;; Auto vars:     Size  Location     Type
  7465 ;;  read            1    3[BANK0 ] unsigned char 
  7466 ;;  returnValue     1    4[BANK0 ] enum E92
  7467 ;; Return value:  Size  Location     Type
  7468 ;;                  1    wreg      enum E92
  7469 ;; Registers used:
  7470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 0/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7477 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7478 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7479 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7480 ;;Total ram usage:        3 bytes
  7481 ;; Hardware stack levels used:    1
  7482 ;; Hardware stack levels required when called:    6
  7483 ;; This function calls:
  7484 ;;		_I2C_MasterStart
  7485 ;;		_I2C_Poller
  7486 ;; This function is called by:
  7487 ;;		_I2C_MasterWrite
  7488 ;;		_I2C_MasterRead
  7489 ;; This function uses a non-reentrant model
  7490 ;;
  7491                           
  7492                           
  7493                           ;psect for function _I2C_MasterOperation
  7494  02D8                     _I2C_MasterOperation:
  7495                           
  7496                           ;incstack = 0
  7497                           ; Regs used in _I2C_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7498                           ;I2C_MasterOperation@read stored from wreg
  7499  02D8  0020               	movlb	0	; select bank0
  7500  02D9  00C0               	movwf	I2C_MasterOperation@read
  7501  02DA                     l2650:
  7502                           
  7503                           ;i2c_master.c: 226: i2c_error_t returnValue = I2C_BUSY;
  7504  02DA  01C1               	clrf	I2C_MasterOperation@returnValue
  7505  02DB  0AC1               	incf	I2C_MasterOperation@returnValue,f
  7506                           
  7507                           ;i2c_master.c: 227: if(!I2C_Status.busy)
  7508  02DC  18BC               	btfsc	_I2C_Status+28,1
  7509  02DD  2ADF               	goto	u891
  7510  02DE  2AE0               	goto	u890
  7511  02DF                     u891:
  7512  02DF  2AF4               	goto	l2666
  7513  02E0                     u890:
  7514  02E0                     l2652:
  7515                           
  7516                           ;i2c_master.c: 228: {;i2c_master.c: 229: I2C_Status.busy = 1;
  7517  02E0  14BC               	bsf	_I2C_Status+28,1
  7518  02E1                     l2654:
  7519                           
  7520                           ;i2c_master.c: 230: returnValue = I2C_NOERR;
  7521  02E1  01C1               	clrf	I2C_MasterOperation@returnValue
  7522  02E2                     l2656:
  7523                           
  7524                           ;i2c_master.c: 232: if(read)
  7525  02E2  0840               	movf	I2C_MasterOperation@read,w
  7526  02E3  1903               	btfsc	3,2
  7527  02E4  2AE6               	goto	u901
  7528  02E5  2AE7               	goto	u900
  7529  02E6                     u901:
  7530  02E6  2AEA               	goto	l2660
  7531  02E7                     u900:
  7532  02E7                     l2658:
  7533                           
  7534                           ;i2c_master.c: 233: {;i2c_master.c: 234: I2C_Status.state = I2C_SEND_ADR_READ;
  7535  02E7  01BA               	clrf	_I2C_Status+26
  7536  02E8  0ABA               	incf	_I2C_Status+26,f
  7537                           
  7538                           ;i2c_master.c: 235: }
  7539  02E9  2AEE               	goto	l2662
  7540  02EA                     l2660:
  7541                           
  7542                           ;i2c_master.c: 236: else;i2c_master.c: 237: {;i2c_master.c: 238: I2C_Status.state = I2C_
      +                          SEND_ADR_WRITE;
  7543  02EA  3002               	movlw	2
  7544  02EB  00FD               	movwf	??_I2C_MasterOperation
  7545  02EC  087D               	movf	??_I2C_MasterOperation,w
  7546  02ED  00BA               	movwf	_I2C_Status+26
  7547  02EE                     l2662:
  7548                           
  7549                           ;i2c_master.c: 239: };i2c_master.c: 240: I2C_MasterStart();
  7550  02EE  3181  2102  3182   	fcall	_I2C_MasterStart
  7551  02F1                     l2664:
  7552                           
  7553                           ;i2c_master.c: 241: I2C_Poller();
  7554  02F1  3181  21B4  3182   	fcall	_I2C_Poller
  7555  02F4                     l2666:
  7556                           
  7557                           ;i2c_master.c: 242: };i2c_master.c: 243: return returnValue;
  7558  02F4  0020               	movlb	0	; select bank0
  7559  02F5  0841               	movf	I2C_MasterOperation@returnValue,w
  7560  02F6                     l468:
  7561  02F6  0008               	return
  7562  02F7                     __end_of_I2C_MasterOperation:
  7563                           
  7564                           	psect	text14
  7565  01B4                     __ptext14:	
  7566 ;; *************** function _I2C_Poller *****************
  7567 ;; Defined at:
  7568 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;		None
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;		None
  7573 ;; Return value:  Size  Location     Type
  7574 ;;                  1    wreg      void 
  7575 ;; Registers used:
  7576 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7577 ;; Tracked objects:
  7578 ;;		On entry : 0/0
  7579 ;;		On exit  : 0/0
  7580 ;;		Unchanged: 0/0
  7581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7586 ;;Total ram usage:        0 bytes
  7587 ;; Hardware stack levels used:    1
  7588 ;; Hardware stack levels required when called:    5
  7589 ;; This function calls:
  7590 ;;		_I2C_MasterFsm
  7591 ;;		_I2C_MasterWaitForEvent
  7592 ;; This function is called by:
  7593 ;;		_I2C_MasterOperation
  7594 ;; This function uses a non-reentrant model
  7595 ;;
  7596                           
  7597                           
  7598                           ;psect for function _I2C_Poller
  7599  01B4                     _I2C_Poller:
  7600  01B4                     l2626:	
  7601                           ;incstack = 0
  7602                           ; Regs used in _I2C_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7603                           
  7604                           
  7605                           ;i2c_master.c: 314: while(I2C_Status.busy)
  7606  01B4  29BB               	goto	l2632
  7607  01B5                     l2628:
  7608                           
  7609                           ;i2c_master.c: 315: {;i2c_master.c: 316: I2C_MasterWaitForEvent();
  7610  01B5  3181  215D  3181   	fcall	_I2C_MasterWaitForEvent
  7611  01B8                     l2630:
  7612                           
  7613                           ;i2c_master.c: 317: I2C_MasterFsm();
  7614  01B8  3183  23D1  3181   	fcall	_I2C_MasterFsm
  7615  01BB                     l2632:
  7616  01BB  0020               	movlb	0	; select bank0
  7617  01BC  18BC               	btfsc	_I2C_Status+28,1
  7618  01BD  29BF               	goto	u871
  7619  01BE  29C0               	goto	u870
  7620  01BF                     u871:
  7621  01BF  29B5               	goto	l2628
  7622  01C0                     u870:
  7623  01C0                     l507:
  7624  01C0  0008               	return
  7625  01C1                     __end_of_I2C_Poller:
  7626                           
  7627                           	psect	text15
  7628  015D                     __ptext15:	
  7629 ;; *************** function _I2C_MasterWaitForEvent *****************
  7630 ;; Defined at:
  7631 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;		None
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;		None
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1    wreg      void 
  7638 ;; Registers used:
  7639 ;;		None
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/0
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7649 ;;Total ram usage:        0 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; This function calls:
  7652 ;;		Nothing
  7653 ;; This function is called by:
  7654 ;;		_I2C_Poller
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           
  7659                           ;psect for function _I2C_MasterWaitForEvent
  7660  015D                     _I2C_MasterWaitForEvent:
  7661  015D                     l680:	
  7662                           ;incstack = 0
  7663                           ; Regs used in _I2C_MasterWaitForEvent: []
  7664                           ;i2c_master.c: 652: while(1)
  7665                           
  7666                           
  7667                           ;i2c_master.c: 653: {;i2c_master.c: 654: if(PIR1bits.SSP1IF)
  7668  015D  0020               	movlb	0	; select bank0
  7669  015E  1D91               	btfss	17,3	;volatile
  7670  015F  2961               	goto	u841
  7671  0160  2962               	goto	u840
  7672  0161                     u841:
  7673  0161  295D               	goto	l680
  7674  0162                     u840:
  7675  0162                     l684:
  7676  0162  0008               	return
  7677  0163                     __end_of_I2C_MasterWaitForEvent:
  7678                           
  7679                           	psect	text16
  7680  03D1                     __ptext16:	
  7681 ;; *************** function _I2C_MasterFsm *****************
  7682 ;; Defined at:
  7683 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  7684 ;; Parameters:    Size  Location     Type
  7685 ;;		None
  7686 ;; Auto vars:     Size  Location     Type
  7687 ;;		None
  7688 ;; Return value:  Size  Location     Type
  7689 ;;                  1    wreg      void 
  7690 ;; Registers used:
  7691 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7692 ;; Tracked objects:
  7693 ;;		On entry : 0/0
  7694 ;;		On exit  : 0/0
  7695 ;;		Unchanged: 0/0
  7696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7699 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7700 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7701 ;;Total ram usage:        3 bytes
  7702 ;; Hardware stack levels used:    1
  7703 ;; Hardware stack levels required when called:    4
  7704 ;; This function calls:
  7705 ;;		_I2C_DO_ADDRESS_NACK
  7706 ;;		_I2C_DO_IDLE
  7707 ;;		_I2C_DO_RCEN
  7708 ;;		_I2C_DO_RESET
  7709 ;;		_I2C_DO_RX
  7710 ;;		_I2C_DO_RX_ACK
  7711 ;;		_I2C_DO_RX_NACK_RESTART
  7712 ;;		_I2C_DO_RX_NACK_STOP
  7713 ;;		_I2C_DO_SEND_ADR_READ
  7714 ;;		_I2C_DO_SEND_ADR_WRITE
  7715 ;;		_I2C_DO_SEND_RESTART
  7716 ;;		_I2C_DO_SEND_RESTART_READ
  7717 ;;		_I2C_DO_SEND_RESTART_WRITE
  7718 ;;		_I2C_DO_SEND_STOP
  7719 ;;		_I2C_DO_TX
  7720 ;;		_I2C_DO_TX_EMPTY
  7721 ;;		_I2C_MasterClearIrq
  7722 ;;		_I2C_MasterIsNack
  7723 ;; This function is called by:
  7724 ;;		_I2C_Poller
  7725 ;; This function uses a non-reentrant model
  7726 ;;
  7727                           
  7728                           
  7729                           ;psect for function _I2C_MasterFsm
  7730  03D1                     _I2C_MasterFsm:
  7731  03D1                     l2614:	
  7732                           ;incstack = 0
  7733                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7734                           
  7735                           
  7736                           ;i2c_master.c: 323: I2C_MasterClearIrq();
  7737  03D1  3180  20F9  3183   	fcall	_I2C_MasterClearIrq
  7738  03D4                     l2616:
  7739                           
  7740                           ;i2c_master.c: 325: if(I2C_Status.addressNackCheck && I2C_MasterIsNack())
  7741  03D4  0020               	movlb	0	; select bank0
  7742  03D5  1C3C               	btfss	_I2C_Status+28,0
  7743  03D6  2BD8               	goto	u851
  7744  03D7  2BD9               	goto	u850
  7745  03D8                     u851:
  7746  03D8  2BE6               	goto	l2622
  7747  03D9                     u850:
  7748  03D9                     l2618:
  7749  03D9  3181  2157  3183   	fcall	_I2C_MasterIsNack
  7750  03DC  3A00               	xorlw	0
  7751  03DD  1903               	skipnz
  7752  03DE  2BE0               	goto	u861
  7753  03DF  2BE1               	goto	u860
  7754  03E0                     u861:
  7755  03E0  2BE6               	goto	l2622
  7756  03E1                     u860:
  7757  03E1                     l2620:
  7758                           
  7759                           ;i2c_master.c: 326: {;i2c_master.c: 327: I2C_Status.state = I2C_ADDRESS_NACK;
  7760  03E1  300F               	movlw	15
  7761  03E2  0020               	movlb	0	; select bank0
  7762  03E3  00BD               	movwf	??_I2C_MasterFsm
  7763  03E4  083D               	movf	??_I2C_MasterFsm,w
  7764  03E5  00BA               	movwf	_I2C_Status+26
  7765  03E6                     l2622:
  7766                           
  7767                           ;i2c_master.c: 328: };i2c_master.c: 329: I2C_Status.state = i2c_fsmStateTable[I2C_Status
      +                          .state]();
  7768  03E6  0020               	movlb	0	; select bank0
  7769  03E7  083A               	movf	_I2C_Status+26,w
  7770  03E8  00BD               	movwf	??_I2C_MasterFsm
  7771  03E9  01BE               	clrf	??_I2C_MasterFsm+1
  7772  03EA  35BD               	lslf	??_I2C_MasterFsm,f
  7773  03EB  0DBE               	rlf	??_I2C_MasterFsm+1,f
  7774  03EC  3038               	movlw	low (_i2c_fsmStateTable| (0+32768))
  7775  03ED  073D               	addwf	??_I2C_MasterFsm,w
  7776  03EE  0084               	movwf	4
  7777  03EF  3088               	movlw	high (_i2c_fsmStateTable| (0+32768))
  7778  03F0  3D3E               	addwfc	??_I2C_MasterFsm+1,w
  7779  03F1  0085               	movwf	5
  7780  03F2  3F01               	moviw [1]fsr0
  7781  03F3  008A               	movwf	10
  7782  03F4  3F00               	moviw [0]fsr0
  7783  03F5  000A               	callw
  7784  03F6  3183               	pagesel	$
  7785  03F7  0020               	movlb	0	; select bank0
  7786  03F8  00BF               	movwf	??_I2C_MasterFsm+2
  7787  03F9  083F               	movf	??_I2C_MasterFsm+2,w
  7788  03FA  00BA               	movwf	_I2C_Status+26
  7789  03FB                     l511:
  7790  03FB  0008               	return
  7791  03FC                     __end_of_I2C_MasterFsm:
  7792                           
  7793                           	psect	text17
  7794  0336                     __ptext17:	
  7795 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  7796 ;; Defined at:
  7797 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  7798 ;; Parameters:    Size  Location     Type
  7799 ;;		None
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;		None
  7802 ;; Return value:  Size  Location     Type
  7803 ;;                  1    wreg      enum E11990
  7804 ;; Registers used:
  7805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7806 ;; Tracked objects:
  7807 ;;		On entry : 0/0
  7808 ;;		On exit  : 0/0
  7809 ;;		Unchanged: 0/0
  7810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7813 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7814 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7815 ;;Total ram usage:        1 bytes
  7816 ;; Hardware stack levels used:    1
  7817 ;; Hardware stack levels required when called:    3
  7818 ;; This function calls:
  7819 ;;		Absolute function
  7820 ;;		_I2C_CallbackReturnReset
  7821 ;;		_I2C_CallbackReturnStop
  7822 ;;		_I2C_DO_SEND_RESTART
  7823 ;;		_I2C_DO_SEND_STOP
  7824 ;;		_rd1RegCompleteHandler
  7825 ;;		_rd2RegCompleteHandler
  7826 ;;		_rdBlkRegCompleteHandler
  7827 ;;		_wr1RegCompleteHandler
  7828 ;;		_wr2RegCompleteHandler
  7829 ;; This function is called by:
  7830 ;;		_I2C_MasterFsm
  7831 ;; This function uses a non-reentrant model
  7832 ;;
  7833                           
  7834                           
  7835                           ;psect for function _I2C_DO_ADDRESS_NACK
  7836  0336                     _I2C_DO_ADDRESS_NACK:
  7837  0336                     l2596:	
  7838                           ;incstack = 0
  7839                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7840                           
  7841                           
  7842                           ;i2c_master.c: 502: I2C_Status.addressNackCheck = 0;
  7843  0336  0020               	movlb	0	; select bank0
  7844  0337  103C               	bcf	_I2C_Status+28,0
  7845  0338                     l2598:
  7846                           
  7847                           ;i2c_master.c: 503: I2C_Status.error = I2C_FAIL;
  7848  0338  3002               	movlw	2
  7849  0339  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  7850  033A  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  7851  033B  00BB               	movwf	_I2C_Status+27
  7852                           
  7853                           ;i2c_master.c: 504: switch(I2C_Status.callbackTable[I2C_ADDR_NACK](I2C_Status.callbackPa
      +                          yload[I2C_ADDR_NACK]))
  7854  033C  2B45               	goto	l2610
  7855  033D                     l2600:
  7856                           
  7857                           ;i2c_master.c: 507: case I2C_RESTART_WRITE:;i2c_master.c: 508: return I2C_DO_SEND_RESTAR
      +                          T();
  7858  033D  3181  2134  3183   	fcall	_I2C_DO_SEND_RESTART
  7859  0340  2B59               	goto	l602
  7860  0341                     l2604:
  7861                           
  7862                           ;i2c_master.c: 510: return I2C_DO_SEND_STOP();
  7863  0341  3181  2139  3183   	fcall	_I2C_DO_SEND_STOP
  7864  0344  2B59               	goto	l602
  7865  0345                     l2610:
  7866  0345  082E               	movf	low ((_I2C_Status| 0+14)),w
  7867  0346  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  7868  0347  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  7869  0348  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  7870  0349  3004               	movlw	4
  7871  034A  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  7872  034B  0086               	movwf	6
  7873  034C  0187               	clrf	7
  7874  034D  3F41               	moviw [1]fsr1
  7875  034E  008A               	movwf	10
  7876  034F  3F40               	moviw [0]fsr1
  7877  0350  000A               	callw
  7878  0351  3183               	pagesel	$
  7879                           
  7880                           ; Switch size 1, requested type "simple"
  7881                           ; Number of cases is 2, Range of values is 2 to 3
  7882                           ; switch strategies available:
  7883                           ; Name         Instructions Cycles
  7884                           ; simple_byte            7     4 (average)
  7885                           ; direct_byte           13     9 (fixed)
  7886                           ; jumptable            263     9 (fixed)
  7887                           ;	Chosen strategy is simple_byte
  7888  0352  3A02               	xorlw	2	; case 2
  7889  0353  1903               	skipnz
  7890  0354  2B3D               	goto	l2600
  7891  0355  3A01               	xorlw	1	; case 3
  7892  0356  1903               	skipnz
  7893  0357  2B3D               	goto	l2600
  7894  0358  2B41               	goto	l2604
  7895  0359                     l602:
  7896  0359  0008               	return
  7897  035A                     __end_of_I2C_DO_ADDRESS_NACK:
  7898                           
  7899                           	psect	text18
  7900  014D                     __ptext18:	
  7901 ;; *************** function _I2C_DO_RESET *****************
  7902 ;; Defined at:
  7903 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;		None
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;		None
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  1    wreg      enum E11990
  7910 ;; Registers used:
  7911 ;;		wreg, status,2
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7921 ;;Total ram usage:        0 bytes
  7922 ;; Hardware stack levels used:    1
  7923 ;; This function calls:
  7924 ;;		Nothing
  7925 ;; This function is called by:
  7926 ;;		_I2C_MasterFsm
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           
  7930                           
  7931                           ;psect for function _I2C_DO_RESET
  7932  014D                     _I2C_DO_RESET:
  7933  014D                     l2588:	
  7934                           ;incstack = 0
  7935                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  7936                           
  7937                           
  7938                           ;i2c_master.c: 496: I2C_Status.busy = 0;
  7939  014D  0020               	movlb	0	; select bank0
  7940  014E  10BC               	bcf	_I2C_Status+28,1
  7941  014F                     l2590:
  7942                           
  7943                           ;i2c_master.c: 497: I2C_Status.error = I2C_NOERR;
  7944  014F  01BB               	clrf	_I2C_Status+27
  7945  0150                     l2592:
  7946                           
  7947                           ;i2c_master.c: 498: return I2C_RESET;
  7948  0150  300E               	movlw	14
  7949  0151                     l596:
  7950  0151  0008               	return
  7951  0152                     __end_of_I2C_DO_RESET:
  7952                           
  7953                           	psect	text19
  7954  0148                     __ptext19:	
  7955 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  7956 ;; Defined at:
  7957 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  7958 ;; Parameters:    Size  Location     Type
  7959 ;;		None
  7960 ;; Auto vars:     Size  Location     Type
  7961 ;;		None
  7962 ;; Return value:  Size  Location     Type
  7963 ;;                  1    wreg      enum E11990
  7964 ;; Registers used:
  7965 ;;		wreg, status,2, status,0, pclath, cstack
  7966 ;; Tracked objects:
  7967 ;;		On entry : 0/0
  7968 ;;		On exit  : 0/0
  7969 ;;		Unchanged: 0/0
  7970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7975 ;;Total ram usage:        0 bytes
  7976 ;; Hardware stack levels used:    1
  7977 ;; Hardware stack levels required when called:    1
  7978 ;; This function calls:
  7979 ;;		_I2C_MasterSendNack
  7980 ;; This function is called by:
  7981 ;;		_I2C_DO_RX
  7982 ;;		_I2C_MasterFsm
  7983 ;; This function uses a non-reentrant model
  7984 ;;
  7985                           
  7986                           
  7987                           ;psect for function _I2C_DO_RX_NACK_RESTART
  7988  0148                     _I2C_DO_RX_NACK_RESTART:
  7989  0148                     l2442:	
  7990                           ;incstack = 0
  7991                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  7992                           
  7993                           
  7994                           ;i2c_master.c: 490: I2C_MasterSendNack();
  7995  0148  3181  2118  3181   	fcall	_I2C_MasterSendNack
  7996  014B                     l2444:
  7997                           
  7998                           ;i2c_master.c: 491: return I2C_SEND_RESTART;
  7999  014B  3009               	movlw	9
  8000  014C                     l593:
  8001  014C  0008               	return
  8002  014D                     __end_of_I2C_DO_RX_NACK_RESTART:
  8003                           
  8004                           	psect	text20
  8005  0143                     __ptext20:	
  8006 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  8007 ;; Defined at:
  8008 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;		None
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;		None
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  1    wreg      enum E11990
  8015 ;; Registers used:
  8016 ;;		wreg, status,2, status,0, pclath, cstack
  8017 ;; Tracked objects:
  8018 ;;		On entry : 0/0
  8019 ;;		On exit  : 0/0
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8026 ;;Total ram usage:        0 bytes
  8027 ;; Hardware stack levels used:    1
  8028 ;; Hardware stack levels required when called:    1
  8029 ;; This function calls:
  8030 ;;		_I2C_MasterSendNack
  8031 ;; This function is called by:
  8032 ;;		_I2C_DO_RX
  8033 ;;		_I2C_MasterFsm
  8034 ;; This function uses a non-reentrant model
  8035 ;;
  8036                           
  8037                           
  8038                           ;psect for function _I2C_DO_RX_NACK_STOP
  8039  0143                     _I2C_DO_RX_NACK_STOP:
  8040  0143                     l2448:	
  8041                           ;incstack = 0
  8042                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  8043                           
  8044                           
  8045                           ;i2c_master.c: 484: I2C_MasterSendNack();
  8046  0143  3181  2118  3181   	fcall	_I2C_MasterSendNack
  8047  0146                     l2450:
  8048                           
  8049                           ;i2c_master.c: 485: return I2C_SEND_STOP;
  8050  0146  300A               	movlw	10
  8051  0147                     l590:
  8052  0147  0008               	return
  8053  0148                     __end_of_I2C_DO_RX_NACK_STOP:
  8054                           
  8055                           	psect	text21
  8056  013E                     __ptext21:	
  8057 ;; *************** function _I2C_DO_RX_ACK *****************
  8058 ;; Defined at:
  8059 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;		None
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;		None
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  1    wreg      enum E11990
  8066 ;; Registers used:
  8067 ;;		wreg, status,2, status,0, pclath, cstack
  8068 ;; Tracked objects:
  8069 ;;		On entry : 0/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8077 ;;Total ram usage:        0 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; Hardware stack levels required when called:    1
  8080 ;; This function calls:
  8081 ;;		_I2C_MasterSendAck
  8082 ;; This function is called by:
  8083 ;;		_I2C_MasterFsm
  8084 ;; This function uses a non-reentrant model
  8085 ;;
  8086                           
  8087                           
  8088                           ;psect for function _I2C_DO_RX_ACK
  8089  013E                     _I2C_DO_RX_ACK:
  8090  013E                     l2582:	
  8091                           ;incstack = 0
  8092                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  8093                           
  8094                           
  8095                           ;i2c_master.c: 477: I2C_MasterSendAck();
  8096  013E  3181  211C  3181   	fcall	_I2C_MasterSendAck
  8097  0141                     l2584:
  8098                           
  8099                           ;i2c_master.c: 478: return I2C_RCEN;
  8100  0141  3005               	movlw	5
  8101  0142                     l587:
  8102  0142  0008               	return
  8103  0143                     __end_of_I2C_DO_RX_ACK:
  8104                           
  8105                           	psect	text22
  8106  0139                     __ptext22:	
  8107 ;; *************** function _I2C_DO_SEND_STOP *****************
  8108 ;; Defined at:
  8109 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  8110 ;; Parameters:    Size  Location     Type
  8111 ;;		None
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;		None
  8114 ;; Return value:  Size  Location     Type
  8115 ;;                  1    wreg      enum E11990
  8116 ;; Registers used:
  8117 ;;		wreg, status,2, status,0, pclath, cstack
  8118 ;; Tracked objects:
  8119 ;;		On entry : 0/0
  8120 ;;		On exit  : 0/0
  8121 ;;		Unchanged: 0/0
  8122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8127 ;;Total ram usage:        0 bytes
  8128 ;; Hardware stack levels used:    1
  8129 ;; Hardware stack levels required when called:    1
  8130 ;; This function calls:
  8131 ;;		_I2C_MasterStop
  8132 ;; This function is called by:
  8133 ;;		_I2C_DO_TX
  8134 ;;		_I2C_DO_TX_EMPTY
  8135 ;;		_I2C_DO_ADDRESS_NACK
  8136 ;;		_I2C_MasterFsm
  8137 ;; This function uses a non-reentrant model
  8138 ;;
  8139                           
  8140                           
  8141                           ;psect for function _I2C_DO_SEND_STOP
  8142  0139                     _I2C_DO_SEND_STOP:
  8143  0139                     l2430:	
  8144                           ;incstack = 0
  8145                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  8146                           
  8147                           
  8148                           ;i2c_master.c: 471: I2C_MasterStop();
  8149  0139  3181  2108  3181   	fcall	_I2C_MasterStop
  8150  013C                     l2432:
  8151                           
  8152                           ;i2c_master.c: 472: return I2C_IDLE;
  8153  013C  3000               	movlw	0
  8154  013D                     l584:
  8155  013D  0008               	return
  8156  013E                     __end_of_I2C_DO_SEND_STOP:
  8157                           
  8158                           	psect	text23
  8159  0134                     __ptext23:	
  8160 ;; *************** function _I2C_DO_SEND_RESTART *****************
  8161 ;; Defined at:
  8162 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;		None
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;		None
  8167 ;; Return value:  Size  Location     Type
  8168 ;;                  1    wreg      enum E11990
  8169 ;; Registers used:
  8170 ;;		wreg, status,2, status,0, pclath, cstack
  8171 ;; Tracked objects:
  8172 ;;		On entry : 0/0
  8173 ;;		On exit  : 0/0
  8174 ;;		Unchanged: 0/0
  8175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8180 ;;Total ram usage:        0 bytes
  8181 ;; Hardware stack levels used:    1
  8182 ;; Hardware stack levels required when called:    1
  8183 ;; This function calls:
  8184 ;;		_I2C_MasterEnableRestart
  8185 ;; This function is called by:
  8186 ;;		_I2C_DO_TX_EMPTY
  8187 ;;		_I2C_DO_ADDRESS_NACK
  8188 ;;		_I2C_MasterFsm
  8189 ;; This function uses a non-reentrant model
  8190 ;;
  8191                           
  8192                           
  8193                           ;psect for function _I2C_DO_SEND_RESTART
  8194  0134                     _I2C_DO_SEND_RESTART:
  8195  0134                     l2456:	
  8196                           ;incstack = 0
  8197                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  8198                           
  8199                           
  8200                           ;i2c_master.c: 465: I2C_MasterEnableRestart();
  8201  0134  3181  2105  3181   	fcall	_I2C_MasterEnableRestart
  8202  0137                     l2458:
  8203                           
  8204                           ;i2c_master.c: 466: return I2C_SEND_ADR_READ;
  8205  0137  3001               	movlw	1
  8206  0138                     l581:
  8207  0138  0008               	return
  8208  0139                     __end_of_I2C_DO_SEND_RESTART:
  8209                           
  8210                           	psect	text24
  8211  012F                     __ptext24:	
  8212 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  8213 ;; Defined at:
  8214 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  8215 ;; Parameters:    Size  Location     Type
  8216 ;;		None
  8217 ;; Auto vars:     Size  Location     Type
  8218 ;;		None
  8219 ;; Return value:  Size  Location     Type
  8220 ;;                  1    wreg      enum E11990
  8221 ;; Registers used:
  8222 ;;		wreg, status,2, status,0, pclath, cstack
  8223 ;; Tracked objects:
  8224 ;;		On entry : 0/0
  8225 ;;		On exit  : 0/0
  8226 ;;		Unchanged: 0/0
  8227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8232 ;;Total ram usage:        0 bytes
  8233 ;; Hardware stack levels used:    1
  8234 ;; Hardware stack levels required when called:    1
  8235 ;; This function calls:
  8236 ;;		_I2C_MasterEnableRestart
  8237 ;; This function is called by:
  8238 ;;		_I2C_DO_TX
  8239 ;;		_I2C_MasterFsm
  8240 ;; This function uses a non-reentrant model
  8241 ;;
  8242                           
  8243                           
  8244                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  8245  012F                     _I2C_DO_SEND_RESTART_WRITE:
  8246  012F                     l2424:	
  8247                           ;incstack = 0
  8248                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  8249                           
  8250                           
  8251                           ;i2c_master.c: 458: I2C_MasterEnableRestart();
  8252  012F  3181  2105  3181   	fcall	_I2C_MasterEnableRestart
  8253  0132                     l2426:
  8254                           
  8255                           ;i2c_master.c: 459: return I2C_SEND_ADR_WRITE;
  8256  0132  3002               	movlw	2
  8257  0133                     l578:
  8258  0133  0008               	return
  8259  0134                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  8260                           
  8261                           	psect	text25
  8262  012A                     __ptext25:	
  8263 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  8264 ;; Defined at:
  8265 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  8266 ;; Parameters:    Size  Location     Type
  8267 ;;		None
  8268 ;; Auto vars:     Size  Location     Type
  8269 ;;		None
  8270 ;; Return value:  Size  Location     Type
  8271 ;;                  1    wreg      enum E11990
  8272 ;; Registers used:
  8273 ;;		wreg, status,2, status,0, pclath, cstack
  8274 ;; Tracked objects:
  8275 ;;		On entry : 0/0
  8276 ;;		On exit  : 0/0
  8277 ;;		Unchanged: 0/0
  8278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8283 ;;Total ram usage:        0 bytes
  8284 ;; Hardware stack levels used:    1
  8285 ;; Hardware stack levels required when called:    1
  8286 ;; This function calls:
  8287 ;;		_I2C_MasterEnableRestart
  8288 ;; This function is called by:
  8289 ;;		_I2C_DO_TX
  8290 ;;		_I2C_MasterFsm
  8291 ;; This function uses a non-reentrant model
  8292 ;;
  8293                           
  8294                           
  8295                           ;psect for function _I2C_DO_SEND_RESTART_READ
  8296  012A                     _I2C_DO_SEND_RESTART_READ:
  8297  012A                     l2418:	
  8298                           ;incstack = 0
  8299                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  8300                           
  8301                           
  8302                           ;i2c_master.c: 452: I2C_MasterEnableRestart();
  8303  012A  3181  2105  3181   	fcall	_I2C_MasterEnableRestart
  8304  012D                     l2420:
  8305                           
  8306                           ;i2c_master.c: 453: return I2C_SEND_ADR_READ;
  8307  012D  3001               	movlw	1
  8308  012E                     l575:
  8309  012E  0008               	return
  8310  012F                     __end_of_I2C_DO_SEND_RESTART_READ:
  8311                           
  8312                           	psect	text26
  8313  016F                     __ptext26:	
  8314 ;; *************** function _I2C_DO_RCEN *****************
  8315 ;; Defined at:
  8316 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;		None
  8319 ;; Auto vars:     Size  Location     Type
  8320 ;;		None
  8321 ;; Return value:  Size  Location     Type
  8322 ;;                  1    wreg      enum E11990
  8323 ;; Registers used:
  8324 ;;		wreg, status,2, status,0, pclath, cstack
  8325 ;; Tracked objects:
  8326 ;;		On entry : 0/0
  8327 ;;		On exit  : 0/0
  8328 ;;		Unchanged: 0/0
  8329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8334 ;;Total ram usage:        0 bytes
  8335 ;; Hardware stack levels used:    1
  8336 ;; Hardware stack levels required when called:    1
  8337 ;; This function calls:
  8338 ;;		_I2C_MasterStartRx
  8339 ;; This function is called by:
  8340 ;;		_I2C_MasterFsm
  8341 ;; This function uses a non-reentrant model
  8342 ;;
  8343                           
  8344                           
  8345                           ;psect for function _I2C_DO_RCEN
  8346  016F                     _I2C_DO_RCEN:
  8347  016F                     l2554:	
  8348                           ;incstack = 0
  8349                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  8350                           
  8351                           
  8352                           ;i2c_master.c: 404: I2C_Status.addressNackCheck = 0;
  8353  016F  0020               	movlb	0	; select bank0
  8354  0170  103C               	bcf	_I2C_Status+28,0
  8355  0171                     l2556:
  8356                           
  8357                           ;i2c_master.c: 405: I2C_MasterStartRx();
  8358  0171  3181  210B  3181   	fcall	_I2C_MasterStartRx
  8359  0174                     l2558:
  8360                           
  8361                           ;i2c_master.c: 406: return I2C_RX;
  8362  0174  3004               	movlw	4
  8363  0175                     l551:
  8364  0175  0008               	return
  8365  0176                     __end_of_I2C_DO_RCEN:
  8366                           
  8367                           	psect	text27
  8368  04E3                     __ptext27:	
  8369 ;; *************** function _I2C_DO_RX *****************
  8370 ;; Defined at:
  8371 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;		None
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;		None
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  1    wreg      enum E11990
  8378 ;; Registers used:
  8379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8387 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8388 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8389 ;;Total ram usage:        1 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; Hardware stack levels required when called:    3
  8392 ;; This function calls:
  8393 ;;		Absolute function
  8394 ;;		_I2C_CallbackReturnReset
  8395 ;;		_I2C_CallbackReturnStop
  8396 ;;		_I2C_DO_RX_NACK_RESTART
  8397 ;;		_I2C_DO_RX_NACK_STOP
  8398 ;;		_I2C_MasterGetRxData
  8399 ;;		_I2C_MasterSendAck
  8400 ;;		_rd1RegCompleteHandler
  8401 ;;		_rd2RegCompleteHandler
  8402 ;;		_rdBlkRegCompleteHandler
  8403 ;;		_wr1RegCompleteHandler
  8404 ;;		_wr2RegCompleteHandler
  8405 ;; This function is called by:
  8406 ;;		_I2C_MasterFsm
  8407 ;; This function uses a non-reentrant model
  8408 ;;
  8409                           
  8410                           
  8411                           ;psect for function _I2C_DO_RX
  8412  04E3                     _I2C_DO_RX:
  8413  04E3                     l2528:	
  8414                           ;incstack = 0
  8415                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8416                           
  8417                           
  8418                           ;i2c_master.c: 380: *I2C_Status.data_ptr++ = I2C_MasterGetRxData();
  8419  04E3  3181  210E  3184   	fcall	_I2C_MasterGetRxData
  8420  04E6  00FA               	movwf	??_I2C_DO_RX
  8421  04E7  0020               	movlb	0	; select bank0
  8422  04E8  0837               	movf	low ((_I2C_Status| 0+23)),w
  8423  04E9  0086               	movwf	6
  8424  04EA  0187               	clrf	7
  8425  04EB  087A               	movf	??_I2C_DO_RX,w
  8426  04EC  0081               	movwf	1
  8427  04ED                     l2530:
  8428  04ED  3001               	movlw	1
  8429  04EE  00FA               	movwf	??_I2C_DO_RX
  8430  04EF  087A               	movf	??_I2C_DO_RX,w
  8431  04F0  07B7               	addwf	low ((_I2C_Status| 0+23)),f
  8432  04F1                     l2532:
  8433                           
  8434                           ;i2c_master.c: 381: if(--I2C_Status.data_length)
  8435  04F1  3001               	movlw	1
  8436  04F2  02B8               	subwf	_I2C_Status+24,f
  8437  04F3  3000               	movlw	0
  8438  04F4  3BB9               	subwfb	_I2C_Status+25,f
  8439  04F5  0838               	movf	_I2C_Status+24,w
  8440  04F6  0439               	iorwf	_I2C_Status+25,w
  8441  04F7  1903               	btfsc	3,2
  8442  04F8  2CFA               	goto	u831
  8443  04F9  2CFB               	goto	u830
  8444  04FA                     u831:
  8445  04FA  2D00               	goto	l539
  8446  04FB                     u830:
  8447  04FB                     l2534:
  8448                           
  8449                           ;i2c_master.c: 382: {;i2c_master.c: 383: I2C_MasterSendAck();
  8450  04FB  3181  211C  3184   	fcall	_I2C_MasterSendAck
  8451  04FE                     l2536:
  8452                           
  8453                           ;i2c_master.c: 384: return I2C_RCEN;
  8454  04FE  3005               	movlw	5
  8455  04FF  2D20               	goto	l540
  8456  0500                     l539:
  8457                           
  8458                           ;i2c_master.c: 386: else;i2c_master.c: 387: {;i2c_master.c: 388: I2C_Status.bufferFree =
      +                           1;
  8459  0500  15BC               	bsf	_I2C_Status+28,3
  8460                           
  8461                           ;i2c_master.c: 389: switch(I2C_Status.callbackTable[I2C_DATA_COMPLETE](I2C_Status.callba
      +                          ckPayload[I2C_DATA_COMPLETE]))
  8462  0501  2D0A               	goto	l2552
  8463  0502                     l2542:
  8464                           
  8465                           ;i2c_master.c: 392: case I2C_RESTART_READ:;i2c_master.c: 393: return I2C_DO_RX_NACK_REST
      +                          ART();
  8466  0502  3181  2148  3184   	fcall	_I2C_DO_RX_NACK_RESTART
  8467  0505  2D20               	goto	l540
  8468  0506                     l2546:
  8469                           
  8470                           ;i2c_master.c: 396: case I2C_STOP:;i2c_master.c: 397: return I2C_DO_RX_NACK_STOP();
  8471  0506  3181  2143  3184   	fcall	_I2C_DO_RX_NACK_STOP
  8472  0509  2D20               	goto	l540
  8473  050A                     l2552:
  8474  050A  082C               	movf	low ((_I2C_Status| 0+12)),w
  8475  050B  00FA               	movwf	??_I2C_DO_RX
  8476  050C  087A               	movf	??_I2C_DO_RX,w
  8477  050D  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  8478  050E  0821               	movf	_I2C_Status+1,w
  8479  050F  008A               	movwf	10
  8480  0510  0820               	movf	_I2C_Status,w
  8481  0511  000A               	callw
  8482  0512  3184               	pagesel	$
  8483                           
  8484                           ; Switch size 1, requested type "simple"
  8485                           ; Number of cases is 4, Range of values is 1 to 4
  8486                           ; switch strategies available:
  8487                           ; Name         Instructions Cycles
  8488                           ; simple_byte           13     7 (average)
  8489                           ; direct_byte           17     9 (fixed)
  8490                           ; jumptable            263     9 (fixed)
  8491                           ;	Chosen strategy is simple_byte
  8492  0513  3A01               	xorlw	1	; case 1
  8493  0514  1903               	skipnz
  8494  0515  2D06               	goto	l2546
  8495  0516  3A03               	xorlw	3	; case 2
  8496  0517  1903               	skipnz
  8497  0518  2D02               	goto	l2542
  8498  0519  3A01               	xorlw	1	; case 3
  8499  051A  1903               	skipnz
  8500  051B  2D02               	goto	l2542
  8501  051C  3A07               	xorlw	7	; case 4
  8502  051D  1903               	skipnz
  8503  051E  2D06               	goto	l2546
  8504  051F  2D06               	goto	l2546
  8505  0520                     l540:
  8506  0520  0008               	return
  8507  0521                     __end_of_I2C_DO_RX:
  8508                           
  8509                           	psect	text28
  8510  05A2                     __ptext28:	
  8511 ;; *************** function _I2C_DO_TX *****************
  8512 ;; Defined at:
  8513 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
  8514 ;; Parameters:    Size  Location     Type
  8515 ;;		None
  8516 ;; Auto vars:     Size  Location     Type
  8517 ;;		None
  8518 ;; Return value:  Size  Location     Type
  8519 ;;                  1    wreg      enum E11990
  8520 ;; Registers used:
  8521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8522 ;; Tracked objects:
  8523 ;;		On entry : 0/0
  8524 ;;		On exit  : 0/0
  8525 ;;		Unchanged: 0/0
  8526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8528 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8529 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8530 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8531 ;;Total ram usage:        3 bytes
  8532 ;; Hardware stack levels used:    1
  8533 ;; Hardware stack levels required when called:    3
  8534 ;; This function calls:
  8535 ;;		Absolute function
  8536 ;;		_I2C_CallbackReturnReset
  8537 ;;		_I2C_CallbackReturnStop
  8538 ;;		_I2C_DO_SEND_RESTART_READ
  8539 ;;		_I2C_DO_SEND_RESTART_WRITE
  8540 ;;		_I2C_DO_SEND_STOP
  8541 ;;		_I2C_MasterIsNack
  8542 ;;		_I2C_MasterSendTxData
  8543 ;;		_rd1RegCompleteHandler
  8544 ;;		_rd2RegCompleteHandler
  8545 ;;		_rdBlkRegCompleteHandler
  8546 ;;		_wr1RegCompleteHandler
  8547 ;;		_wr2RegCompleteHandler
  8548 ;; This function is called by:
  8549 ;;		_I2C_MasterFsm
  8550 ;; This function uses a non-reentrant model
  8551 ;;
  8552                           
  8553                           
  8554                           ;psect for function _I2C_DO_TX
  8555  05A2                     _I2C_DO_TX:
  8556  05A2                     l2498:	
  8557                           ;incstack = 0
  8558                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8559                           
  8560                           
  8561                           ;i2c_master.c: 356: if(I2C_MasterIsNack())
  8562  05A2  3181  2157  3185   	fcall	_I2C_MasterIsNack
  8563  05A5  3A00               	xorlw	0
  8564  05A6  1903               	skipnz
  8565  05A7  2DA9               	goto	u811
  8566  05A8  2DAA               	goto	u810
  8567  05A9                     u811:
  8568  05A9  2DD2               	goto	l523
  8569  05AA                     u810:
  8570  05AA  2DB7               	goto	l2516
  8571  05AB                     l2502:
  8572                           
  8573                           ;i2c_master.c: 361: return I2C_DO_SEND_RESTART_READ();
  8574  05AB  3181  212A  3185   	fcall	_I2C_DO_SEND_RESTART_READ
  8575  05AE  2DF5               	goto	l526
  8576  05AF                     l2506:
  8577                           
  8578                           ;i2c_master.c: 363: return I2C_DO_SEND_RESTART_WRITE();
  8579  05AF  3181  212F  3185   	fcall	_I2C_DO_SEND_RESTART_WRITE
  8580  05B2  2DF5               	goto	l526
  8581  05B3                     l2510:
  8582                           
  8583                           ;i2c_master.c: 366: case I2C_STOP:;i2c_master.c: 367: return I2C_DO_SEND_STOP();
  8584  05B3  3181  2139  3185   	fcall	_I2C_DO_SEND_STOP
  8585  05B6  2DF5               	goto	l526
  8586  05B7                     l2516:
  8587  05B7  0020               	movlb	0	; select bank0
  8588  05B8  082F               	movf	low ((_I2C_Status| 0+15)),w
  8589  05B9  00FA               	movwf	??_I2C_DO_TX
  8590  05BA  087A               	movf	??_I2C_DO_TX,w
  8591  05BB  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  8592  05BC  3006               	movlw	6
  8593  05BD  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  8594  05BE  0086               	movwf	6
  8595  05BF  0187               	clrf	7
  8596  05C0  3F41               	moviw [1]fsr1
  8597  05C1  008A               	movwf	10
  8598  05C2  3F40               	moviw [0]fsr1
  8599  05C3  000A               	callw
  8600  05C4  3185               	pagesel	$
  8601                           
  8602                           ; Switch size 1, requested type "simple"
  8603                           ; Number of cases is 4, Range of values is 1 to 4
  8604                           ; switch strategies available:
  8605                           ; Name         Instructions Cycles
  8606                           ; simple_byte           13     7 (average)
  8607                           ; direct_byte           17     9 (fixed)
  8608                           ; jumptable            263     9 (fixed)
  8609                           ;	Chosen strategy is simple_byte
  8610  05C5  3A01               	xorlw	1	; case 1
  8611  05C6  1903               	skipnz
  8612  05C7  2DB3               	goto	l2510
  8613  05C8  3A03               	xorlw	3	; case 2
  8614  05C9  1903               	skipnz
  8615  05CA  2DAB               	goto	l2502
  8616  05CB  3A01               	xorlw	1	; case 3
  8617  05CC  1903               	skipnz
  8618  05CD  2DAF               	goto	l2506
  8619  05CE  3A07               	xorlw	7	; case 4
  8620  05CF  1903               	skipnz
  8621  05D0  2DB3               	goto	l2510
  8622  05D1  2DB3               	goto	l2510
  8623  05D2                     l523:
  8624                           
  8625                           ;i2c_master.c: 370: else;i2c_master.c: 371: {;i2c_master.c: 372: I2C_Status.addressNackC
      +                          heck = 0;
  8626  05D2  0020               	movlb	0	; select bank0
  8627  05D3  103C               	bcf	_I2C_Status+28,0
  8628  05D4                     l2518:
  8629                           
  8630                           ;i2c_master.c: 373: I2C_MasterSendTxData(*I2C_Status.data_ptr++);
  8631  05D4  3017               	movlw	23
  8632  05D5  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  8633  05D6  0086               	movwf	6
  8634  05D7  0187               	clrf	7
  8635  05D8  3F40               	moviw [0]fsr1
  8636  05D9  0084               	movwf	4
  8637  05DA  0185               	clrf	5
  8638  05DB  0A81               	incf	1,f
  8639  05DC  0800               	movf	0,w
  8640  05DD  3181  2120  3185   	fcall	_I2C_MasterSendTxData
  8641  05E0                     l2520:
  8642                           
  8643                           ;i2c_master.c: 374: return (--I2C_Status.data_length)?I2C_TX:I2C_TX_EMPTY;
  8644  05E0  3001               	movlw	1
  8645  05E1  0020               	movlb	0	; select bank0
  8646  05E2  02B8               	subwf	_I2C_Status+24,f
  8647  05E3  3000               	movlw	0
  8648  05E4  3BB9               	subwfb	_I2C_Status+25,f
  8649  05E5  0838               	movf	_I2C_Status+24,w
  8650  05E6  0439               	iorwf	_I2C_Status+25,w
  8651  05E7  1D03               	btfss	3,2
  8652  05E8  2DEA               	goto	u821
  8653  05E9  2DEB               	goto	u820
  8654  05EA                     u821:
  8655  05EA  2DF0               	goto	l2524
  8656  05EB                     u820:
  8657  05EB                     l2522:
  8658  05EB  3006               	movlw	6
  8659  05EC  00FB               	movwf	_I2C_DO_TX$1178
  8660  05ED  3000               	movlw	0
  8661  05EE  00FC               	movwf	_I2C_DO_TX$1178+1
  8662  05EF  2DF4               	goto	l536
  8663  05F0                     l2524:
  8664  05F0  3003               	movlw	3
  8665  05F1  00FB               	movwf	_I2C_DO_TX$1178
  8666  05F2  3000               	movlw	0
  8667  05F3  00FC               	movwf	_I2C_DO_TX$1178+1
  8668  05F4                     l536:
  8669  05F4  087B               	movf	_I2C_DO_TX$1178,w
  8670  05F5                     l526:
  8671  05F5  0008               	return
  8672  05F6                     __end_of_I2C_DO_TX:
  8673                           
  8674                           	psect	text29
  8675  0176                     __ptext29:	
  8676 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  8677 ;; Defined at:
  8678 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
  8679 ;; Parameters:    Size  Location     Type
  8680 ;;		None
  8681 ;; Auto vars:     Size  Location     Type
  8682 ;;		None
  8683 ;; Return value:  Size  Location     Type
  8684 ;;                  1    wreg      enum E11990
  8685 ;; Registers used:
  8686 ;;		wreg, status,2, status,0, pclath, cstack
  8687 ;; Tracked objects:
  8688 ;;		On entry : 0/0
  8689 ;;		On exit  : 0/0
  8690 ;;		Unchanged: 0/0
  8691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8696 ;;Total ram usage:        0 bytes
  8697 ;; Hardware stack levels used:    1
  8698 ;; Hardware stack levels required when called:    1
  8699 ;; This function calls:
  8700 ;;		_I2C_MasterSendTxData
  8701 ;; This function is called by:
  8702 ;;		_I2C_MasterFsm
  8703 ;; This function uses a non-reentrant model
  8704 ;;
  8705                           
  8706                           
  8707                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  8708  0176                     _I2C_DO_SEND_ADR_WRITE:
  8709  0176                     l2490:	
  8710                           ;incstack = 0
  8711                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  8712                           
  8713                           
  8714                           ;i2c_master.c: 349: I2C_Status.addressNackCheck = 1;
  8715  0176  0020               	movlb	0	; select bank0
  8716  0177  143C               	bsf	_I2C_Status+28,0
  8717  0178                     l2492:
  8718                           
  8719                           ;i2c_master.c: 350: I2C_MasterSendTxData((uint8_t) (I2C_Status.address << 1));
  8720  0178  3536               	lslf	_I2C_Status+22,w
  8721  0179  3181  2120  3181   	fcall	_I2C_MasterSendTxData
  8722  017C                     l2494:
  8723                           
  8724                           ;i2c_master.c: 351: return I2C_TX;
  8725  017C  3003               	movlw	3
  8726  017D                     l520:
  8727  017D  0008               	return
  8728  017E                     __end_of_I2C_DO_SEND_ADR_WRITE:
  8729                           
  8730                           	psect	text30
  8731  017E                     __ptext30:	
  8732 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  8733 ;; Defined at:
  8734 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;		None
  8737 ;; Auto vars:     Size  Location     Type
  8738 ;;		None
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  1    wreg      enum E11990
  8741 ;; Registers used:
  8742 ;;		wreg, status,2, status,0, pclath, cstack
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8751 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8752 ;;Total ram usage:        0 bytes
  8753 ;; Hardware stack levels used:    1
  8754 ;; Hardware stack levels required when called:    1
  8755 ;; This function calls:
  8756 ;;		_I2C_MasterSendTxData
  8757 ;; This function is called by:
  8758 ;;		_I2C_MasterFsm
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762                           
  8763                           ;psect for function _I2C_DO_SEND_ADR_READ
  8764  017E                     _I2C_DO_SEND_ADR_READ:
  8765  017E                     l2482:	
  8766                           ;incstack = 0
  8767                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  8768                           
  8769                           
  8770                           ;i2c_master.c: 342: I2C_Status.addressNackCheck = 1;
  8771  017E  0020               	movlb	0	; select bank0
  8772  017F  143C               	bsf	_I2C_Status+28,0
  8773  0180                     l2484:
  8774                           
  8775                           ;i2c_master.c: 343: I2C_MasterSendTxData((uint8_t) (I2C_Status.address << 1 | 1));
  8776  0180  1403               	setc
  8777  0181  0D36               	rlf	_I2C_Status+22,w
  8778  0182  3181  2120  3181   	fcall	_I2C_MasterSendTxData
  8779  0185                     l2486:
  8780                           
  8781                           ;i2c_master.c: 344: return I2C_RCEN;
  8782  0185  3005               	movlw	5
  8783  0186                     l517:
  8784  0186  0008               	return
  8785  0187                     __end_of_I2C_DO_SEND_ADR_READ:
  8786                           
  8787                           	psect	text31
  8788  0125                     __ptext31:	
  8789 ;; *************** function _I2C_DO_IDLE *****************
  8790 ;; Defined at:
  8791 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
  8792 ;; Parameters:    Size  Location     Type
  8793 ;;		None
  8794 ;; Auto vars:     Size  Location     Type
  8795 ;;		None
  8796 ;; Return value:  Size  Location     Type
  8797 ;;                  1    wreg      enum E11990
  8798 ;; Registers used:
  8799 ;;		wreg, status,2
  8800 ;; Tracked objects:
  8801 ;;		On entry : 0/0
  8802 ;;		On exit  : 0/0
  8803 ;;		Unchanged: 0/0
  8804 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8805 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8808 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8809 ;;Total ram usage:        0 bytes
  8810 ;; Hardware stack levels used:    1
  8811 ;; This function calls:
  8812 ;;		Nothing
  8813 ;; This function is called by:
  8814 ;;		_I2C_MasterFsm
  8815 ;; This function uses a non-reentrant model
  8816 ;;
  8817                           
  8818                           
  8819                           ;psect for function _I2C_DO_IDLE
  8820  0125                     _I2C_DO_IDLE:
  8821  0125                     l2474:	
  8822                           ;incstack = 0
  8823                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  8824                           
  8825                           
  8826                           ;i2c_master.c: 335: I2C_Status.busy = 0;
  8827  0125  0020               	movlb	0	; select bank0
  8828  0126  10BC               	bcf	_I2C_Status+28,1
  8829  0127                     l2476:
  8830                           
  8831                           ;i2c_master.c: 336: I2C_Status.error = I2C_NOERR;
  8832  0127  01BB               	clrf	_I2C_Status+27
  8833  0128                     l2478:
  8834                           
  8835                           ;i2c_master.c: 337: return I2C_RESET;
  8836  0128  300E               	movlw	14
  8837  0129                     l514:
  8838  0129  0008               	return
  8839  012A                     __end_of_I2C_DO_IDLE:
  8840                           
  8841                           	psect	text32
  8842  0380                     __ptext32:	
  8843 ;; *************** function _I2C_DO_TX_EMPTY *****************
  8844 ;; Defined at:
  8845 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
  8846 ;; Parameters:    Size  Location     Type
  8847 ;;		None
  8848 ;; Auto vars:     Size  Location     Type
  8849 ;;		None
  8850 ;; Return value:  Size  Location     Type
  8851 ;;                  1    wreg      enum E11990
  8852 ;; Registers used:
  8853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8854 ;; Tracked objects:
  8855 ;;		On entry : 0/0
  8856 ;;		On exit  : 0/0
  8857 ;;		Unchanged: 0/0
  8858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8860 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8861 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8863 ;;Total ram usage:        1 bytes
  8864 ;; Hardware stack levels used:    1
  8865 ;; Hardware stack levels required when called:    3
  8866 ;; This function calls:
  8867 ;;		Absolute function
  8868 ;;		_I2C_CallbackReturnReset
  8869 ;;		_I2C_CallbackReturnStop
  8870 ;;		_I2C_DO_SEND_RESTART
  8871 ;;		_I2C_DO_SEND_STOP
  8872 ;;		_I2C_MasterSetIrq
  8873 ;;		_rd1RegCompleteHandler
  8874 ;;		_rd2RegCompleteHandler
  8875 ;;		_rdBlkRegCompleteHandler
  8876 ;;		_wr1RegCompleteHandler
  8877 ;;		_wr2RegCompleteHandler
  8878 ;; This function is called by:
  8879 ;;		_I2C_MasterFsm
  8880 ;; This function uses a non-reentrant model
  8881 ;;
  8882                           
  8883                           
  8884                           ;psect for function _I2C_DO_TX_EMPTY
  8885  0380                     _I2C_DO_TX_EMPTY:
  8886  0380                     l2562:	
  8887                           ;incstack = 0
  8888                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8889                           
  8890                           
  8891                           ;i2c_master.c: 411: I2C_Status.bufferFree = 1;
  8892  0380  0020               	movlb	0	; select bank0
  8893  0381  15BC               	bsf	_I2C_Status+28,3
  8894                           
  8895                           ;i2c_master.c: 412: switch(I2C_Status.callbackTable[I2C_DATA_COMPLETE](I2C_Status.callba
      +                          ckPayload[I2C_DATA_COMPLETE]))
  8896  0382  2B90               	goto	l2580
  8897  0383                     l2564:
  8898                           
  8899                           ;i2c_master.c: 415: case I2C_RESTART_WRITE:;i2c_master.c: 416: return I2C_DO_SEND_RESTAR
      +                          T();
  8900  0383  3181  2134  3183   	fcall	_I2C_DO_SEND_RESTART
  8901  0386  2BA6               	goto	l557
  8902  0387                     l2568:
  8903                           
  8904                           ;i2c_master.c: 418: I2C_MasterSetIrq();
  8905  0387  3181  2111  3183   	fcall	_I2C_MasterSetIrq
  8906  038A                     l2570:
  8907                           
  8908                           ;i2c_master.c: 419: return I2C_TX;
  8909  038A  3003               	movlw	3
  8910  038B  2BA6               	goto	l557
  8911  038C                     l2574:
  8912                           
  8913                           ;i2c_master.c: 422: return I2C_DO_SEND_STOP();
  8914  038C  3181  2139  3183   	fcall	_I2C_DO_SEND_STOP
  8915  038F  2BA6               	goto	l557
  8916  0390                     l2580:
  8917  0390  082C               	movf	low ((_I2C_Status| 0+12)),w
  8918  0391  00FA               	movwf	??_I2C_DO_TX_EMPTY
  8919  0392  087A               	movf	??_I2C_DO_TX_EMPTY,w
  8920  0393  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  8921  0394  0821               	movf	_I2C_Status+1,w
  8922  0395  008A               	movwf	10
  8923  0396  0820               	movf	_I2C_Status,w
  8924  0397  000A               	callw
  8925  0398  3183               	pagesel	$
  8926                           
  8927                           ; Switch size 1, requested type "simple"
  8928                           ; Number of cases is 4, Range of values is 1 to 4
  8929                           ; switch strategies available:
  8930                           ; Name         Instructions Cycles
  8931                           ; simple_byte           13     7 (average)
  8932                           ; direct_byte           17     9 (fixed)
  8933                           ; jumptable            263     9 (fixed)
  8934                           ;	Chosen strategy is simple_byte
  8935  0399  3A01               	xorlw	1	; case 1
  8936  039A  1903               	skipnz
  8937  039B  2B8C               	goto	l2574
  8938  039C  3A03               	xorlw	3	; case 2
  8939  039D  1903               	skipnz
  8940  039E  2B83               	goto	l2564
  8941  039F  3A01               	xorlw	1	; case 3
  8942  03A0  1903               	skipnz
  8943  03A1  2B83               	goto	l2564
  8944  03A2  3A07               	xorlw	7	; case 4
  8945  03A3  1903               	skipnz
  8946  03A4  2B87               	goto	l2568
  8947  03A5  2B8C               	goto	l2574
  8948  03A6                     l557:
  8949  03A6  0008               	return
  8950  03A7                     __end_of_I2C_DO_TX_EMPTY:
  8951                           
  8952                           	psect	text33
  8953  0111                     __ptext33:	
  8954 ;; *************** function _I2C_MasterSetIrq *****************
  8955 ;; Defined at:
  8956 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
  8957 ;; Parameters:    Size  Location     Type
  8958 ;;		None
  8959 ;; Auto vars:     Size  Location     Type
  8960 ;;		None
  8961 ;; Return value:  Size  Location     Type
  8962 ;;                  1    wreg      void 
  8963 ;; Registers used:
  8964 ;;		None
  8965 ;; Tracked objects:
  8966 ;;		On entry : 0/0
  8967 ;;		On exit  : 0/0
  8968 ;;		Unchanged: 0/0
  8969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8974 ;;Total ram usage:        0 bytes
  8975 ;; Hardware stack levels used:    1
  8976 ;; This function calls:
  8977 ;;		Nothing
  8978 ;; This function is called by:
  8979 ;;		_I2C_DO_TX_EMPTY
  8980 ;; This function uses a non-reentrant model
  8981 ;;
  8982                           
  8983                           
  8984                           ;psect for function _I2C_MasterSetIrq
  8985  0111                     _I2C_MasterSetIrq:
  8986  0111                     l2462:	
  8987                           ;incstack = 0
  8988                           ; Regs used in _I2C_MasterSetIrq: []
  8989                           
  8990                           
  8991                           ;i2c_master.c: 647: PIR1bits.SSP1IF = 1;
  8992  0111  0020               	movlb	0	; select bank0
  8993  0112  1591               	bsf	17,3	;volatile
  8994  0113                     l677:
  8995  0113  0008               	return
  8996  0114                     __end_of_I2C_MasterSetIrq:
  8997                           
  8998                           	psect	text34
  8999  0157                     __ptext34:	
  9000 ;; *************** function _I2C_MasterIsNack *****************
  9001 ;; Defined at:
  9002 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
  9003 ;; Parameters:    Size  Location     Type
  9004 ;;		None
  9005 ;; Auto vars:     Size  Location     Type
  9006 ;;		None
  9007 ;; Return value:  Size  Location     Type
  9008 ;;                  1    wreg      unsigned char 
  9009 ;; Registers used:
  9010 ;;		wreg, status,2, status,0
  9011 ;; Tracked objects:
  9012 ;;		On entry : 0/0
  9013 ;;		On exit  : 0/0
  9014 ;;		Unchanged: 0/0
  9015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9020 ;;Total ram usage:        0 bytes
  9021 ;; Hardware stack levels used:    1
  9022 ;; This function calls:
  9023 ;;		Nothing
  9024 ;; This function is called by:
  9025 ;;		_I2C_MasterFsm
  9026 ;;		_I2C_DO_TX
  9027 ;; This function uses a non-reentrant model
  9028 ;;
  9029                           
  9030                           
  9031                           ;psect for function _I2C_MasterIsNack
  9032  0157                     _I2C_MasterIsNack:
  9033  0157                     l2412:	
  9034                           ;incstack = 0
  9035                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  9036                           
  9037                           
  9038                           ;i2c_master.c: 600: return SSP1CON2bits.ACKSTAT;
  9039  0157  0024               	movlb	4	; select bank4
  9040  0158  0E16               	swapf	22,w	;volatile
  9041  0159  0C89               	rrf	9,f
  9042  015A  0C89               	rrf	9,f
  9043  015B  3901               	andlw	1
  9044  015C                     l650:
  9045  015C  0008               	return
  9046  015D                     __end_of_I2C_MasterIsNack:
  9047                           
  9048                           	psect	text35
  9049  0120                     __ptext35:	
  9050 ;; *************** function _I2C_MasterSendTxData *****************
  9051 ;; Defined at:
  9052 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
  9053 ;; Parameters:    Size  Location     Type
  9054 ;;  data            1    wreg     unsigned char 
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;  data            1    0[COMMON] unsigned char 
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  1    wreg      void 
  9059 ;; Registers used:
  9060 ;;		wreg
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9067 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9070 ;;Total ram usage:        1 bytes
  9071 ;; Hardware stack levels used:    1
  9072 ;; This function calls:
  9073 ;;		Nothing
  9074 ;; This function is called by:
  9075 ;;		_I2C_DO_SEND_ADR_READ
  9076 ;;		_I2C_DO_SEND_ADR_WRITE
  9077 ;;		_I2C_DO_TX
  9078 ;; This function uses a non-reentrant model
  9079 ;;
  9080                           
  9081                           
  9082                           ;psect for function _I2C_MasterSendTxData
  9083  0120                     _I2C_MasterSendTxData:
  9084                           
  9085                           ;incstack = 0
  9086                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  9087                           ;I2C_MasterSendTxData@data stored from wreg
  9088  0120  00F0               	movwf	I2C_MasterSendTxData@data
  9089  0121                     l2416:
  9090                           
  9091                           ;i2c_master.c: 570: SSP1BUF = data;
  9092  0121  0870               	movf	I2C_MasterSendTxData@data,w
  9093  0122  0024               	movlb	4	; select bank4
  9094  0123  0091               	movwf	17	;volatile
  9095  0124                     l632:
  9096  0124  0008               	return
  9097  0125                     __end_of_I2C_MasterSendTxData:
  9098                           
  9099                           	psect	text36
  9100  011C                     __ptext36:	
  9101 ;; *************** function _I2C_MasterSendAck *****************
  9102 ;; Defined at:
  9103 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;		None
  9106 ;; Auto vars:     Size  Location     Type
  9107 ;;		None
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  1    wreg      void 
  9110 ;; Registers used:
  9111 ;;		None
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9121 ;;Total ram usage:        0 bytes
  9122 ;; Hardware stack levels used:    1
  9123 ;; This function calls:
  9124 ;;		Nothing
  9125 ;; This function is called by:
  9126 ;;		_I2C_DO_RX
  9127 ;;		_I2C_DO_RX_ACK
  9128 ;; This function uses a non-reentrant model
  9129 ;;
  9130                           
  9131                           
  9132                           ;psect for function _I2C_MasterSendAck
  9133  011C                     _I2C_MasterSendAck:
  9134  011C                     l2440:	
  9135                           ;incstack = 0
  9136                           ; Regs used in _I2C_MasterSendAck: []
  9137                           
  9138                           
  9139                           ;i2c_master.c: 605: SSP1CON2bits.ACKDT = 0;
  9140  011C  0024               	movlb	4	; select bank4
  9141  011D  1296               	bcf	22,5	;volatile
  9142                           
  9143                           ;i2c_master.c: 606: SSP1CON2bits.ACKEN = 1;
  9144  011E  1616               	bsf	22,4	;volatile
  9145  011F                     l653:
  9146  011F  0008               	return
  9147  0120                     __end_of_I2C_MasterSendAck:
  9148                           
  9149                           	psect	text37
  9150  010E                     __ptext37:	
  9151 ;; *************** function _I2C_MasterGetRxData *****************
  9152 ;; Defined at:
  9153 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
  9154 ;; Parameters:    Size  Location     Type
  9155 ;;		None
  9156 ;; Auto vars:     Size  Location     Type
  9157 ;;		None
  9158 ;; Return value:  Size  Location     Type
  9159 ;;                  1    wreg      unsigned char 
  9160 ;; Registers used:
  9161 ;;		wreg
  9162 ;; Tracked objects:
  9163 ;;		On entry : 0/0
  9164 ;;		On exit  : 0/0
  9165 ;;		Unchanged: 0/0
  9166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9171 ;;Total ram usage:        0 bytes
  9172 ;; Hardware stack levels used:    1
  9173 ;; This function calls:
  9174 ;;		Nothing
  9175 ;; This function is called by:
  9176 ;;		_I2C_DO_RX
  9177 ;; This function uses a non-reentrant model
  9178 ;;
  9179                           
  9180                           
  9181                           ;psect for function _I2C_MasterGetRxData
  9182  010E                     _I2C_MasterGetRxData:
  9183  010E                     l2436:	
  9184                           ;incstack = 0
  9185                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  9186                           
  9187                           
  9188                           ;i2c_master.c: 565: return SSP1BUF;
  9189  010E  0024               	movlb	4	; select bank4
  9190  010F  0811               	movf	17,w	;volatile
  9191  0110                     l629:
  9192  0110  0008               	return
  9193  0111                     __end_of_I2C_MasterGetRxData:
  9194                           
  9195                           	psect	text38
  9196  0118                     __ptext38:	
  9197 ;; *************** function _I2C_MasterSendNack *****************
  9198 ;; Defined at:
  9199 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
  9200 ;; Parameters:    Size  Location     Type
  9201 ;;		None
  9202 ;; Auto vars:     Size  Location     Type
  9203 ;;		None
  9204 ;; Return value:  Size  Location     Type
  9205 ;;                  1    wreg      void 
  9206 ;; Registers used:
  9207 ;;		None
  9208 ;; Tracked objects:
  9209 ;;		On entry : 0/0
  9210 ;;		On exit  : 0/0
  9211 ;;		Unchanged: 0/0
  9212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9217 ;;Total ram usage:        0 bytes
  9218 ;; Hardware stack levels used:    1
  9219 ;; This function calls:
  9220 ;;		Nothing
  9221 ;; This function is called by:
  9222 ;;		_I2C_DO_RX_NACK_STOP
  9223 ;;		_I2C_DO_RX_NACK_RESTART
  9224 ;; This function uses a non-reentrant model
  9225 ;;
  9226                           
  9227                           
  9228                           ;psect for function _I2C_MasterSendNack
  9229  0118                     _I2C_MasterSendNack:
  9230  0118                     l2372:	
  9231                           ;incstack = 0
  9232                           ; Regs used in _I2C_MasterSendNack: []
  9233                           
  9234                           
  9235                           ;i2c_master.c: 611: SSP1CON2bits.ACKDT = 1;
  9236  0118  0024               	movlb	4	; select bank4
  9237  0119  1696               	bsf	22,5	;volatile
  9238                           
  9239                           ;i2c_master.c: 612: SSP1CON2bits.ACKEN = 1;
  9240  011A  1616               	bsf	22,4	;volatile
  9241  011B                     l656:
  9242  011B  0008               	return
  9243  011C                     __end_of_I2C_MasterSendNack:
  9244                           
  9245                           	psect	text39
  9246  010B                     __ptext39:	
  9247 ;; *************** function _I2C_MasterStartRx *****************
  9248 ;; Defined at:
  9249 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
  9250 ;; Parameters:    Size  Location     Type
  9251 ;;		None
  9252 ;; Auto vars:     Size  Location     Type
  9253 ;;		None
  9254 ;; Return value:  Size  Location     Type
  9255 ;;                  1    wreg      void 
  9256 ;; Registers used:
  9257 ;;		None
  9258 ;; Tracked objects:
  9259 ;;		On entry : 0/0
  9260 ;;		On exit  : 0/0
  9261 ;;		Unchanged: 0/0
  9262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9267 ;;Total ram usage:        0 bytes
  9268 ;; Hardware stack levels used:    1
  9269 ;; This function calls:
  9270 ;;		Nothing
  9271 ;; This function is called by:
  9272 ;;		_I2C_DO_RCEN
  9273 ;; This function uses a non-reentrant model
  9274 ;;
  9275                           
  9276                           
  9277                           ;psect for function _I2C_MasterStartRx
  9278  010B                     _I2C_MasterStartRx:
  9279  010B                     l2454:	
  9280                           ;incstack = 0
  9281                           ; Regs used in _I2C_MasterStartRx: []
  9282                           
  9283                           
  9284                           ;i2c_master.c: 585: SSP1CON2bits.RCEN = 1;
  9285  010B  0024               	movlb	4	; select bank4
  9286  010C  1596               	bsf	22,3	;volatile
  9287  010D                     l641:
  9288  010D  0008               	return
  9289  010E                     __end_of_I2C_MasterStartRx:
  9290                           
  9291                           	psect	text40
  9292  00F7                     __ptext40:	
  9293 ;; *************** function _I2C_CallbackReturnReset *****************
  9294 ;; Defined at:
  9295 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
  9296 ;; Parameters:    Size  Location     Type
  9297 ;;  funPtr          1    9[COMMON] PTR void 
  9298 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9299 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9300 ;; Auto vars:     Size  Location     Type
  9301 ;;		None
  9302 ;; Return value:  Size  Location     Type
  9303 ;;                  1    wreg      enum E97
  9304 ;; Registers used:
  9305 ;;		wreg
  9306 ;; Tracked objects:
  9307 ;;		On entry : 0/0
  9308 ;;		On exit  : 0/0
  9309 ;;		Unchanged: 0/0
  9310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9311 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9314 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9315 ;;Total ram usage:        1 bytes
  9316 ;; Hardware stack levels used:    1
  9317 ;; This function calls:
  9318 ;;		Nothing
  9319 ;; This function is called by:
  9320 ;;		_I2C_Open
  9321 ;;		_I2C_DO_TX
  9322 ;;		_I2C_DO_RX
  9323 ;;		_I2C_DO_TX_EMPTY
  9324 ;;		_I2C_DO_ADDRESS_NACK
  9325 ;;		_I2C_DO_RX_EMPTY
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329                           
  9330                           ;psect for function _I2C_CallbackReturnReset
  9331  00F7                     _I2C_CallbackReturnReset:
  9332  00F7                     l2468:	
  9333                           ;incstack = 0
  9334                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  9335                           
  9336                           
  9337                           ;i2c_master.c: 527: return I2C_RESET_LINK;
  9338  00F7  3005               	movlw	5
  9339  00F8                     l613:
  9340  00F8  0008               	return
  9341  00F9                     __end_of_I2C_CallbackReturnReset:
  9342                           
  9343                           	psect	text41
  9344  00F5                     __ptext41:	
  9345 ;; *************** function _I2C_CallbackReturnStop *****************
  9346 ;; Defined at:
  9347 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;  funPtr          1    9[COMMON] PTR void 
  9350 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9351 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9352 ;; Auto vars:     Size  Location     Type
  9353 ;;		None
  9354 ;; Return value:  Size  Location     Type
  9355 ;;                  1    wreg      enum E97
  9356 ;; Registers used:
  9357 ;;		wreg
  9358 ;; Tracked objects:
  9359 ;;		On entry : 0/0
  9360 ;;		On exit  : 0/0
  9361 ;;		Unchanged: 0/0
  9362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9363 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9366 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9367 ;;Total ram usage:        1 bytes
  9368 ;; Hardware stack levels used:    1
  9369 ;; This function calls:
  9370 ;;		Nothing
  9371 ;; This function is called by:
  9372 ;;		_I2C_Open
  9373 ;;		_I2C_SetCallback
  9374 ;;		_I2C_DO_TX
  9375 ;;		_I2C_DO_RX
  9376 ;;		_I2C_DO_TX_EMPTY
  9377 ;;		_I2C_DO_ADDRESS_NACK
  9378 ;;		_I2C_DO_RX_EMPTY
  9379 ;; This function uses a non-reentrant model
  9380 ;;
  9381                           
  9382                           
  9383                           ;psect for function _I2C_CallbackReturnStop
  9384  00F5                     _I2C_CallbackReturnStop:
  9385  00F5                     l2464:	
  9386                           ;incstack = 0
  9387                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  9388                           
  9389                           
  9390                           ;i2c_master.c: 522: return I2C_STOP;
  9391  00F5  3001               	movlw	1
  9392  00F6                     l610:
  9393  00F6  0008               	return
  9394  00F7                     __end_of_I2C_CallbackReturnStop:
  9395                           
  9396                           	psect	text42
  9397  028C                     __ptext42:	
  9398 ;; *************** function _rdBlkRegCompleteHandler *****************
  9399 ;; Defined at:
  9400 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  9401 ;; Parameters:    Size  Location     Type
  9402 ;;  ptr             1    9[COMMON] PTR void 
  9403 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9404 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9405 ;; Auto vars:     Size  Location     Type
  9406 ;;		None
  9407 ;; Return value:  Size  Location     Type
  9408 ;;                  1    wreg      enum E97
  9409 ;; Registers used:
  9410 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9411 ;; Tracked objects:
  9412 ;;		On entry : 0/0
  9413 ;;		On exit  : 0/0
  9414 ;;		Unchanged: 0/0
  9415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9416 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9419 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9420 ;;Total ram usage:        1 bytes
  9421 ;; Hardware stack levels used:    1
  9422 ;; Hardware stack levels required when called:    2
  9423 ;; This function calls:
  9424 ;;		_I2C_SetBuffer
  9425 ;;		_I2C_SetDataCompleteCallback
  9426 ;; This function is called by:
  9427 ;;		_I2C_ReadDataBlock
  9428 ;;		_I2C_DO_TX
  9429 ;;		_I2C_DO_RX
  9430 ;;		_I2C_DO_TX_EMPTY
  9431 ;;		_I2C_DO_ADDRESS_NACK
  9432 ;;		_I2C_DO_RX_EMPTY
  9433 ;; This function uses a non-reentrant model
  9434 ;;
  9435                           
  9436                           
  9437                           ;psect for function _rdBlkRegCompleteHandler
  9438  028C                     _rdBlkRegCompleteHandler:
  9439  028C                     l2406:	
  9440                           ;incstack = 0
  9441                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  9442                           
  9443                           
  9444                           ;i2c_master_example.c: 172: I2C_SetBuffer(((i2c_buffer_t *)ptr)->data,((i2c_buffer_t*)pt
      +                          r)->len);
  9445  028C  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  9446  028D  0086               	movwf	6
  9447  028E  0187               	clrf	7
  9448  028F  3F40               	moviw [0]fsr1
  9449  0290  00F0               	movwf	I2C_SetBuffer@bufferSize
  9450  0291  3F41               	moviw [1]fsr1
  9451  0292  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  9452  0293  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  9453  0294  3E02               	addlw	2
  9454  0295  0086               	movwf	6
  9455  0296  0187               	clrf	7
  9456  0297  0801               	movf	1,w
  9457  0298  3181  21EC  3182   	fcall	_I2C_SetBuffer
  9458                           
  9459                           ;i2c_master_example.c: 173: I2C_SetDataCompleteCallback((0),(0));
  9460  029B  3000               	movlw	0
  9461  029C  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  9462  029D  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  9463  029E  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  9464  029F  3181  21A7  3182   	fcall	_I2C_SetDataCompleteCallback
  9465  02A2                     l2408:
  9466                           
  9467                           ;i2c_master_example.c: 174: return I2C_RESTART_READ;
  9468  02A2  3002               	movlw	2
  9469  02A3                     l102:
  9470  02A3  0008               	return
  9471  02A4                     __end_of_rdBlkRegCompleteHandler:
  9472                           
  9473                           	psect	text43
  9474  022F                     __ptext43:	
  9475 ;; *************** function _wr1RegCompleteHandler *****************
  9476 ;; Defined at:
  9477 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  9478 ;; Parameters:    Size  Location     Type
  9479 ;;  ptr             1    9[COMMON] PTR void 
  9480 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9481 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9482 ;; Auto vars:     Size  Location     Type
  9483 ;;		None
  9484 ;; Return value:  Size  Location     Type
  9485 ;;                  1    wreg      enum E97
  9486 ;; Registers used:
  9487 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9488 ;; Tracked objects:
  9489 ;;		On entry : 0/0
  9490 ;;		On exit  : 0/0
  9491 ;;		Unchanged: 0/0
  9492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9493 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9496 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9497 ;;Total ram usage:        1 bytes
  9498 ;; Hardware stack levels used:    1
  9499 ;; Hardware stack levels required when called:    2
  9500 ;; This function calls:
  9501 ;;		_I2C_SetBuffer
  9502 ;;		_I2C_SetDataCompleteCallback
  9503 ;; This function is called by:
  9504 ;;		_I2C_Write1ByteRegister
  9505 ;;		_I2C_DO_TX
  9506 ;;		_I2C_DO_RX
  9507 ;;		_I2C_DO_TX_EMPTY
  9508 ;;		_I2C_DO_ADDRESS_NACK
  9509 ;;		_I2C_DO_RX_EMPTY
  9510 ;; This function uses a non-reentrant model
  9511 ;;
  9512                           
  9513                           
  9514                           ;psect for function _wr1RegCompleteHandler
  9515  022F                     _wr1RegCompleteHandler:
  9516  022F                     l2390:	
  9517                           ;incstack = 0
  9518                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9519                           
  9520                           
  9521                           ;i2c_master_example.c: 158: I2C_SetBuffer(ptr,1);
  9522  022F  3001               	movlw	1
  9523  0230  00F0               	movwf	I2C_SetBuffer@bufferSize
  9524  0231  3000               	movlw	0
  9525  0232  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  9526  0233  0879               	movf	wr1RegCompleteHandler@ptr,w
  9527  0234  3181  21EC  3182   	fcall	_I2C_SetBuffer
  9528  0237                     l2392:
  9529                           
  9530                           ;i2c_master_example.c: 159: I2C_SetDataCompleteCallback((0),(0));
  9531  0237  3000               	movlw	0
  9532  0238  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  9533  0239  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  9534  023A  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  9535  023B  3181  21A7  3182   	fcall	_I2C_SetDataCompleteCallback
  9536  023E                     l2394:
  9537                           
  9538                           ;i2c_master_example.c: 160: return I2C_CONTINUE;
  9539  023E  3004               	movlw	4
  9540  023F                     l96:
  9541  023F  0008               	return
  9542  0240                     __end_of_wr1RegCompleteHandler:
  9543                           
  9544                           	psect	text44
  9545  021E                     __ptext44:	
  9546 ;; *************** function _rd2RegCompleteHandler *****************
  9547 ;; Defined at:
  9548 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  9549 ;; Parameters:    Size  Location     Type
  9550 ;;  ptr             1    9[COMMON] PTR void 
  9551 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9552 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9553 ;; Auto vars:     Size  Location     Type
  9554 ;;		None
  9555 ;; Return value:  Size  Location     Type
  9556 ;;                  1    wreg      enum E97
  9557 ;; Registers used:
  9558 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9559 ;; Tracked objects:
  9560 ;;		On entry : 0/0
  9561 ;;		On exit  : 0/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9564 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9567 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9568 ;;Total ram usage:        1 bytes
  9569 ;; Hardware stack levels used:    1
  9570 ;; Hardware stack levels required when called:    2
  9571 ;; This function calls:
  9572 ;;		_I2C_SetBuffer
  9573 ;;		_I2C_SetDataCompleteCallback
  9574 ;; This function is called by:
  9575 ;;		_I2C_Read2ByteRegister
  9576 ;;		_I2C_DO_TX
  9577 ;;		_I2C_DO_RX
  9578 ;;		_I2C_DO_TX_EMPTY
  9579 ;;		_I2C_DO_ADDRESS_NACK
  9580 ;;		_I2C_DO_RX_EMPTY
  9581 ;; This function uses a non-reentrant model
  9582 ;;
  9583                           
  9584                           
  9585                           ;psect for function _rd2RegCompleteHandler
  9586  021E                     _rd2RegCompleteHandler:
  9587  021E                     l2382:	
  9588                           ;incstack = 0
  9589                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9590                           
  9591                           
  9592                           ;i2c_master_example.c: 151: I2C_SetBuffer(ptr,2);
  9593  021E  3002               	movlw	2
  9594  021F  00F0               	movwf	I2C_SetBuffer@bufferSize
  9595  0220  3000               	movlw	0
  9596  0221  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  9597  0222  0879               	movf	rd2RegCompleteHandler@ptr,w
  9598  0223  3181  21EC  3182   	fcall	_I2C_SetBuffer
  9599  0226                     l2384:
  9600                           
  9601                           ;i2c_master_example.c: 152: I2C_SetDataCompleteCallback((0),(0));
  9602  0226  3000               	movlw	0
  9603  0227  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  9604  0228  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  9605  0229  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  9606  022A  3181  21A7  3182   	fcall	_I2C_SetDataCompleteCallback
  9607  022D                     l2386:
  9608                           
  9609                           ;i2c_master_example.c: 153: return I2C_RESTART_READ;
  9610  022D  3002               	movlw	2
  9611  022E                     l93:
  9612  022E  0008               	return
  9613  022F                     __end_of_rd2RegCompleteHandler:
  9614                           
  9615                           	psect	text45
  9616  020D                     __ptext45:	
  9617 ;; *************** function _rd1RegCompleteHandler *****************
  9618 ;; Defined at:
  9619 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;  ptr             1    9[COMMON] PTR void 
  9622 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9623 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9624 ;; Auto vars:     Size  Location     Type
  9625 ;;		None
  9626 ;; Return value:  Size  Location     Type
  9627 ;;                  1    wreg      enum E97
  9628 ;; Registers used:
  9629 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9630 ;; Tracked objects:
  9631 ;;		On entry : 0/0
  9632 ;;		On exit  : 0/0
  9633 ;;		Unchanged: 0/0
  9634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9635 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9638 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9639 ;;Total ram usage:        1 bytes
  9640 ;; Hardware stack levels used:    1
  9641 ;; Hardware stack levels required when called:    2
  9642 ;; This function calls:
  9643 ;;		_I2C_SetBuffer
  9644 ;;		_I2C_SetDataCompleteCallback
  9645 ;; This function is called by:
  9646 ;;		_I2C_Read1ByteRegister
  9647 ;;		_I2C_DO_TX
  9648 ;;		_I2C_DO_RX
  9649 ;;		_I2C_DO_TX_EMPTY
  9650 ;;		_I2C_DO_ADDRESS_NACK
  9651 ;;		_I2C_DO_RX_EMPTY
  9652 ;; This function uses a non-reentrant model
  9653 ;;
  9654                           
  9655                           
  9656                           ;psect for function _rd1RegCompleteHandler
  9657  020D                     _rd1RegCompleteHandler:
  9658  020D                     l2374:	
  9659                           ;incstack = 0
  9660                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9661                           
  9662                           
  9663                           ;i2c_master_example.c: 144: I2C_SetBuffer(ptr,1);
  9664  020D  3001               	movlw	1
  9665  020E  00F0               	movwf	I2C_SetBuffer@bufferSize
  9666  020F  3000               	movlw	0
  9667  0210  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  9668  0211  0879               	movf	rd1RegCompleteHandler@ptr,w
  9669  0212  3181  21EC  3182   	fcall	_I2C_SetBuffer
  9670  0215                     l2376:
  9671                           
  9672                           ;i2c_master_example.c: 145: I2C_SetDataCompleteCallback((0),(0));
  9673  0215  3000               	movlw	0
  9674  0216  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  9675  0217  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  9676  0218  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  9677  0219  3181  21A7  3182   	fcall	_I2C_SetDataCompleteCallback
  9678  021C                     l2378:
  9679                           
  9680                           ;i2c_master_example.c: 146: return I2C_RESTART_READ;
  9681  021C  3002               	movlw	2
  9682  021D                     l90:
  9683  021D  0008               	return
  9684  021E                     __end_of_rd1RegCompleteHandler:
  9685                           
  9686                           	psect	text46
  9687  01FC                     __ptext46:	
  9688 ;; *************** function _wr2RegCompleteHandler *****************
  9689 ;; Defined at:
  9690 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  9691 ;; Parameters:    Size  Location     Type
  9692 ;;  ptr             1    9[COMMON] PTR void 
  9693 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9694 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;		None
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  1    wreg      enum E97
  9699 ;; Registers used:
  9700 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9706 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9709 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9710 ;;Total ram usage:        1 bytes
  9711 ;; Hardware stack levels used:    1
  9712 ;; Hardware stack levels required when called:    2
  9713 ;; This function calls:
  9714 ;;		_I2C_SetBuffer
  9715 ;;		_I2C_SetDataCompleteCallback
  9716 ;; This function is called by:
  9717 ;;		_I2C_Write2ByteRegister
  9718 ;;		_I2C_DO_TX
  9719 ;;		_I2C_DO_RX
  9720 ;;		_I2C_DO_TX_EMPTY
  9721 ;;		_I2C_DO_ADDRESS_NACK
  9722 ;;		_I2C_DO_RX_EMPTY
  9723 ;; This function uses a non-reentrant model
  9724 ;;
  9725                           
  9726                           
  9727                           ;psect for function _wr2RegCompleteHandler
  9728  01FC                     _wr2RegCompleteHandler:
  9729  01FC                     l2398:	
  9730                           ;incstack = 0
  9731                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9732                           
  9733                           
  9734                           ;i2c_master_example.c: 165: I2C_SetBuffer(ptr,2);
  9735  01FC  3002               	movlw	2
  9736  01FD  00F0               	movwf	I2C_SetBuffer@bufferSize
  9737  01FE  3000               	movlw	0
  9738  01FF  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  9739  0200  0879               	movf	wr2RegCompleteHandler@ptr,w
  9740  0201  3181  21EC  3181   	fcall	_I2C_SetBuffer
  9741  0204                     l2400:
  9742                           
  9743                           ;i2c_master_example.c: 166: I2C_SetDataCompleteCallback((0),(0));
  9744  0204  3000               	movlw	0
  9745  0205  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  9746  0206  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  9747  0207  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  9748  0208  3181  21A7  3181   	fcall	_I2C_SetDataCompleteCallback
  9749  020B                     l2402:
  9750                           
  9751                           ;i2c_master_example.c: 167: return I2C_CONTINUE;
  9752  020B  3004               	movlw	4
  9753  020C                     l99:
  9754  020C  0008               	return
  9755  020D                     __end_of_wr2RegCompleteHandler:
  9756                           
  9757                           	psect	text47
  9758  01A7                     __ptext47:	
  9759 ;; *************** function _I2C_SetDataCompleteCallback *****************
  9760 ;; Defined at:
  9761 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
  9762 ;; Parameters:    Size  Location     Type
  9763 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
  9764 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  9765 ;;		 -> Absolute function(1), rd1RegCompleteHandler(1), 
  9766 ;;  ptr             1    7[COMMON] PTR void 
  9767 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9768 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9769 ;; Auto vars:     Size  Location     Type
  9770 ;;		None
  9771 ;; Return value:  Size  Location     Type
  9772 ;;                  1    wreg      void 
  9773 ;; Registers used:
  9774 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9775 ;; Tracked objects:
  9776 ;;		On entry : 0/0
  9777 ;;		On exit  : 0/0
  9778 ;;		Unchanged: 0/0
  9779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9780 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9782 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9783 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9784 ;;Total ram usage:        4 bytes
  9785 ;; Hardware stack levels used:    1
  9786 ;; Hardware stack levels required when called:    1
  9787 ;; This function calls:
  9788 ;;		_I2C_SetCallback
  9789 ;; This function is called by:
  9790 ;;		_rd1RegCompleteHandler
  9791 ;;		_rd2RegCompleteHandler
  9792 ;;		_wr1RegCompleteHandler
  9793 ;;		_wr2RegCompleteHandler
  9794 ;;		_rdBlkRegCompleteHandler
  9795 ;;		_I2C_Read1ByteRegister
  9796 ;;		_I2C_Read2ByteRegister
  9797 ;;		_I2C_Write1ByteRegister
  9798 ;;		_I2C_Write2ByteRegister
  9799 ;;		_I2C_ReadDataBlock
  9800 ;; This function uses a non-reentrant model
  9801 ;;
  9802                           
  9803                           
  9804                           ;psect for function _I2C_SetDataCompleteCallback
  9805  01A7                     _I2C_SetDataCompleteCallback:
  9806  01A7                     l2360:	
  9807                           ;incstack = 0
  9808                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9809                           
  9810                           
  9811                           ;i2c_master.c: 275: I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  9812  01A7  0876               	movf	I2C_SetDataCompleteCallback@cb+1,w
  9813  01A8  00F1               	movwf	I2C_SetCallback@cb+1
  9814  01A9  0875               	movf	I2C_SetDataCompleteCallback@cb,w
  9815  01AA  00F0               	movwf	I2C_SetCallback@cb
  9816  01AB  0877               	movf	I2C_SetDataCompleteCallback@ptr,w
  9817  01AC  00F8               	movwf	??_I2C_SetDataCompleteCallback
  9818  01AD  0878               	movf	??_I2C_SetDataCompleteCallback,w
  9819  01AE  00F2               	movwf	I2C_SetCallback@ptr
  9820  01AF  3000               	movlw	0
  9821  01B0  3183  235A  3181   	fcall	_I2C_SetCallback
  9822  01B3                     l484:
  9823  01B3  0008               	return
  9824  01B4                     __end_of_I2C_SetDataCompleteCallback:
  9825                           
  9826                           	psect	text48
  9827  035A                     __ptext48:	
  9828 ;; *************** function _I2C_SetCallback *****************
  9829 ;; Defined at:
  9830 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;  idx             1    wreg     enum E12008
  9833 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  9834 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  9835 ;;		 -> Absolute function(1), rd1RegCompleteHandler(1), 
  9836 ;;  ptr             1    2[COMMON] PTR void 
  9837 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9838 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
  9839 ;; Auto vars:     Size  Location     Type
  9840 ;;  idx             1    4[COMMON] enum E12008
  9841 ;; Return value:  Size  Location     Type
  9842 ;;                  1    wreg      void 
  9843 ;; Registers used:
  9844 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9845 ;; Tracked objects:
  9846 ;;		On entry : 0/0
  9847 ;;		On exit  : 0/0
  9848 ;;		Unchanged: 0/0
  9849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9850 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9852 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9853 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9854 ;;Total ram usage:        5 bytes
  9855 ;; Hardware stack levels used:    1
  9856 ;; This function calls:
  9857 ;;		Nothing
  9858 ;; This function is called by:
  9859 ;;		_I2C_SetDataCompleteCallback
  9860 ;;		_I2C_SetWriteCollisionCallback
  9861 ;;		_I2C_SetAddressNackCallback
  9862 ;;		_I2C_SetDataNackCallback
  9863 ;;		_I2C_SetTimeoutCallback
  9864 ;; This function uses a non-reentrant model
  9865 ;;
  9866                           
  9867                           
  9868                           ;psect for function _I2C_SetCallback
  9869  035A                     _I2C_SetCallback:
  9870                           
  9871                           ;incstack = 0
  9872                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  9873                           ;I2C_SetCallback@idx stored from wreg
  9874  035A  00F4               	movwf	I2C_SetCallback@idx
  9875  035B                     l2354:
  9876                           
  9877                           ;i2c_master.c: 300: if(cb)
  9878  035B  0870               	movf	I2C_SetCallback@cb,w
  9879  035C  0471               	iorwf	I2C_SetCallback@cb+1,w
  9880  035D  1903               	btfsc	3,2
  9881  035E  2B60               	goto	u791
  9882  035F  2B61               	goto	u790
  9883  0360                     u791:
  9884  0360  2B72               	goto	l2358
  9885  0361                     u790:
  9886  0361                     l2356:
  9887                           
  9888                           ;i2c_master.c: 301: {;i2c_master.c: 302: I2C_Status.callbackTable[idx] = cb;
  9889  0361  3574               	lslf	I2C_SetCallback@idx,w
  9890  0362  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  9891  0363  0086               	movwf	6
  9892  0364  0187               	clrf	7
  9893  0365  0870               	movf	I2C_SetCallback@cb,w
  9894  0366  3FC0               	movwi [0]fsr1
  9895  0367  0871               	movf	I2C_SetCallback@cb+1,w
  9896  0368  3FC1               	movwi [1]fsr1
  9897                           
  9898                           ;i2c_master.c: 303: I2C_Status.callbackPayload[idx] = ptr;
  9899  0369  0872               	movf	I2C_SetCallback@ptr,w
  9900  036A  00F3               	movwf	??_I2C_SetCallback
  9901  036B  0874               	movf	I2C_SetCallback@idx,w
  9902  036C  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  9903  036D  0086               	movwf	6
  9904  036E  0187               	clrf	7
  9905  036F  0873               	movf	??_I2C_SetCallback,w
  9906  0370  0081               	movwf	1
  9907                           
  9908                           ;i2c_master.c: 304: }
  9909  0371  2B7F               	goto	l501
  9910  0372                     l2358:
  9911                           
  9912                           ;i2c_master.c: 305: else;i2c_master.c: 306: {;i2c_master.c: 307: I2C_Status.callbackTabl
      +                          e[idx] = I2C_CallbackReturnStop;
  9913  0372  3574               	lslf	I2C_SetCallback@idx,w
  9914  0373  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  9915  0374  0086               	movwf	6
  9916  0375  0187               	clrf	7
  9917  0376  30F5               	movlw	low _I2C_CallbackReturnStop
  9918  0377  3FC0               	movwi [0]fsr1
  9919  0378  3000               	movlw	high _I2C_CallbackReturnStop
  9920  0379  3FC1               	movwi [1]fsr1
  9921                           
  9922                           ;i2c_master.c: 308: I2C_Status.callbackPayload[idx] = (0);
  9923  037A  0874               	movf	I2C_SetCallback@idx,w
  9924  037B  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  9925  037C  0086               	movwf	6
  9926  037D  0187               	clrf	7
  9927  037E  0181               	clrf	1
  9928  037F                     l501:
  9929  037F  0008               	return
  9930  0380                     __end_of_I2C_SetCallback:
  9931                           
  9932                           	psect	text49
  9933  01EC                     __ptext49:	
  9934 ;; *************** function _I2C_SetBuffer *****************
  9935 ;; Defined at:
  9936 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
  9937 ;; Parameters:    Size  Location     Type
  9938 ;;  buffer          1    wreg     PTR void 
  9939 ;;		 -> lcd_cmd@tbuf(2), lcd_data@tbuf(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), 
  9940 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
  9941 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
  9942 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
  9943 ;;  bufferSize      2    0[COMMON] unsigned int 
  9944 ;; Auto vars:     Size  Location     Type
  9945 ;;  buffer          1    3[COMMON] PTR void 
  9946 ;;		 -> lcd_cmd@tbuf(2), lcd_data@tbuf(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), 
  9947 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
  9948 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
  9949 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
  9950 ;; Return value:  Size  Location     Type
  9951 ;;                  1    wreg      void 
  9952 ;; Registers used:
  9953 ;;		wreg
  9954 ;; Tracked objects:
  9955 ;;		On entry : 0/0
  9956 ;;		On exit  : 0/0
  9957 ;;		Unchanged: 0/0
  9958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9959 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9960 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9961 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9962 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9963 ;;Total ram usage:        4 bytes
  9964 ;; Hardware stack levels used:    1
  9965 ;; This function calls:
  9966 ;;		Nothing
  9967 ;; This function is called by:
  9968 ;;		_rd1RegCompleteHandler
  9969 ;;		_rd2RegCompleteHandler
  9970 ;;		_wr1RegCompleteHandler
  9971 ;;		_wr2RegCompleteHandler
  9972 ;;		_rdBlkRegCompleteHandler
  9973 ;;		_lcd_data
  9974 ;;		_lcd_cmd
  9975 ;;		_I2C_Read1ByteRegister
  9976 ;;		_I2C_Read2ByteRegister
  9977 ;;		_I2C_Write1ByteRegister
  9978 ;;		_I2C_Write2ByteRegister
  9979 ;;		_I2C_WriteNBytes
  9980 ;;		_I2C_ReadNBytes
  9981 ;;		_I2C_ReadDataBlock
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           
  9986                           ;psect for function _I2C_SetBuffer
  9987  01EC                     _I2C_SetBuffer:
  9988                           
  9989                           ;incstack = 0
  9990                           ; Regs used in _I2C_SetBuffer: [wreg]
  9991                           ;I2C_SetBuffer@buffer stored from wreg
  9992  01EC  00F3               	movwf	I2C_SetBuffer@buffer
  9993  01ED                     l2362:
  9994                           
  9995                           ;i2c_master.c: 265: if(I2C_Status.bufferFree)
  9996  01ED  0020               	movlb	0	; select bank0
  9997  01EE  1DBC               	btfss	_I2C_Status+28,3
  9998  01EF  29F1               	goto	u801
  9999  01F0  29F2               	goto	u800
 10000  01F1                     u801:
 10001  01F1  29FB               	goto	l481
 10002  01F2                     u800:
 10003  01F2                     l2364:
 10004                           
 10005                           ;i2c_master.c: 266: {;i2c_master.c: 267: I2C_Status.data_ptr = buffer;
 10006  01F2  0873               	movf	I2C_SetBuffer@buffer,w
 10007  01F3  00F2               	movwf	??_I2C_SetBuffer
 10008  01F4  0872               	movf	??_I2C_SetBuffer,w
 10009  01F5  00B7               	movwf	low ((_I2C_Status| 0+23))
 10010                           
 10011                           ;i2c_master.c: 268: I2C_Status.data_length = bufferSize;
 10012  01F6  0871               	movf	I2C_SetBuffer@bufferSize+1,w
 10013  01F7  00B9               	movwf	_I2C_Status+25
 10014  01F8  0870               	movf	I2C_SetBuffer@bufferSize,w
 10015  01F9  00B8               	movwf	_I2C_Status+24
 10016  01FA                     l2366:
 10017                           
 10018                           ;i2c_master.c: 269: I2C_Status.bufferFree = 0;
 10019  01FA  11BC               	bcf	_I2C_Status+28,3
 10020  01FB                     l481:
 10021  01FB  0008               	return
 10022  01FC                     __end_of_I2C_SetBuffer:
 10023                           
 10024                           	psect	text50
 10025  0108                     __ptext50:	
 10026 ;; *************** function _I2C_MasterStop *****************
 10027 ;; Defined at:
 10028 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 10029 ;; Parameters:    Size  Location     Type
 10030 ;;		None
 10031 ;; Auto vars:     Size  Location     Type
 10032 ;;		None
 10033 ;; Return value:  Size  Location     Type
 10034 ;;                  1    wreg      void 
 10035 ;; Registers used:
 10036 ;;		None
 10037 ;; Tracked objects:
 10038 ;;		On entry : 0/0
 10039 ;;		On exit  : 0/0
 10040 ;;		Unchanged: 0/0
 10041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10046 ;;Total ram usage:        0 bytes
 10047 ;; Hardware stack levels used:    1
 10048 ;; This function calls:
 10049 ;;		Nothing
 10050 ;; This function is called by:
 10051 ;;		_I2C_DO_SEND_STOP
 10052 ;; This function uses a non-reentrant model
 10053 ;;
 10054                           
 10055                           
 10056                           ;psect for function _I2C_MasterStop
 10057  0108                     _I2C_MasterStop:
 10058  0108                     l2370:	
 10059                           ;incstack = 0
 10060                           ; Regs used in _I2C_MasterStop: []
 10061                           
 10062                           
 10063                           ;i2c_master.c: 595: SSP1CON2bits.PEN = 1;
 10064  0108  0024               	movlb	4	; select bank4
 10065  0109  1516               	bsf	22,2	;volatile
 10066  010A                     l647:
 10067  010A  0008               	return
 10068  010B                     __end_of_I2C_MasterStop:
 10069                           
 10070                           	psect	text51
 10071  0105                     __ptext51:	
 10072 ;; *************** function _I2C_MasterEnableRestart *****************
 10073 ;; Defined at:
 10074 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 10075 ;; Parameters:    Size  Location     Type
 10076 ;;		None
 10077 ;; Auto vars:     Size  Location     Type
 10078 ;;		None
 10079 ;; Return value:  Size  Location     Type
 10080 ;;                  1    wreg      void 
 10081 ;; Registers used:
 10082 ;;		None
 10083 ;; Tracked objects:
 10084 ;;		On entry : 0/0
 10085 ;;		On exit  : 0/0
 10086 ;;		Unchanged: 0/0
 10087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10092 ;;Total ram usage:        0 bytes
 10093 ;; Hardware stack levels used:    1
 10094 ;; This function calls:
 10095 ;;		Nothing
 10096 ;; This function is called by:
 10097 ;;		_I2C_DO_SEND_RESTART_READ
 10098 ;;		_I2C_DO_SEND_RESTART_WRITE
 10099 ;;		_I2C_DO_SEND_RESTART
 10100 ;;		_I2C_DO_RX_EMPTY
 10101 ;; This function uses a non-reentrant model
 10102 ;;
 10103                           
 10104                           
 10105                           ;psect for function _I2C_MasterEnableRestart
 10106  0105                     _I2C_MasterEnableRestart:
 10107  0105                     l2368:	
 10108                           ;incstack = 0
 10109                           ; Regs used in _I2C_MasterEnableRestart: []
 10110                           
 10111                           
 10112                           ;i2c_master.c: 575: SSP1CON2bits.RSEN = 1;
 10113  0105  0024               	movlb	4	; select bank4
 10114  0106  1496               	bsf	22,1	;volatile
 10115  0107                     l635:
 10116  0107  0008               	return
 10117  0108                     __end_of_I2C_MasterEnableRestart:
 10118                           
 10119                           	psect	text52
 10120  0102                     __ptext52:	
 10121 ;; *************** function _I2C_MasterStart *****************
 10122 ;; Defined at:
 10123 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 10124 ;; Parameters:    Size  Location     Type
 10125 ;;		None
 10126 ;; Auto vars:     Size  Location     Type
 10127 ;;		None
 10128 ;; Return value:  Size  Location     Type
 10129 ;;                  1    wreg      void 
 10130 ;; Registers used:
 10131 ;;		None
 10132 ;; Tracked objects:
 10133 ;;		On entry : 0/0
 10134 ;;		On exit  : 0/0
 10135 ;;		Unchanged: 0/0
 10136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10141 ;;Total ram usage:        0 bytes
 10142 ;; Hardware stack levels used:    1
 10143 ;; This function calls:
 10144 ;;		Nothing
 10145 ;; This function is called by:
 10146 ;;		_I2C_MasterOperation
 10147 ;; This function uses a non-reentrant model
 10148 ;;
 10149                           
 10150                           
 10151                           ;psect for function _I2C_MasterStart
 10152  0102                     _I2C_MasterStart:
 10153  0102                     l2624:	
 10154                           ;incstack = 0
 10155                           ; Regs used in _I2C_MasterStart: []
 10156                           
 10157                           
 10158                           ;i2c_master.c: 590: SSP1CON2bits.SEN = 1;
 10159  0102  0024               	movlb	4	; select bank4
 10160  0103  1416               	bsf	22,0	;volatile
 10161  0104                     l644:
 10162  0104  0008               	return
 10163  0105                     __end_of_I2C_MasterStart:
 10164                           
 10165                           	psect	text53
 10166  02BC                     __ptext53:	
 10167 ;; *************** function _I2C_Close *****************
 10168 ;; Defined at:
 10169 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;		None
 10172 ;; Auto vars:     Size  Location     Type
 10173 ;;  returnValue     1    1[COMMON] enum E92
 10174 ;; Return value:  Size  Location     Type
 10175 ;;                  1    wreg      enum E92
 10176 ;; Registers used:
 10177 ;;		wreg, status,2, status,0, pclath, cstack
 10178 ;; Tracked objects:
 10179 ;;		On entry : 0/0
 10180 ;;		On exit  : 0/0
 10181 ;;		Unchanged: 0/0
 10182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10185 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10186 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10187 ;;Total ram usage:        2 bytes
 10188 ;; Hardware stack levels used:    1
 10189 ;; Hardware stack levels required when called:    1
 10190 ;; This function calls:
 10191 ;;		_I2C_MasterClearIrq
 10192 ;;		_I2C_MasterClose
 10193 ;;		_I2C_MasterDisableIrq
 10194 ;; This function is called by:
 10195 ;;		_lcd_data
 10196 ;;		_lcd_cmd
 10197 ;;		_I2C_Read1ByteRegister
 10198 ;;		_I2C_Read2ByteRegister
 10199 ;;		_I2C_Write1ByteRegister
 10200 ;;		_I2C_Write2ByteRegister
 10201 ;;		_I2C_WriteNBytes
 10202 ;;		_I2C_ReadNBytes
 10203 ;;		_I2C_ReadDataBlock
 10204 ;; This function uses a non-reentrant model
 10205 ;;
 10206                           
 10207                           
 10208                           ;psect for function _I2C_Close
 10209  02BC                     _I2C_Close:
 10210  02BC                     l2706:	
 10211                           ;incstack = 0
 10212                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
 10213                           
 10214                           
 10215                           ;i2c_master.c: 211: i2c_error_t returnValue = I2C_BUSY;
 10216  02BC  01F1               	clrf	I2C_Close@returnValue
 10217  02BD  0AF1               	incf	I2C_Close@returnValue,f
 10218                           
 10219                           ;i2c_master.c: 212: if(!I2C_Status.busy)
 10220  02BE  0020               	movlb	0	; select bank0
 10221  02BF  18BC               	btfsc	_I2C_Status+28,1
 10222  02C0  2AC2               	goto	u921
 10223  02C1  2AC3               	goto	u920
 10224  02C2                     u921:
 10225  02C2  2AD6               	goto	l2720
 10226  02C3                     u920:
 10227  02C3                     l2708:
 10228                           
 10229                           ;i2c_master.c: 213: {;i2c_master.c: 214: I2C_Status.inUse = 0;
 10230  02C3  113C               	bcf	_I2C_Status+28,2
 10231  02C4                     l2710:
 10232                           
 10233                           ;i2c_master.c: 215: I2C_Status.address = 0xff;
 10234  02C4  30FF               	movlw	255
 10235  02C5  00F0               	movwf	??_I2C_Close
 10236  02C6  0870               	movf	??_I2C_Close,w
 10237  02C7  00B6               	movwf	_I2C_Status+22
 10238  02C8                     l2712:
 10239                           
 10240                           ;i2c_master.c: 216: I2C_MasterClearIrq();
 10241  02C8  3180  20F9  3182   	fcall	_I2C_MasterClearIrq
 10242  02CB                     l2714:
 10243                           
 10244                           ;i2c_master.c: 217: I2C_MasterDisableIrq();
 10245  02CB  3180  20FF  3182   	fcall	_I2C_MasterDisableIrq
 10246  02CE                     l2716:
 10247                           
 10248                           ;i2c_master.c: 218: I2C_MasterClose();
 10249  02CE  3180  20FC  3182   	fcall	_I2C_MasterClose
 10250  02D1                     l2718:
 10251                           
 10252                           ;i2c_master.c: 219: returnValue = I2C_Status.error;
 10253  02D1  0020               	movlb	0	; select bank0
 10254  02D2  083B               	movf	_I2C_Status+27,w
 10255  02D3  00F0               	movwf	??_I2C_Close
 10256  02D4  0870               	movf	??_I2C_Close,w
 10257  02D5  00F1               	movwf	I2C_Close@returnValue
 10258  02D6                     l2720:
 10259                           
 10260                           ;i2c_master.c: 220: };i2c_master.c: 221: return returnValue;
 10261  02D6  0871               	movf	I2C_Close@returnValue,w
 10262  02D7                     l462:
 10263  02D7  0008               	return
 10264  02D8                     __end_of_I2C_Close:
 10265                           
 10266                           	psect	text54
 10267  00FF                     __ptext54:	
 10268 ;; *************** function _I2C_MasterDisableIrq *****************
 10269 ;; Defined at:
 10270 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 10271 ;; Parameters:    Size  Location     Type
 10272 ;;		None
 10273 ;; Auto vars:     Size  Location     Type
 10274 ;;		None
 10275 ;; Return value:  Size  Location     Type
 10276 ;;                  1    wreg      void 
 10277 ;; Registers used:
 10278 ;;		None
 10279 ;; Tracked objects:
 10280 ;;		On entry : 0/0
 10281 ;;		On exit  : 0/0
 10282 ;;		Unchanged: 0/0
 10283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10284 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10285 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10286 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10287 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10288 ;;Total ram usage:        0 bytes
 10289 ;; Hardware stack levels used:    1
 10290 ;; This function calls:
 10291 ;;		Nothing
 10292 ;; This function is called by:
 10293 ;;		_I2C_Close
 10294 ;;		_I2C_SetTimeOut
 10295 ;; This function uses a non-reentrant model
 10296 ;;
 10297                           
 10298                           
 10299                           ;psect for function _I2C_MasterDisableIrq
 10300  00FF                     _I2C_MasterDisableIrq:
 10301  00FF                     l2646:	
 10302                           ;incstack = 0
 10303                           ; Regs used in _I2C_MasterDisableIrq: []
 10304                           
 10305                           
 10306                           ;i2c_master.c: 637: PIE1bits.SSP1IE = 0;
 10307  00FF  0021               	movlb	1	; select bank1
 10308  0100  1191               	bcf	17,3	;volatile
 10309  0101                     l671:
 10310  0101  0008               	return
 10311  0102                     __end_of_I2C_MasterDisableIrq:
 10312                           
 10313                           	psect	text55
 10314  00FC                     __ptext55:	
 10315 ;; *************** function _I2C_MasterClose *****************
 10316 ;; Defined at:
 10317 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 10318 ;; Parameters:    Size  Location     Type
 10319 ;;		None
 10320 ;; Auto vars:     Size  Location     Type
 10321 ;;		None
 10322 ;; Return value:  Size  Location     Type
 10323 ;;                  1    wreg      void 
 10324 ;; Registers used:
 10325 ;;		None
 10326 ;; Tracked objects:
 10327 ;;		On entry : 0/0
 10328 ;;		On exit  : 0/0
 10329 ;;		Unchanged: 0/0
 10330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10335 ;;Total ram usage:        0 bytes
 10336 ;; Hardware stack levels used:    1
 10337 ;; This function calls:
 10338 ;;		Nothing
 10339 ;; This function is called by:
 10340 ;;		_I2C_Close
 10341 ;; This function uses a non-reentrant model
 10342 ;;
 10343                           
 10344                           
 10345                           ;psect for function _I2C_MasterClose
 10346  00FC                     _I2C_MasterClose:
 10347  00FC                     l2648:	
 10348                           ;incstack = 0
 10349                           ; Regs used in _I2C_MasterClose: []
 10350                           
 10351                           
 10352                           ;i2c_master.c: 560: SSP1CON1bits.SSPEN = 0;
 10353  00FC  0024               	movlb	4	; select bank4
 10354  00FD  1295               	bcf	21,5	;volatile
 10355  00FE                     l626:
 10356  00FE  0008               	return
 10357  00FF                     __end_of_I2C_MasterClose:
 10358                           
 10359                           	psect	text56
 10360  00F9                     __ptext56:	
 10361 ;; *************** function _I2C_MasterClearIrq *****************
 10362 ;; Defined at:
 10363 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 10364 ;; Parameters:    Size  Location     Type
 10365 ;;		None
 10366 ;; Auto vars:     Size  Location     Type
 10367 ;;		None
 10368 ;; Return value:  Size  Location     Type
 10369 ;;                  1    wreg      void 
 10370 ;; Registers used:
 10371 ;;		None
 10372 ;; Tracked objects:
 10373 ;;		On entry : 0/0
 10374 ;;		On exit  : 0/0
 10375 ;;		Unchanged: 0/0
 10376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10381 ;;Total ram usage:        0 bytes
 10382 ;; Hardware stack levels used:    1
 10383 ;; This function calls:
 10384 ;;		Nothing
 10385 ;; This function is called by:
 10386 ;;		_I2C_Open
 10387 ;;		_I2C_Close
 10388 ;;		_I2C_MasterFsm
 10389 ;; This function uses a non-reentrant model
 10390 ;;
 10391                           
 10392                           
 10393                           ;psect for function _I2C_MasterClearIrq
 10394  00F9                     _I2C_MasterClearIrq:
 10395  00F9                     l2472:	
 10396                           ;incstack = 0
 10397                           ; Regs used in _I2C_MasterClearIrq: []
 10398                           
 10399                           
 10400                           ;i2c_master.c: 642: PIR1bits.SSP1IF = 0;
 10401  00F9  0020               	movlb	0	; select bank0
 10402  00FA  1191               	bcf	17,3	;volatile
 10403  00FB                     l674:
 10404  00FB  0008               	return
 10405  00FC                     __end_of_I2C_MasterClearIrq:
 10406                           
 10407                           	psect	text57
 10408  0276                     __ptext57:	
 10409 ;; *************** function _SYSTEM_Initialize *****************
 10410 ;; Defined at:
 10411 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;		None
 10414 ;; Auto vars:     Size  Location     Type
 10415 ;;		None
 10416 ;; Return value:  Size  Location     Type
 10417 ;;                  1    wreg      void 
 10418 ;; Registers used:
 10419 ;;		wreg, status,2, status,0, pclath, cstack
 10420 ;; Tracked objects:
 10421 ;;		On entry : 0/0
 10422 ;;		On exit  : 0/0
 10423 ;;		Unchanged: 0/0
 10424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10429 ;;Total ram usage:        0 bytes
 10430 ;; Hardware stack levels used:    1
 10431 ;; Hardware stack levels required when called:    1
 10432 ;; This function calls:
 10433 ;;		_COG3_Initialize
 10434 ;;		_I2C_Initialize
 10435 ;;		_OSCILLATOR_Initialize
 10436 ;;		_PIN_MANAGER_Initialize
 10437 ;;		_PWM1_Initialize
 10438 ;;		_TMR2_Initialize
 10439 ;;		_WDT_Initialize
 10440 ;; This function is called by:
 10441 ;;		_main
 10442 ;; This function uses a non-reentrant model
 10443 ;;
 10444                           
 10445                           
 10446                           ;psect for function _SYSTEM_Initialize
 10447  0276                     _SYSTEM_Initialize:
 10448  0276                     l2934:	
 10449                           ;incstack = 0
 10450                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10451                           
 10452                           
 10453                           ;mcc.c: 53: I2C_Initialize();
 10454  0276  3181  2187  3182   	fcall	_I2C_Initialize
 10455                           
 10456                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 10457  0279  3185  2560  3182   	fcall	_PIN_MANAGER_Initialize
 10458                           
 10459                           ;mcc.c: 55: OSCILLATOR_Initialize();
 10460  027C  3181  219B  3182   	fcall	_OSCILLATOR_Initialize
 10461                           
 10462                           ;mcc.c: 56: WDT_Initialize();
 10463  027F  3181  2114  3182   	fcall	_WDT_Initialize
 10464                           
 10465                           ;mcc.c: 57: PWM1_Initialize();
 10466  0282  3181  2191  3182   	fcall	_PWM1_Initialize
 10467                           
 10468                           ;mcc.c: 58: COG3_Initialize();
 10469  0285  3183  2316  3182   	fcall	_COG3_Initialize
 10470                           
 10471                           ;mcc.c: 59: TMR2_Initialize();
 10472  0288  3181  21C1  3182   	fcall	_TMR2_Initialize
 10473  028B                     l219:
 10474  028B  0008               	return
 10475  028C                     __end_of_SYSTEM_Initialize:
 10476                           
 10477                           	psect	text58
 10478  0114                     __ptext58:	
 10479 ;; *************** function _WDT_Initialize *****************
 10480 ;; Defined at:
 10481 ;;		line 78 in file "mcc_generated_files/mcc.c"
 10482 ;; Parameters:    Size  Location     Type
 10483 ;;		None
 10484 ;; Auto vars:     Size  Location     Type
 10485 ;;		None
 10486 ;; Return value:  Size  Location     Type
 10487 ;;                  1    wreg      void 
 10488 ;; Registers used:
 10489 ;;		wreg
 10490 ;; Tracked objects:
 10491 ;;		On entry : 0/0
 10492 ;;		On exit  : 0/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10499 ;;Total ram usage:        0 bytes
 10500 ;; Hardware stack levels used:    1
 10501 ;; This function calls:
 10502 ;;		Nothing
 10503 ;; This function is called by:
 10504 ;;		_SYSTEM_Initialize
 10505 ;; This function uses a non-reentrant model
 10506 ;;
 10507                           
 10508                           
 10509                           ;psect for function _WDT_Initialize
 10510  0114                     _WDT_Initialize:
 10511  0114                     l2786:	
 10512                           ;incstack = 0
 10513                           ; Regs used in _WDT_Initialize: [wreg]
 10514                           
 10515                           
 10516                           ;mcc.c: 81: WDTCON = 0x16;
 10517  0114  3016               	movlw	22
 10518  0115  0021               	movlb	1	; select bank1
 10519  0116  0099               	movwf	25	;volatile
 10520  0117                     l228:
 10521  0117  0008               	return
 10522  0118                     __end_of_WDT_Initialize:
 10523                           
 10524                           	psect	text59
 10525  01C1                     __ptext59:	
 10526 ;; *************** function _TMR2_Initialize *****************
 10527 ;; Defined at:
 10528 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 10529 ;; Parameters:    Size  Location     Type
 10530 ;;		None
 10531 ;; Auto vars:     Size  Location     Type
 10532 ;;		None
 10533 ;; Return value:  Size  Location     Type
 10534 ;;                  1    wreg      void 
 10535 ;; Registers used:
 10536 ;;		wreg, status,2
 10537 ;; Tracked objects:
 10538 ;;		On entry : 0/0
 10539 ;;		On exit  : 0/0
 10540 ;;		Unchanged: 0/0
 10541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10546 ;;Total ram usage:        0 bytes
 10547 ;; Hardware stack levels used:    1
 10548 ;; This function calls:
 10549 ;;		Nothing
 10550 ;; This function is called by:
 10551 ;;		_SYSTEM_Initialize
 10552 ;; This function uses a non-reentrant model
 10553 ;;
 10554                           
 10555                           
 10556                           ;psect for function _TMR2_Initialize
 10557  01C1                     _TMR2_Initialize:
 10558  01C1                     l2728:	
 10559                           ;incstack = 0
 10560                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 10561                           
 10562                           
 10563                           ;tmr2.c: 67: T2CLKCON = 0x01;
 10564  01C1  3001               	movlw	1
 10565  01C2  0029               	movlb	9	; select bank9
 10566  01C3  0097               	movwf	23	;volatile
 10567  01C4                     l2730:
 10568                           
 10569                           ;tmr2.c: 70: T2HLT = 0x00;
 10570  01C4  0196               	clrf	22	;volatile
 10571  01C5                     l2732:
 10572                           
 10573                           ;tmr2.c: 73: T2RST = 0x00;
 10574  01C5  0198               	clrf	24	;volatile
 10575                           
 10576                           ;tmr2.c: 76: T2PR = 0xFF;
 10577  01C6  30FF               	movlw	255
 10578  01C7  0094               	movwf	20	;volatile
 10579  01C8                     l2734:
 10580                           
 10581                           ;tmr2.c: 79: T2TMR = 0x00;
 10582  01C8  0193               	clrf	19	;volatile
 10583  01C9                     l2736:
 10584                           
 10585                           ;tmr2.c: 82: PIR1bits.TMR2IF = 0;
 10586  01C9  0020               	movlb	0	; select bank0
 10587  01CA  1091               	bcf	17,1	;volatile
 10588  01CB                     l2738:
 10589                           
 10590                           ;tmr2.c: 85: T2CON = 0xB0;
 10591  01CB  30B0               	movlw	176
 10592  01CC  0029               	movlb	9	; select bank9
 10593  01CD  0095               	movwf	21	;volatile
 10594  01CE                     l150:
 10595  01CE  0008               	return
 10596  01CF                     __end_of_TMR2_Initialize:
 10597                           
 10598                           	psect	text60
 10599  0191                     __ptext60:	
 10600 ;; *************** function _PWM1_Initialize *****************
 10601 ;; Defined at:
 10602 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 10603 ;; Parameters:    Size  Location     Type
 10604 ;;		None
 10605 ;; Auto vars:     Size  Location     Type
 10606 ;;		None
 10607 ;; Return value:  Size  Location     Type
 10608 ;;                  1    wreg      void 
 10609 ;; Registers used:
 10610 ;;		wreg, status,2, status,0
 10611 ;; Tracked objects:
 10612 ;;		On entry : 0/0
 10613 ;;		On exit  : 0/0
 10614 ;;		Unchanged: 0/0
 10615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10620 ;;Total ram usage:        0 bytes
 10621 ;; Hardware stack levels used:    1
 10622 ;; This function calls:
 10623 ;;		Nothing
 10624 ;; This function is called by:
 10625 ;;		_SYSTEM_Initialize
 10626 ;; This function uses a non-reentrant model
 10627 ;;
 10628                           
 10629                           
 10630                           ;psect for function _PWM1_Initialize
 10631  0191                     _PWM1_Initialize:
 10632  0191                     l2724:	
 10633                           ;incstack = 0
 10634                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 10635                           
 10636                           
 10637                           ;pwm1.c: 69: CCP1CON = 0x8F;
 10638  0191  308F               	movlw	143
 10639  0192  0025               	movlb	5	; select bank5
 10640  0193  0093               	movwf	19	;volatile
 10641                           
 10642                           ;pwm1.c: 72: CCPR1H = 0x01;
 10643  0194  3001               	movlw	1
 10644  0195  0092               	movwf	18	;volatile
 10645                           
 10646                           ;pwm1.c: 75: CCPR1L = 0xFF;
 10647  0196  30FF               	movlw	255
 10648  0197  0091               	movwf	17	;volatile
 10649  0198                     l2726:
 10650                           
 10651                           ;pwm1.c: 78: CCPTMRS1bits.C1TSEL = 0x0;
 10652  0198  30FC               	movlw	-4
 10653  0199  059E               	andwf	30,f	;volatile
 10654  019A                     l115:
 10655  019A  0008               	return
 10656  019B                     __end_of_PWM1_Initialize:
 10657                           
 10658                           	psect	text61
 10659  0560                     __ptext61:	
 10660 ;; *************** function _PIN_MANAGER_Initialize *****************
 10661 ;; Defined at:
 10662 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10663 ;; Parameters:    Size  Location     Type
 10664 ;;		None
 10665 ;; Auto vars:     Size  Location     Type
 10666 ;;		None
 10667 ;; Return value:  Size  Location     Type
 10668 ;;                  1    wreg      void 
 10669 ;; Registers used:
 10670 ;;		wreg, status,2
 10671 ;; Tracked objects:
 10672 ;;		On entry : 0/0
 10673 ;;		On exit  : 0/0
 10674 ;;		Unchanged: 0/0
 10675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10680 ;;Total ram usage:        0 bytes
 10681 ;; Hardware stack levels used:    1
 10682 ;; This function calls:
 10683 ;;		Nothing
 10684 ;; This function is called by:
 10685 ;;		_SYSTEM_Initialize
 10686 ;; This function uses a non-reentrant model
 10687 ;;
 10688                           
 10689                           
 10690                           ;psect for function _PIN_MANAGER_Initialize
 10691  0560                     _PIN_MANAGER_Initialize:
 10692  0560                     l2748:	
 10693                           ;incstack = 0
 10694                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10695                           
 10696                           
 10697                           ;pin_manager.c: 60: LATA = 0x00;
 10698  0560  0022               	movlb	2	; select bank2
 10699  0561  018C               	clrf	12	;volatile
 10700                           
 10701                           ;pin_manager.c: 61: LATB = 0x00;
 10702  0562  018D               	clrf	13	;volatile
 10703                           
 10704                           ;pin_manager.c: 62: LATC = 0x00;
 10705  0563  018E               	clrf	14	;volatile
 10706  0564                     l2750:
 10707                           
 10708                           ;pin_manager.c: 67: TRISE = 0x08;
 10709  0564  3008               	movlw	8
 10710  0565  0021               	movlb	1	; select bank1
 10711  0566  0090               	movwf	16	;volatile
 10712  0567                     l2752:
 10713                           
 10714                           ;pin_manager.c: 68: TRISA = 0x3F;
 10715  0567  303F               	movlw	63
 10716  0568  008C               	movwf	12	;volatile
 10717  0569                     l2754:
 10718                           
 10719                           ;pin_manager.c: 69: TRISB = 0xED;
 10720  0569  30ED               	movlw	237
 10721  056A  008D               	movwf	13	;volatile
 10722  056B                     l2756:
 10723                           
 10724                           ;pin_manager.c: 70: TRISC = 0xFC;
 10725  056B  30FC               	movlw	252
 10726  056C  008E               	movwf	14	;volatile
 10727  056D                     l2758:
 10728                           
 10729                           ;pin_manager.c: 75: ANSELC = 0xE4;
 10730  056D  30E4               	movlw	228
 10731  056E  0023               	movlb	3	; select bank3
 10732  056F  008E               	movwf	14	;volatile
 10733  0570                     l2760:
 10734                           
 10735                           ;pin_manager.c: 76: ANSELB = 0x0D;
 10736  0570  300D               	movlw	13
 10737  0571  008D               	movwf	13	;volatile
 10738  0572                     l2762:
 10739                           
 10740                           ;pin_manager.c: 77: ANSELA = 0x3F;
 10741  0572  303F               	movlw	63
 10742  0573  008C               	movwf	12	;volatile
 10743  0574                     l2764:
 10744                           
 10745                           ;pin_manager.c: 82: WPUE = 0x00;
 10746  0574  0024               	movlb	4	; select bank4
 10747  0575  0190               	clrf	16	;volatile
 10748  0576                     l2766:
 10749                           
 10750                           ;pin_manager.c: 83: WPUB = 0x00;
 10751  0576  018D               	clrf	13	;volatile
 10752  0577                     l2768:
 10753                           
 10754                           ;pin_manager.c: 84: WPUA = 0x00;
 10755  0577  018C               	clrf	12	;volatile
 10756  0578                     l2770:
 10757                           
 10758                           ;pin_manager.c: 85: WPUC = 0x00;
 10759  0578  018E               	clrf	14	;volatile
 10760  0579                     l2772:
 10761                           
 10762                           ;pin_manager.c: 86: OPTION_REGbits.nWPUEN = 1;
 10763  0579  0021               	movlb	1	; select bank1
 10764  057A  1797               	bsf	23,7	;volatile
 10765  057B                     l2774:
 10766                           
 10767                           ;pin_manager.c: 91: ODCONA = 0x00;
 10768  057B  0025               	movlb	5	; select bank5
 10769  057C  018C               	clrf	12	;volatile
 10770  057D                     l2776:
 10771                           
 10772                           ;pin_manager.c: 92: ODCONB = 0x00;
 10773  057D  018D               	clrf	13	;volatile
 10774  057E                     l2778:
 10775                           
 10776                           ;pin_manager.c: 93: ODCONC = 0x00;
 10777  057E  018E               	clrf	14	;volatile
 10778                           
 10779                           ;pin_manager.c: 98: SLRCONA = 0xFF;
 10780  057F  30FF               	movlw	255
 10781  0580  0026               	movlb	6	; select bank6
 10782  0581  008C               	movwf	12	;volatile
 10783                           
 10784                           ;pin_manager.c: 99: SLRCONB = 0xFF;
 10785  0582  30FF               	movlw	255
 10786  0583  008D               	movwf	13	;volatile
 10787                           
 10788                           ;pin_manager.c: 100: SLRCONC = 0xFF;
 10789  0584  30FF               	movlw	255
 10790  0585  008E               	movwf	14	;volatile
 10791                           
 10792                           ;pin_manager.c: 105: INLVLA = 0x3F;
 10793  0586  303F               	movlw	63
 10794  0587  0027               	movlb	7	; select bank7
 10795  0588  008C               	movwf	12	;volatile
 10796                           
 10797                           ;pin_manager.c: 106: INLVLB = 0xF0;
 10798  0589  30F0               	movlw	240
 10799  058A  008D               	movwf	13	;volatile
 10800                           
 10801                           ;pin_manager.c: 107: INLVLC = 0xFF;
 10802  058B  30FF               	movlw	255
 10803  058C  008E               	movwf	14	;volatile
 10804                           
 10805                           ;pin_manager.c: 116: RA7PPS = 0x0E;
 10806  058D  300E               	movlw	14
 10807  058E  003D               	movlb	29	; select bank29
 10808  058F  0097               	movwf	23	;volatile
 10809                           
 10810                           ;pin_manager.c: 117: RC0PPS = 0x10;
 10811  0590  3010               	movlw	16
 10812  0591  00A0               	movwf	32	;volatile
 10813                           
 10814                           ;pin_manager.c: 118: SSPDATPPS = 0x14;
 10815  0592  3014               	movlw	20
 10816  0593  003C               	movlb	28	; select bank28
 10817  0594  00BB               	movwf	59	;volatile
 10818                           
 10819                           ;pin_manager.c: 119: RC3PPS = 0x21;
 10820  0595  3021               	movlw	33
 10821  0596  003D               	movlb	29	; select bank29
 10822  0597  00A3               	movwf	35	;volatile
 10823                           
 10824                           ;pin_manager.c: 120: RC1PPS = 0x0F;
 10825  0598  300F               	movlw	15
 10826  0599  00A1               	movwf	33	;volatile
 10827                           
 10828                           ;pin_manager.c: 121: RC4PPS = 0x22;
 10829  059A  3022               	movlw	34
 10830  059B  00A4               	movwf	36	;volatile
 10831                           
 10832                           ;pin_manager.c: 122: RA6PPS = 0x0D;
 10833  059C  300D               	movlw	13
 10834  059D  0096               	movwf	22	;volatile
 10835                           
 10836                           ;pin_manager.c: 123: SSPCLKPPS = 0x13;
 10837  059E  3013               	movlw	19
 10838  059F  003C               	movlb	28	; select bank28
 10839  05A0  00BA               	movwf	58	;volatile
 10840  05A1                     l295:
 10841  05A1  0008               	return
 10842  05A2                     __end_of_PIN_MANAGER_Initialize:
 10843                           
 10844                           	psect	text62
 10845  019B                     __ptext62:	
 10846 ;; *************** function _OSCILLATOR_Initialize *****************
 10847 ;; Defined at:
 10848 ;;		line 62 in file "mcc_generated_files/mcc.c"
 10849 ;; Parameters:    Size  Location     Type
 10850 ;;		None
 10851 ;; Auto vars:     Size  Location     Type
 10852 ;;		None
 10853 ;; Return value:  Size  Location     Type
 10854 ;;                  1    wreg      void 
 10855 ;; Registers used:
 10856 ;;		wreg, status,2
 10857 ;; Tracked objects:
 10858 ;;		On entry : 0/0
 10859 ;;		On exit  : 0/0
 10860 ;;		Unchanged: 0/0
 10861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10864 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10865 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10866 ;;Total ram usage:        0 bytes
 10867 ;; Hardware stack levels used:    1
 10868 ;; This function calls:
 10869 ;;		Nothing
 10870 ;; This function is called by:
 10871 ;;		_SYSTEM_Initialize
 10872 ;; This function uses a non-reentrant model
 10873 ;;
 10874                           
 10875                           
 10876                           ;psect for function _OSCILLATOR_Initialize
 10877  019B                     _OSCILLATOR_Initialize:
 10878  019B                     l2780:	
 10879                           ;incstack = 0
 10880                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10881                           
 10882                           
 10883                           ;mcc.c: 65: OSCCON = 0x70;
 10884  019B  3070               	movlw	112
 10885  019C  0021               	movlb	1	; select bank1
 10886  019D  009B               	movwf	27	;volatile
 10887                           
 10888                           ;mcc.c: 67: OSCSTAT = 0x80;
 10889  019E  3080               	movlw	128
 10890  019F  009C               	movwf	28	;volatile
 10891  01A0                     l2782:
 10892                           
 10893                           ;mcc.c: 69: OSCTUNE = 0x00;
 10894  01A0  019A               	clrf	26	;volatile
 10895  01A1                     l2784:
 10896                           
 10897                           ;mcc.c: 71: BORCON = 0x00;
 10898  01A1  019D               	clrf	29	;volatile
 10899  01A2                     l222:	
 10900                           ;mcc.c: 74: {
 10901                           
 10902  01A2  1F1C               	btfss	28,6	;volatile
 10903  01A3  29A5               	goto	u931
 10904  01A4  29A6               	goto	u930
 10905  01A5                     u931:
 10906  01A5  29A2               	goto	l222
 10907  01A6                     u930:
 10908  01A6                     l225:
 10909  01A6  0008               	return
 10910  01A7                     __end_of_OSCILLATOR_Initialize:
 10911                           
 10912                           	psect	text63
 10913  0187                     __ptext63:	
 10914 ;; *************** function _I2C_Initialize *****************
 10915 ;; Defined at:
 10916 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
 10917 ;; Parameters:    Size  Location     Type
 10918 ;;		None
 10919 ;; Auto vars:     Size  Location     Type
 10920 ;;		None
 10921 ;; Return value:  Size  Location     Type
 10922 ;;                  1    wreg      void 
 10923 ;; Registers used:
 10924 ;;		wreg, status,2
 10925 ;; Tracked objects:
 10926 ;;		On entry : 0/0
 10927 ;;		On exit  : 0/0
 10928 ;;		Unchanged: 0/0
 10929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10934 ;;Total ram usage:        0 bytes
 10935 ;; Hardware stack levels used:    1
 10936 ;; This function calls:
 10937 ;;		Nothing
 10938 ;; This function is called by:
 10939 ;;		_SYSTEM_Initialize
 10940 ;; This function uses a non-reentrant model
 10941 ;;
 10942                           
 10943                           
 10944                           ;psect for function _I2C_Initialize
 10945  0187                     _I2C_Initialize:
 10946  0187                     l2740:	
 10947                           ;incstack = 0
 10948                           ; Regs used in _I2C_Initialize: [wreg+status,2]
 10949                           
 10950                           
 10951                           ;i2c_master.c: 169: SSP1STAT = 0x80;
 10952  0187  3080               	movlw	128
 10953  0188  0024               	movlb	4	; select bank4
 10954  0189  0094               	movwf	20	;volatile
 10955                           
 10956                           ;i2c_master.c: 170: SSP1CON1 = 0x08;
 10957  018A  3008               	movlw	8
 10958  018B  0095               	movwf	21	;volatile
 10959  018C                     l2742:
 10960                           
 10961                           ;i2c_master.c: 171: SSP1CON2 = 0x00;
 10962  018C  0196               	clrf	22	;volatile
 10963  018D                     l2744:
 10964                           
 10965                           ;i2c_master.c: 172: SSP1ADD = 0x4F;
 10966  018D  304F               	movlw	79
 10967  018E  0092               	movwf	18	;volatile
 10968  018F                     l2746:
 10969                           
 10970                           ;i2c_master.c: 173: SSP1CON1bits.SSPEN = 0;
 10971  018F  1295               	bcf	21,5	;volatile
 10972  0190                     l454:
 10973  0190  0008               	return
 10974  0191                     __end_of_I2C_Initialize:
 10975                           
 10976                           	psect	text64
 10977  0316                     __ptext64:	
 10978 ;; *************** function _COG3_Initialize *****************
 10979 ;; Defined at:
 10980 ;;		line 58 in file "mcc_generated_files/cog3.c"
 10981 ;; Parameters:    Size  Location     Type
 10982 ;;		None
 10983 ;; Auto vars:     Size  Location     Type
 10984 ;;		None
 10985 ;; Return value:  Size  Location     Type
 10986 ;;                  1    wreg      void 
 10987 ;; Registers used:
 10988 ;;		wreg, status,2
 10989 ;; Tracked objects:
 10990 ;;		On entry : 0/0
 10991 ;;		On exit  : 0/0
 10992 ;;		Unchanged: 0/0
 10993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10998 ;;Total ram usage:        0 bytes
 10999 ;; Hardware stack levels used:    1
 11000 ;; This function calls:
 11001 ;;		Nothing
 11002 ;; This function is called by:
 11003 ;;		_SYSTEM_Initialize
 11004 ;; This function uses a non-reentrant model
 11005 ;;
 11006                           
 11007                           
 11008                           ;psect for function _COG3_Initialize
 11009  0316                     _COG3_Initialize:
 11010  0316                     l2788:	
 11011                           ;incstack = 0
 11012                           ; Regs used in _COG3_Initialize: [wreg+status,2]
 11013                           
 11014                           
 11015                           ;cog3.c: 61: COG3CON0 = 0x00;
 11016  0316  0030               	movlb	16	; select bank16
 11017  0317  0193               	clrf	19	;volatile
 11018  0318                     l2790:
 11019                           
 11020                           ;cog3.c: 65: COG3CON1 = 0x05;
 11021  0318  3005               	movlw	5
 11022  0319  0094               	movwf	20	;volatile
 11023  031A                     l2792:
 11024                           
 11025                           ;cog3.c: 68: COG3RIS0 = 0x20;
 11026  031A  3020               	movlw	32
 11027  031B  0095               	movwf	21	;volatile
 11028                           
 11029                           ;cog3.c: 71: COG3RIS1 = 0x00;
 11030  031C  0196               	clrf	22	;volatile
 11031  031D                     l2794:
 11032                           
 11033                           ;cog3.c: 74: COG3RSIM0 = 0x20;
 11034  031D  3020               	movlw	32
 11035  031E  0097               	movwf	23	;volatile
 11036  031F                     l2796:
 11037                           
 11038                           ;cog3.c: 77: COG3RSIM1 = 0x00;
 11039  031F  0198               	clrf	24	;volatile
 11040                           
 11041                           ;cog3.c: 80: COG3FIS0 = 0x20;
 11042  0320  3020               	movlw	32
 11043  0321  0099               	movwf	25	;volatile
 11044  0322                     l2798:
 11045                           
 11046                           ;cog3.c: 83: COG3FIS1 = 0x00;
 11047  0322  019A               	clrf	26	;volatile
 11048  0323                     l2800:
 11049                           
 11050                           ;cog3.c: 86: COG3FSIM0 = 0x20;
 11051  0323  3020               	movlw	32
 11052  0324  009B               	movwf	27	;volatile
 11053                           
 11054                           ;cog3.c: 89: COG3FSIM1 = 0x00;
 11055  0325  019C               	clrf	28	;volatile
 11056  0326                     l2802:
 11057                           
 11058                           ;cog3.c: 92: COG3ASD0 = 0x14;
 11059  0326  3014               	movlw	20
 11060  0327  009D               	movwf	29	;volatile
 11061  0328                     l2804:
 11062                           
 11063                           ;cog3.c: 95: COG3ASD1 = 0x00;
 11064  0328  019E               	clrf	30	;volatile
 11065                           
 11066                           ;cog3.c: 98: COG3STR = 0x0F;
 11067  0329  300F               	movlw	15
 11068  032A  009F               	movwf	31	;volatile
 11069                           
 11070                           ;cog3.c: 101: COG3DBR = 0x28;
 11071  032B  3028               	movlw	40
 11072  032C  0091               	movwf	17	;volatile
 11073                           
 11074                           ;cog3.c: 104: COG3DBF = 0x28;
 11075  032D  3028               	movlw	40
 11076  032E  0092               	movwf	18	;volatile
 11077  032F                     l2806:
 11078                           
 11079                           ;cog3.c: 107: COG3BLKR = 0x00;
 11080  032F  018F               	clrf	15	;volatile
 11081  0330                     l2808:
 11082                           
 11083                           ;cog3.c: 110: COG3BLKF = 0x00;
 11084  0330  0190               	clrf	16	;volatile
 11085  0331                     l2810:
 11086                           
 11087                           ;cog3.c: 113: COG3PHR = 0x00;
 11088  0331  018D               	clrf	13	;volatile
 11089  0332                     l2812:
 11090                           
 11091                           ;cog3.c: 116: COG3PHF = 0x00;
 11092  0332  018E               	clrf	14	;volatile
 11093                           
 11094                           ;cog3.c: 119: COG3CON0 = 0x82;
 11095  0333  3082               	movlw	130
 11096  0334  0093               	movwf	19	;volatile
 11097  0335                     l341:
 11098  0335  0008               	return
 11099  0336                     __end_of_COG3_Initialize:
 11100                           
 11101                           	psect	text65
 11102  0263                     __ptext65:	
 11103 ;; *************** function _PWM1_LoadDutyValue *****************
 11104 ;; Defined at:
 11105 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 11106 ;; Parameters:    Size  Location     Type
 11107 ;;  dutyValue       2    0[COMMON] unsigned int 
 11108 ;; Auto vars:     Size  Location     Type
 11109 ;;		None
 11110 ;; Return value:  Size  Location     Type
 11111 ;;                  1    wreg      void 
 11112 ;; Registers used:
 11113 ;;		wreg, status,2
 11114 ;; Tracked objects:
 11115 ;;		On entry : 0/0
 11116 ;;		On exit  : 0/0
 11117 ;;		Unchanged: 0/0
 11118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11119 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11123 ;;Total ram usage:        2 bytes
 11124 ;; Hardware stack levels used:    1
 11125 ;; This function calls:
 11126 ;;		Nothing
 11127 ;; This function is called by:
 11128 ;;		_main
 11129 ;; This function uses a non-reentrant model
 11130 ;;
 11131                           
 11132                           
 11133                           ;psect for function _PWM1_LoadDutyValue
 11134  0263                     _PWM1_LoadDutyValue:
 11135  0263                     l2920:	
 11136                           ;incstack = 0
 11137                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 11138                           
 11139                           
 11140                           ;pwm1.c: 84: dutyValue &= 0x03FF;
 11141  0263  30FF               	movlw	255
 11142  0264  05F0               	andwf	PWM1_LoadDutyValue@dutyValue,f
 11143  0265  3003               	movlw	3
 11144  0266  05F1               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
 11145  0267                     l2922:
 11146                           
 11147                           ;pwm1.c: 87: if(CCP1CONbits.FMT)
 11148  0267  0025               	movlb	5	; select bank5
 11149  0268  1E13               	btfss	19,4	;volatile
 11150  0269  2A6B               	goto	u1191
 11151  026A  2A6C               	goto	u1190
 11152  026B                     u1191:
 11153  026B  2A71               	goto	l2926
 11154  026C                     u1190:
 11155  026C                     l2924:
 11156                           
 11157                           ;pwm1.c: 88: {;pwm1.c: 89: dutyValue <<= 6;
 11158  026C  3006               	movlw	6
 11159  026D                     u1205:
 11160  026D  35F0               	lslf	PWM1_LoadDutyValue@dutyValue,f
 11161  026E  0DF1               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
 11162  026F  0B89               	decfsz	9,f
 11163  0270  2A6D               	goto	u1205
 11164  0271                     l2926:
 11165                           
 11166                           ;pwm1.c: 90: CCPR1H = dutyValue >> 8;
 11167  0271  0871               	movf	PWM1_LoadDutyValue@dutyValue+1,w
 11168  0272  0092               	movwf	18	;volatile
 11169  0273                     l2928:
 11170                           
 11171                           ;pwm1.c: 91: CCPR1L = dutyValue;
 11172  0273  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
 11173  0274  0091               	movwf	17	;volatile
 11174  0275                     l120:	
 11175                           ;pwm1.c: 92: }
 11176                           
 11177  0275  0008               	return
 11178  0276                     __end_of_PWM1_LoadDutyValue:
 11179  007E                     btemp	set	126	;btemp
 11180  007E                     wtemp0	set	126
 11181                           
 11182                           	psect	config
 11183                           
 11184                           ;Config register CONFIG1 @ 0x8007
 11185                           ;	Oscillator Selection Bits
 11186                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11187                           ;	Watchdog Timer Enable
 11188                           ;	WDTE = OFF, WDT disabled
 11189                           ;	Power-up Timer Enable
 11190                           ;	PWRTE = OFF, PWRT disabled
 11191                           ;	MCLR Pin Function Select
 11192                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11193                           ;	Flash Program Memory Code Protection
 11194                           ;	CP = OFF, Program memory code protection is disabled
 11195                           ;	Brown-out Reset Enable
 11196                           ;	BOREN = ON, Brown-out Reset enabled
 11197                           ;	Clock Out Enable
 11198                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11199                           ;	Internal/External Switchover Mode
 11200                           ;	IESO = ON, Internal/External Switchover Mode is enabled
 11201                           ;	Fail-Safe Clock Monitor Enable
 11202                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11203  8007                     	org	32775
 11204  8007  3FE4               	dw	16356
 11205                           
 11206                           ;Config register CONFIG2 @ 0x8008
 11207                           ;	Flash Memory Self-Write Protection
 11208                           ;	WRT = OFF, Write protection off
 11209                           ;	Peripheral Pin Select one-way control
 11210                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 11211                           ;	Zero-cross detect disable
 11212                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR
 11213                           ;	Phase Lock Loop enable
 11214                           ;	PLLEN = ON, 4x PLL is always enabled
 11215                           ;	Stack Overflow/Underflow Reset Enable
 11216                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11217                           ;	Brown-out Reset Voltage Selection
 11218                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11219                           ;	Low-Power Brown Out Reset
 11220                           ;	LPBOR = OFF, Low-Power BOR is disabled
 11221                           ;	Low-Voltage Programming Enable
 11222                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 11223  8008                     	org	32776
 11224  8008  1FFF               	dw	8191

Data Sizes:
    Strings     11
    Constant    98
    Data        32
    BSS         29
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      63
    BANK1            80      0      17
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$2017$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2022	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_DO_TX$2017	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), Absolute function(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2016	const PTR FTN()enum E11990 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S807$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 12
		 -> Msg2(BANK0[12]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_str@ptr	PTR const unsigned char  size(1) Largest target is 17
		 -> Msg2(BANK0[12]), Msg1(BANK1[17]), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> Absolute function(), rd1RegCompleteHandler(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> Absolute function(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> lcd_cmd@tbuf(BANK0[2]), lcd_data@tbuf(BANK0[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S807$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_cmd@tbuf(BANK0[2]), lcd_data@tbuf(BANK0[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_cmd@tbuf(BANK0[2]), lcd_data@tbuf(BANK0[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMMON[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S807$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S807$callbackTable	PTR FTN(PTR void ,)enum E97[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), Absolute function(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E97[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), rd2RegCompleteHandler(), Absolute function(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E11990[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 

    S88$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _main in BANK0

    _main->_sprintf
    _lcd_str->_lcd_data
    _lcd_init->_lcd_cmd
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  256863
                                             17 BANK0      2     2      0
                 _PWM1_LoadDutyValue
                  _SYSTEM_Initialize
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    21      4    3108
                                              0 BANK0     17    13      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              2     2      0   84633
                                              9 BANK0      2     2      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             4     4      0   84396
                                              5 BANK0      4     4      0
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0   84440
                                              9 BANK0      2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              4     4      0   84440
                                              5 BANK0      4     4      0
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             3     3      0      46
                                              0 COMMON     3     3      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0   82684
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  3     3      0   82684
                                             13 COMMON     1     1      0
                                              3 BANK0      2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C_Poller                                           0     0      0   82638
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        3     3      0   82638
                                              0 BANK0      3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      1     1      0   20637
                                             10 COMMON     1     1      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            3     3      0   20683
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            1     1      0   20637
                                             10 COMMON     1     1      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  1     1      0   20637
                                             10 COMMON     1     1      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    4070
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    4070
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    4092
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    4070
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    4070
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _I2C_SetDataCompleteCallback                          4     1      3    2478
                                              5 COMMON     4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetCallback                                     5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     2      2    1570
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              1     0      1     265
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            2     2      0      24
                                              0 COMMON     2     2      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _COG3_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _COG3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   2     0      2     242
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_LoadDutyValue
   _SYSTEM_Initialize
     _COG3_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _lcd_cmd
     _I2C_Close
       _I2C_MasterClearIrq
       _I2C_MasterClose
       _I2C_MasterDisableIrq
     _I2C_MasterWrite
       _I2C_MasterOperation
         _I2C_MasterStart
         _I2C_Poller
           _I2C_MasterFsm
             _I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_IDLE *
             _I2C_DO_RCEN *
               _I2C_MasterStartRx
             _I2C_DO_RESET *
             _I2C_DO_RX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_MasterGetRxData *
               _I2C_MasterSendAck *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_RX_ACK *
               _I2C_MasterSendAck
             _I2C_DO_RX_NACK_RESTART *
               _I2C_MasterSendNack
             _I2C_DO_RX_NACK_STOP *
               _I2C_MasterSendNack
             _I2C_DO_SEND_ADR_READ *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_ADR_WRITE *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_RESTART *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_RESTART_READ *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_RESTART_WRITE *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_STOP *
               _I2C_MasterStop
             _I2C_DO_TX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_MasterIsNack *
               _I2C_MasterSendTxData *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_TX_EMPTY *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_MasterSetIrq *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_MasterClearIrq *
             _I2C_MasterIsNack *
           _I2C_MasterWaitForEvent
     _I2C_Open
       _I2C_MasterClearIrq
       _I2C_MasterOpen
     _I2C_SetBuffer
   _lcd_init
     _lcd_cmd
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_DO_TX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetBuffer
   _lcd_str
     _lcd_data
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_DO_TX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetBuffer
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BIGRAM             3F0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITCOMMON            E      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
COMMON               E      E       E       3      100.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
STACK                0      0       0       4        0.0%
BANK0               50     13      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK0            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      11       8       21.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
ABS                  0      0      5E      13        0.0%
BITBANK4            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK5            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK6            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK7            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK8            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK9            50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9               50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK10           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITBANK11           50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
DATA                 0      0      5E      30        0.0%
BITBANK12           30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12              30      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK13           50      0       0      33        0.0%
BANK13              50      0       0      34        0.0%
BITBANK14           50      0       0      35        0.0%
BANK14              50      0       0      36        0.0%
BITBANK15           50      0       0      37        0.0%
BANK15              50      0       0      38        0.0%
BITBANK16           50      0       0      39        0.0%
BANK16              50      0       0      40        0.0%
BITBANK17           50      0       0      41        0.0%
BANK17              50      0       0      42        0.0%
BITBANK18           50      0       0      43        0.0%
BANK18              50      0       0      44        0.0%
BITBANK19           50      0       0      45        0.0%
BANK19              50      0       0      46        0.0%
BITBANK20           50      0       0      47        0.0%
BANK20              50      0       0      48        0.0%
BITBANK21           50      0       0      49        0.0%
BANK21              50      0       0      50        0.0%
BITBANK22           50      0       0      51        0.0%
BANK22              50      0       0      52        0.0%
BITBANK23           50      0       0      53        0.0%
BANK23              50      0       0      54        0.0%
BITBANK24           50      0       0      55        0.0%
BANK24              50      0       0      56        0.0%
BITBANK25           20      0       0      57        0.0%
BANK25              20      0       0      58        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Jun 30 14:23:34 2022

              ??_I2C_DO_SEND_ADR_READ 0070           __size_of_I2C_MasterSendNack 0004  
                         lcd_cmd@tbuf 0043                    __size_of_I2C_Close 001C  
                        lcd_data@data 0043                          lcd_data@tbuf 0044  
             ??_I2C_DO_SEND_ADR_WRITE 0071                                    l90 021D  
                                  l93 022E                                    l96 023F  
                                  l99 020C                   ___wmul@multiplicand 0072  
                 __size_of_I2C_Poller 000D                 ??_I2C_DO_SEND_RESTART 0070  
        __size_of_I2C_MasterOperation 001F                                   l102 02A3  
                                 l120 0275                                   l115 019A  
                                 l222 01A2                                   l150 01CE  
                                 l225 01A6         __size_of_I2C_MasterSendTxData 0005  
                                 l219 028B                                   l228 0117  
                                 l341 0335                                   l501 037F  
                                 l511 03FB                                   l520 017D  
                                 l610 00F6                                   l514 0129  
                                 l602 0359                                   l523 05D2  
                                 l507 01C0                                   l540 0520  
                                 l613 00F8                                   l517 0186  
                                 l454 0190                                   l462 02D7  
                                 l526 05F5                                   l295 05A1  
                                 l551 0175                                   l623 01DC  
                                 l632 0124                                   l536 05F4  
                                 l481 01FB                                   l641 010D  
                                 l457 0468                                   l626 00FE  
                                 l650 015C                                   l474 0156  
                                 l458 0469                                   l635 0107  
                                 l539 0500                                   l731 067B  
                                 l644 0104                                   l484 01B3  
                                 l468 02F6                                   l732 066B  
                                 l629 0110                                   l653 011F  
                                 l557 03A6                                   l581 0138  
                                 l590 0147                                   l671 0101  
                                 l647 010A                                   l575 012E  
                                 l727 064A                                   l656 011B  
                                 l584 013D                                   l680 015D  
                                 l593 014C                                   l674 00FB  
                                 l578 0133                                   l587 0142  
                                 l771 04E2                                   l596 0151  
                                 l684 0162                                   l677 0113  
                                 l774 055F                                   l758 03D0  
                                 l783 02BB                                   l880 0741  
                                 l891 07DC                                   l895 0301  
                                 l897 0315                                   _PR2 0494  
                                 u800 01F2                                   u801 01F1  
                                 u810 05AA                                   u811 05A9  
                                 u820 05EB                                   u900 02E7  
                                 u821 05EA                                   u901 02E6  
                                 u830 04FB                                   u910 0438  
                                 u831 04FA                                   u911 0437  
                                 u920 02C3                                   u840 0162  
                                 u921 02C2                                   u841 0161  
                                 u930 01A6                                   u850 03D9  
                                 u931 01A5                                   u851 03D8  
                                 u860 03E1                                   u940 04B6  
                                 u861 03E0                                   u941 04B5  
                                 u790 0361                                   u870 01C0  
                                 u950 04C9                                   u791 0360  
                                 u871 01BF                                   u951 04C8  
                                 u880 01D4                                   u960 04CF  
                                 u881 01D3                                   u961 04CE  
                                 u890 02E0                                   u970 04D5  
                                 u891 02DF                                   u971 04D4  
                                 u980 03BA                                   u981 03B9  
                                 u990 03CD                                   u991 03CC  
              _I2C_MasterWaitForEvent 015D                       _TMR2_Initialize 01C1  
                                 wreg 0009              ??_I2C_CallbackReturnStop 007A  
                        _I2C_DO_RESET 014D               ??_rd2RegCompleteHandler 007A  
                                l1167 04A5                                  l2400 0204  
                                l1177 042F                                  l2402 020B  
                                l2412 0157                                  l2420 012D  
                                l1348 0262                                  l3300 074C  
                                l2406 028C                                  l2510 05B3  
                                l2502 05AB                                  l2430 0139  
                                l3310 0769                                  l3302 0755  
                                l2360 01A7                                  l2408 02A2  
                                l2440 011C                                  l2416 0121  
                                l2520 05E0                                  l2424 012F  
                                l2432 013C                                  l2600 033D  
                                l3240 02A7                                  l3320 0789  
                                l3312 0773                                  l3304 0758  
                                l2370 0108                                  l2362 01ED  
                                l2354 035B                                  l2522 05EB  
                                l2506 05AF                                  l2530 04ED  
                                l2418 012A                                  l2426 0132  
                                l2450 0146                                  l2442 0148  
                                l2610 0345                                  l3242 02AE  
                                l3322 07B0                                  l3314 0779  
                                l3306 075E                                  l3330 07D8  
                                l3250 068D                                  l2364 01F2  
                                l2356 0361                                  l2372 0118  
                                l2436 010E                                  l2524 05F0  
                                l2516 05B7                                  l2532 04F1  
                                l2444 014B                                  l2604 0341  
                                l2620 03E1                                  l3244 02B3  
                                l3324 07B7                                  l3316 0780  
                                l3308 0765                                  l3260 06AB  
                                l3252 0694                                  l3340 0604  
                                l2710 02C4                                  l2366 01FA  
                                l2358 0372                                  l2374 020D  
                                l2382 021E                                  l2390 022F  
                                l2454 010B                                  l2462 0111  
                                l2518 05D4                                  l2542 0502  
                                l2534 04FB                                  l2622 03E6  
                                l2614 03D1                                  l2630 01B8  
                                l2702 0152                                  l3238 02A6  
                                l3326 07BB                                  l3318 0784  
                                l3262 06BC                                  l3270 06DB  
                                l3254 0699                                  l3246 0682  
                                l3350 0616                                  l3342 0606  
                                l3334 05F6                                  l2800 0323  
                                l2472 00F9                                  l2712 02C8  
                                l2720 02D6                                  l2624 0102  
                                l2368 0105                                  l2376 0215  
                                l2384 0226                                  l2392 0237  
                                l2464 00F5                                  l2552 050A  
                                l2536 04FE                                  l2528 04E3  
                                l2456 0134                                  l2448 0143  
                                l2616 03D4                                  l2632 01BB  
                                l2640 01D9                                  l3280 0706  
                                l3272 06F3                                  l3264 06CB  
                                l3256 069C                                  l3248 0687  
                                l3328 07C4                                  l3360 063C  
                                l3352 0623                                  l3344 0609  
                                l3336 05F9                                  l2810 0331  
                                l2802 0326                                  l2730 01C4  
                                l2714 02CB                                  l2706 02BC  
                                l2378 021C                                  l2386 022D  
                                l2394 023E                                  l2570 038A  
                                l2562 0380                                  l2474 0125  
                                l2482 017E                                  l2490 0176  
                                l2546 0506                                  l2554 016F  
                                l2458 0137                                  l2618 03D9  
                                l2626 01B4                                  l2650 02DA  
                                l2642 01DB                                  l2634 01CF  
                                l3282 070B                                  l3274 06FA  
                                l3266 06CF                                  l3258 06A8  
                                l3370 0663                                  l3362 0641  
                                l3354 0627                                  l3346 060D  
                                l3338 05FB                                  l2812 0332  
                                l2804 0328                                  l2740 0187  
                                l2724 0191                                  l2732 01C5  
                                l2716 02CE                                  l2708 02C3  
                                l2468 00F7                                  l2564 0383  
                                l2580 0390                                  l2476 0127  
                                l2484 0180                                  l2492 0178  
                                l2556 0171                                  l2628 01B5  
                                l2660 02EA                                  l2652 02E0  
                                l2636 01D4                                  l2820 04B6  
                                l2900 0402                                  l3292 0727  
                                l3276 06FE                                  l3364 064C  
                                l3372 0665                                  l3356 062B  
                                l3348 0611                                  l2806 032F  
                                l2742 018C                                  l2750 0564  
                                l2726 0198                                  l2734 01C8  
                                l2646 00FF                                  l2718 02D1  
                                l2398 01FC                                  l2574 038C  
                                l2478 0128                                  l2486 0185  
                                l2494 017C                                  l2558 0174  
                                l2582 013E                                  l2590 014F  
                                l2662 02EE                                  l2654 02E1  
                                l2638 01D8                                  l2670 0431  
                                l2830 04D5                                  l2822 04BE  
                                l2814 04A8                                  l2910 041C  
                                l2902 0405                                  l3294 0731  
                                l3278 0702                                  l3374 066D  
                                l3366 0654                                  l3358 0637  
                                l2920 0263                                  l2808 0330  
                                l2744 018D                                  l2760 0570  
                                l2752 0567                                  l2736 01C9  
                                l2728 01C1                                  l2648 00FC  
                                l2568 0387                                  l2584 0141  
                                l2592 0150                                  l2664 02F1  
                                l2656 02E2                                  l2680 0447  
                                l2672 0438                                  l2832 04DF  
                                l2824 04C1                                  l2816 04A9  
                                l2840 03C2                                  l2912 0420  
                                l2904 040A                                  l3296 0737  
                                l3288 070D                                  l3376 0675  
                                l3368 0659                                  l2922 0267  
                                l2746 018F                                  l2770 0578  
                                l2762 0572                                  l2754 0569  
                                l2738 01CB                                  l2498 05A2  
                                l2658 02E7                                  l2666 02F4  
                                l2690 045B                                  l2682 044C  
                                l2674 043C                                  l2826 04C9  
                                l2818 04AD                                  l2842 03C5  
                                l2834 03A9                                  l2914 0425  
                                l2906 040E                                  l2850 0259  
                                l3298 073D                                  l2924 026C  
                                l2780 019B                                  l2772 0579  
                                l2764 0574                                  l2756 056B  
                                l2748 0560                                  l2588 014D  
                                l2596 0336                                  l2692 045C  
                                l2684 044D                                  l2676 043D  
                                l2828 04CF                                  l2940 0532  
                                l2844 03CD                                  l2836 03B1  
                                l2908 0412                                  l2916 042B  
                                l2860 02F9                                  l2852 025F  
                                l2926 0271                                  l2790 0318  
                                l2782 01A0                                  l2774 057B  
                                l2766 0576                                  l2758 056D  
                                l2934 0276                                  l2598 0338  
                                l2694 0461                                  l2686 0452  
                                l2678 043E                                  l2950 0553  
                                l2942 0536                                  l2838 03BA  
                                l2862 02FD                                  l2854 0261  
                                l2846 0252                                  l2928 0273  
                                l2792 031A                                  l2784 01A1  
                                l2776 057D                                  l2768 0577  
                                l2696 0464                                  l2688 0456  
                                l2952 0557                                  l2944 053A  
                                l2936 0521                                  l2880 047A  
                                l2872 046A                                  l2864 0306  
                                l2848 0253                                  l2794 031D  
                                l2778 057E                                  l2786 0114  
                                l2698 0467                                  l2954 055B  
                                l2946 053E                                  l2938 052E  
                                l2890 0496                                  l2882 047E  
                                l2874 046C                                  l2866 030B  
                                l2858 02F7                                  l2796 031F  
                                l2788 0316                                  l2948 0542  
                                l2892 049B                                  l2884 0482  
                                l2876 0472                                  l2868 0311  
                                l2798 0322                                  l2886 0491  
                                l2878 0475                                  l2894 04A1  
                                l2888 0495                                  l2898 03FC  
                                STR_1 0862               __end_of_PWM1_Initialize 019B  
                                u1000 0259                                  u1001 0258  
                                u1010 025F                                  u1011 025E  
                                u1100 0491                                  u1020 02FD  
                                u1101 0490                                  u1021 02FC  
                                u1120 04A1                                  _ICON 0800  
                                u1121 04A0                                  u1105 048D  
                                u1130 0402                                  u1050 0311  
                                u1115 0497                                  u1131 0401  
                                u1051 0310                                  u1035 0302  
                                u1060 0472                                  u1205 026D  
                                u1061 0471                                  u1045 0307  
                                u1150 0412                                  u1151 0411  
                                u1080 0482                                  u1160 041C  
                                u1081 0481                                  u1161 041B  
                                u1145 0406                                  u1075 0476  
                                u1180 042B                                  u1181 042A  
                                u1165 0418                                  _LATA 010C  
                                u1190 026C                                  _LATB 010D  
                                u1191 026B                                  u1095 0483  
                                u1175 0421                                  _LATC 010E  
                                u1600 0702                                  u1601 0701  
                                u1610 0726                                  u1611 0725  
                                u1700 07D8                                  u1620 0731  
                                u1701 07D7                                  u1621 0730  
                                u1630 0737                                  u1710 063C  
                                u1631 0736                                  u1615 0722  
                                u1711 063B                                  u1560 02BB  
                                u1640 073D                                  u1720 0641  
                                u1561 02BA                                  u1641 073C  
                                u1721 0640                                  u1650 074C  
                                u1570 068D                                  u1730 064A  
                                _T2PR 0494                                  u1651 074B  
                                u1571 068C                                  u1731 0649  
                                u1660 075E                                  u1580 06A8  
                                u1740 066B                                  u1661 075D  
                                u1581 06A7                                  u1741 066A  
                                u1670 0773                                  u1590 06DB  
                                u1807 054C                                  u1671 0772  
                                u1655 0748                                  u1591 06DA  
                                u1680 0779                                  u1817 04D9  
                                u1681 0778                                  u1690 07C4  
                                u1827 04E0                                  u1691 07C3  
                                u1757 05FF                                  u1767 0631  
                                u1777 065D                                  u1787 03CE  
                                u1797 0527                                  _PLLR 04E6  
                                _TMR2 0493                                  _WPUA 020C  
                                _WPUB 020D                                  _WPUC 020E  
                                _WPUE 0210                                  _Flag 0052  
             ??_wr2RegCompleteHandler 007A                                  _Msg1 00A0  
                                _Msg2 0053                                  _Duty 0050  
                                _main 05F6              ?_I2C_CallbackReturnReset 0079  
                                fsr0h 0005                                  fsr1h 0007  
                                indf0 0000                                  fsr0l 0004  
                                indf1 0001                                  fsr1l 0006  
                    __end_of_I2C_Open 046A                                  btemp 007E  
                                start 0002      __size_of_rdBlkRegCompleteHandler 0018  
                    ?_I2C_MasterClose 0070        __size_of_OSCILLATOR_Initialize 000C  
                    ?_I2C_MasterStart 0070                         _I2C_DO_RX_ACK 013E  
                    ?_I2C_MasterWrite 0070         __end_of_OSCILLATOR_Initialize 01A7  
                               ?_main 0070                                 _T2CON 0495  
                               _T2HLT 0496                       __end_of___lwdiv 04A6  
                               _T2TMR 0493                                 _T2RST 0498  
                     __end_of___lwmod 0430          __size_of_I2C_DO_RX_NACK_STOP 0005  
                   ??_I2C_DO_TX_EMPTY 007A                                 _TRISA 008C  
                               _TRISB 008D                                 _TRISC 008E  
                               _TRISE 0090                       __end_of_lcd_cmd 04E3  
                   __end_of_I2C_DO_RX 0521                     __end_of_I2C_DO_TX 05F6  
             __end_of_COG3_Initialize 0336                       __end_of_lcd_str 02BC  
                     __end_of_dpowers 0862                        _WDT_Initialize 0114  
                   __end_of_I2C_Close 02D8                       __end_of_isdigit 0263  
              __size_of_I2C_MasterFsm 002B        I2C_MasterOperation@returnValue 0041  
             _I2C_MasterEnableRestart 0105                                 pclath 000A  
                    ?_I2C_SetCallback 0070                                 status 0003  
                               wtemp0 007E                       __end_of_sprintf 07DD  
                   ?_I2C_DO_SEND_STOP 0070                __size_of_I2C_SetBuffer 0010  
                  ??_I2C_DO_SEND_STOP 0070                          __end_of_ICON 0838  
                     __initialization 07DD                          __end_of_main 0680  
   __size_of_I2C_DO_SEND_RESTART_READ 0005             ?_I2C_DO_SEND_RESTART_READ 0070  
                      ?_I2C_DO_RX_ACK 0070               __end_of_TMR2_Initialize 01CF  
                      _I2C_DO_TX$1178 007B                                ??_main 004E  
                   ?_I2C_MasterIsNack 0070                          _COG3ASD0bits 081D  
                   ?_I2C_MasterSetIrq 0070                          _COG3CON0bits 0813  
                  ??_I2C_MasterIsNack 0070                __end_of_WDT_Initialize 0118  
                  ??_I2C_MasterSetIrq 0070       __end_of_I2C_CallbackReturnReset 00F9  
                              _CCPR1H 0292                                _CCPR1L 0291  
     __size_of_I2C_CallbackReturnStop 0002         I2C_SetDataCompleteCallback@cb 0075  
                              _ANSELA 018C                                _ANSELB 018D  
                              _ANSELC 018E                                _BORCON 009D  
                        ??_I2C_Poller 007D                                _RC0PPS 0EA0  
                              _RC1PPS 0EA1                                _RA6PPS 0E96  
                              _RA7PPS 0E97                                _RC3PPS 0EA3  
                              _RC4PPS 0EA4                      ?_PWM1_Initialize 0070  
                              _ODCONA 028C                                _ODCONB 028D  
                              _ODCONC 028E                                _INLVLA 038C  
                              _INLVLB 038D                                _INLVLC 038E  
                              _OSCCON 009B                                _WDTCON 0099  
                 _I2C_MasterGetRxData 010E                      __end_of_lcd_data 03D1  
                        _CCPTMRS1bits 029E                      __end_of_lcd_init 0560  
                              ___wmul 02F7                         _I2C_MasterFsm 03D1  
                           ??___lwdiv 0074                             ??___lwmod 007C  
                   I2C_SetCallback@cb 0070               __size_of_I2C_MasterOpen 000E  
             __size_of_I2C_MasterStop 0003               __size_of_I2C_Initialize 000A  
                       _I2C_SetBuffer 01EC                             ??_lcd_cmd 0042  
                  __end_of_I2C_Poller 01C1                             ??_lcd_str 0046  
        __end_of_I2C_MasterDisableIrq 0102                   _I2C_DO_ADDRESS_NACK 0336  
                           ??_isdigit 0070                  ?_I2C_MasterGetRxData 0070  
                           ?_I2C_Open 0070                       ?_WDT_Initialize 0070  
           ??_I2C_MasterEnableRestart 0070                      ?_COG3_Initialize 0070  
                           ??_sprintf 0041                     _SYSTEM_Initialize 0276  
             __end_of__initialization 07FD                   _I2C_MasterOperation 02D8  
                  ?_SYSTEM_Initialize 0070                  ?_I2C_DO_ADDRESS_NACK 0070  
         PWM1_LoadDutyValue@dutyValue 0070               _rdBlkRegCompleteHandler 028C  
                      __pcstackCOMMON 0070                        ?_I2C_MasterFsm 0070  
                     ??_I2C_DO_RX_ACK 0070                          __pidataBANK0 01DD  
                        __pidataBANK1 0240                _I2C_CallbackReturnStop 00F5  
                 ??_SYSTEM_Initialize 0070                    _PWM1_LoadDutyValue 0263  
                    ?_TMR2_Initialize 0070                        ?_I2C_SetBuffer 0070  
             ?_I2C_MasterWaitForEvent 0070        __size_of_I2C_DO_SEND_ADR_WRITE 0008  
  __size_of_I2C_DO_SEND_RESTART_WRITE 0005         __end_of_I2C_DO_SEND_ADR_WRITE 017E  
          ?_I2C_DO_SEND_RESTART_WRITE 0070                  ?_I2C_MasterOperation 0070  
               ??_I2C_MasterGetRxData 0070                        _OPTION_REGbits 0097  
                          ??_I2C_Open 0070                   ?_PWM1_LoadDutyValue 0070  
          __end_of_I2C_MasterClearIrq 00FC             __end_of_SYSTEM_Initialize 028C  
                        sprintf@width 004A                     _I2C_MasterSendAck 011C  
                          __pbssBANK0 0020                         ??_I2C_DO_IDLE 0070  
      __size_of_rd2RegCompleteHandler 0011                         ??_I2C_DO_RCEN 0070  
       __end_of_rd2RegCompleteHandler 022F          __end_of_I2C_MasterSendTxData 0125  
                  ?_I2C_MasterSendAck 0070                     _I2C_MasterStartRx 010B  
      __size_of_wr2RegCompleteHandler 0011                 ??_I2C_DO_ADDRESS_NACK 007A  
       __end_of_wr2RegCompleteHandler 020D                   _I2C_DO_RX_NACK_STOP 0143  
               _rd1RegCompleteHandler 020D                    ?_I2C_MasterStartRx 0070  
                ??_PWM1_LoadDutyValue 0072            __end_of_I2C_MasterSendNack 011C  
               _wr1RegCompleteHandler 022F                            __pmaintext 05F6  
                 ??_I2C_MasterSendAck 0070              rd1RegCompleteHandler@ptr 0079  
         __end_of_I2C_DO_SEND_RESTART 0139                       _I2C_DO_TX_EMPTY 0380  
                 I2C_SetBuffer@buffer 0073                               ?___wmul 0070  
      __end_of_I2C_MasterWaitForEvent 0163                   ??_I2C_MasterStartRx 0070  
       __size_of_I2C_DO_SEND_ADR_READ 0009                               _CCP1CON 0293  
    __size_of_I2C_CallbackReturnReset 0002                               _COG3DBF 0812  
                             _COG3DBR 0811                               _COG3PHF 080E  
                             _COG3PHR 080D                 ??_I2C_MasterOperation 007D  
                             _COG3STR 081F        I2C_SetDataCompleteCallback@ptr 0077  
            ??_I2C_DO_RX_NACK_RESTART 0070     __end_of_I2C_DO_SEND_RESTART_WRITE 0134  
                ?_I2C_DO_RX_NACK_STOP 0070                               _OSCSTAT 009C  
           __end_of_I2C_MasterSendAck 0120                               _OSCTUNE 009A  
                             _SSP1ADD 0212                               _SLRCONA 030C  
                             _SLRCONB 030D                               _SLRCONC 030E  
                             _SSP1BUF 0211                             ?_lcd_data 0070  
                           ?_lcd_init 0070             __end_of_I2C_MasterStartRx 010E  
                I2C_Close@returnValue 0071          ?_I2C_SetDataCompleteCallback 0075  
                           _I2C_DO_RX 04E3                             _I2C_DO_TX 05A2  
    __end_of_I2C_DO_SEND_RESTART_READ 012F                             _I2C_Close 02BC  
           ??_rdBlkRegCompleteHandler 007A                  _I2C_MasterDisableIrq 00FF  
                     ??_I2C_MasterFsm 003D                             _COG3FSIM0 081B  
                           _COG3FSIM1 081C                             _COG3RSIM0 0817  
                           _COG3RSIM1 0818                   __end_of_I2C_DO_IDLE 012A  
                 __end_of_I2C_DO_RCEN 0176                       ??_I2C_SetBuffer 0072  
                     __size_of___wmul 001F                               ___lwdiv 046A  
                             ___lwmod 03FC               I2C_SetBuffer@bufferSize 0070  
                      _I2C_MasterOpen 01CF                        _I2C_MasterStop 0108  
                      _I2C_Initialize 0187             __size_of_I2C_DO_SEND_STOP 0005  
                             __ptext1 0680                               __ptext2 0251  
                             __ptext3 02F7                               __ptext4 03FC  
                             __ptext5 046A                               __ptext6 02A4  
                             __ptext7 03A7                               __ptext8 0521  
                             __ptext9 04A6                               _lcd_cmd 04A6  
               ??_I2C_DO_RX_NACK_STOP 0070                               _lcd_str 02A4  
                             _dpowers 0858                 _OSCILLATOR_Initialize 019B  
                           _T2CONbits 0495                               _isdigit 0251  
                  I2C_SetCallback@idx 0074              __size_of_I2C_MasterClose 0003  
            ??_PIN_MANAGER_Initialize 0070         I2C_CallbackReturnReset@funPtr 0079  
                           _T2HLTbits 0496                    I2C_SetCallback@ptr 0072  
            wr1RegCompleteHandler@ptr 0079              __size_of_I2C_MasterStart 0003  
            __size_of_I2C_MasterWrite 0005                            ??_lcd_data 0042  
          __size_of_SYSTEM_Initialize 0016                               _sprintf 0680  
                             clrloop0 0164                            ??_lcd_init 0046  
                end_of_initialization 07FD                             _T2RSTbits 0498  
                          ?_I2C_DO_RX 0070                            ?_I2C_DO_TX 0070  
           __size_of_I2C_MasterIsNack 0006                               init_ram 0169  
                          ?_I2C_Close 0070                ?_rd1RegCompleteHandler 0079  
                             initloop 016A               __end_of_I2C_DO_TX_EMPTY 03A7  
           __size_of_I2C_MasterSetIrq 0003                 ?_I2C_MasterDisableIrq 0070  
              ?_wr1RegCompleteHandler 0079              __size_of_I2C_SetCallback 0026  
              __end_of_I2C_MasterOpen 01DD                __end_of_I2C_MasterStop 010B  
              __end_of_I2C_Initialize 0191                      ??_WDT_Initialize 0070  
                           _PORTBbits 000D       __end_of_rdBlkRegCompleteHandler 02A4  
                _I2C_MasterSendTxData 0120                             _SSPDATPPS 0E3B  
     __size_of_I2C_DO_RX_NACK_RESTART 0005                             _SSPCLKPPS 0E3A  
                          lcd_cmd@cmd 0045            __size_of_I2C_MasterSendAck 0004  
                   __size_of_I2C_Open 003A            __size_of_I2C_MasterStartRx 0003  
                         _I2C_DO_IDLE 0125                           _I2C_DO_RCEN 016F  
          rdBlkRegCompleteHandler@ptr 0079                           _CCP1CONbits 0293  
                          lcd_str@ptr 0047               ?_I2C_CallbackReturnStop 0079  
            _I2C_DO_SEND_RESTART_READ 012A              __size_of_PWM1_Initialize 000A  
        I2C_CallbackReturnStop@funPtr 0079                       ?_I2C_MasterOpen 0070  
                     ?_I2C_MasterStop 0070                       ?_I2C_Initialize 0070  
             _I2C_CallbackReturnReset 00F7                        __end_of___wmul 0316  
__size_of_I2C_SetDataCompleteCallback 000D                 ?_I2C_MasterSendTxData 0070  
              ?_OSCILLATOR_Initialize 0070           ??_I2C_DO_SEND_RESTART_WRITE 0070  
                 start_initialization 07DD       __size_of_PIN_MANAGER_Initialize 0042  
                       ?_I2C_DO_RESET 0070                           ??_I2C_DO_RX 007A  
                         ??_I2C_DO_TX 007A                     ??_I2C_MasterClose 0070  
              ??_I2C_MasterDisableIrq 0070                           ??_I2C_Close 0070  
                   ??_I2C_MasterStart 0070                     ??_I2C_MasterWrite 007E  
      __end_of_I2C_CallbackReturnStop 00F7                _I2C_DO_RX_NACK_RESTART 0148  
                    ?_I2C_DO_TX_EMPTY 0070              __size_of_COG3_Initialize 0020  
                  _I2C_MasterClearIrq 00F9                              ??___wmul 0074  
                 ?_I2C_MasterClearIrq 0070           __end_of_I2C_MasterGetRxData 0111  
                         __pdataBANK0 0050                           __pdataBANK1 00A0  
               __end_of_I2C_DO_RX_ACK 0143                      _I2C_DO_SEND_STOP 0139  
                   ??_I2C_SetCallback 0073                   I2C_Open@returnValue 0072  
                  _I2C_MasterSendNack 0118              ?_I2C_MasterEnableRestart 0070  
                   _i2c_fsmStateTable 0838                 _I2C_DO_SEND_ADR_WRITE 0176  
                           ___latbits 0003                         __pcstackBANK0 003D  
                      ??_I2C_DO_RESET 0070              __size_of_TMR2_Initialize 000E  
                 ?_I2C_MasterSendNack 0070                          _isdigit$1787 0070  
        __end_of_I2C_DO_SEND_ADR_READ 0187                  ??_I2C_MasterClearIrq 0070  
         __end_of_I2C_DO_ADDRESS_NACK 035A                     __size_of_lcd_data 002A  
                    _I2C_MasterIsNack 0157                     __size_of_lcd_init 003F  
           _I2C_DO_SEND_RESTART_WRITE 012F                           sprintf@flag 0047  
                         sprintf@prec 0046                      _I2C_MasterSetIrq 0111  
               _rd2RegCompleteHandler 021E           __size_of_PWM1_LoadDutyValue 0013  
                    ___lwdiv@dividend 0072                _PIN_MANAGER_Initialize 0560  
               _wr2RegCompleteHandler 01FC             ??_I2C_CallbackReturnReset 007A  
         __end_of_I2C_MasterOperation 02F7                  ??_I2C_MasterSendNack 0070  
            rd2RegCompleteHandler@ptr 0079                              ?___lwdiv 0070  
                            ?___lwmod 0078                ??_I2C_MasterSendTxData 0070  
           __end_of_i2c_fsmStateTable 0858                     ??_PWM1_Initialize 0070  
                            ?_lcd_cmd 0070                              ?_lcd_str 0046  
        __size_of_I2C_DO_SEND_RESTART 0005                              ?_isdigit 0070  
             I2C_MasterOperation@read 0040                              _I2C_Open 0430  
                            _COG3ASD0 081D                              _COG3ASD1 081E  
                            _COG3BLKF 0810                              _COG3CON0 0813  
                            _COG3CON1 0814                              _COG3BLKR 080F  
                            _COG3FIS0 0819                              _COG3FIS1 081A  
                            _COG3RIS0 0815                              _COG3RIS1 0816  
                    ___lwdiv@quotient 0075                              ?_sprintf 003D  
                            _T2CLKCON 0497               ??_rd1RegCompleteHandler 007A  
             ??_wr1RegCompleteHandler 007A                        ___wmul@product 0074  
                            _LATBbits 010D                             clear_ram0 0163  
                            _PIE1bits 0091                              _PIR1bits 0011  
                            _PIR2bits 0012                 __end_of_I2C_MasterFsm 03FC  
         __end_of_I2C_DO_RX_NACK_STOP 0148                              _SSP1CON1 0215  
                            _SSP1CON2 0216                     ??_COG3_Initialize 0070  
     __end_of_I2C_MasterEnableRestart 0108                              _SSP1STAT 0214  
               __end_of_I2C_SetBuffer 01FC                     ___wmul@multiplier 0070  
              ?_I2C_DO_SEND_ADR_WRITE 0070              I2C_MasterSendTxData@data 0070  
            wr2RegCompleteHandler@ptr 0079            ??_I2C_DO_SEND_RESTART_READ 0070  
            ?_rdBlkRegCompleteHandler 0079                            _I2C_Poller 01B4  
                          _I2C_Status 0020                          ?_I2C_DO_IDLE 0070  
                        ?_I2C_DO_RCEN 0070                     ??_TMR2_Initialize 0070  
              ?_rd2RegCompleteHandler 0079                      ??_I2C_MasterOpen 0070  
              ?_wr2RegCompleteHandler 0079                      ??_I2C_MasterStop 0070  
            ??_I2C_MasterWaitForEvent 0070                      ??_I2C_Initialize 0070  
                __end_of_I2C_DO_RESET 0152               ??_OSCILLATOR_Initialize 0070  
                _I2C_DO_SEND_ADR_READ 017E                      __size_of___lwdiv 003C  
                    __size_of___lwmod 0034                      __size_of_lcd_cmd 003D  
                     _I2C_MasterClose 00FC                      __size_of_lcd_str 0018  
                          sprintf@val 0048                       I2C_Open@address 0071  
                     _I2C_MasterStart 0102                       _I2C_MasterWrite 0152  
                    __size_of_isdigit 0012                       ___lwdiv@divisor 0070  
                     ___lwdiv@counter 0077                              __ptext10 0430  
                            __ptext11 01CF                              __ptext20 0143  
                            __ptext12 0152                              __ptext21 013E  
                            __ptext13 02D8                              __ptext30 017E  
                            __ptext22 0139                              __ptext14 01B4  
                            __ptext31 0125                              __ptext23 0134  
                            __ptext15 015D                              __ptext40 00F7  
                            __ptext32 0380                              __ptext24 012F  
                            __ptext16 03D1                              __ptext41 00F5  
                            __ptext33 0111                              __ptext25 012A  
                            __ptext17 0336                              __ptext50 0108  
                            __ptext42 028C                              __ptext34 0157  
                            __ptext26 016F                              __ptext18 014D  
                            __ptext51 0105                              __ptext43 022F  
                            __ptext35 0120                              __ptext27 04E3  
                            __ptext19 0148                              __ptext60 0191  
                            __ptext52 0102                              __ptext44 021E  
                            __ptext36 011C                              __ptext28 05A2  
                            __ptext61 0560                              __ptext53 02BC  
                            __ptext45 020D                              __ptext37 010E  
                            __ptext29 0176                              __ptext62 019B  
                            __ptext54 00FF                              __ptext46 01FC  
                            __ptext38 0118                              __ptext63 0187  
                            __ptext55 00FC                              __ptext47 01A7  
                            __ptext39 010B                              __ptext64 0316  
                            __ptext56 00F9                              __ptext48 035A  
                            __ptext65 0263                              __ptext57 0276  
                            __ptext49 01EC                              __ptext58 0114  
                            __ptext59 01C1                          _SSP1CON1bits 0215  
                        _SSP1CON2bits 0216                              _lcd_data 03A7  
                            _lcd_init 0521   __end_of_I2C_SetDataCompleteCallback 01B4  
         _I2C_SetDataCompleteCallback 01A7               ?_I2C_DO_RX_NACK_RESTART 0070  
                    __size_of_sprintf 015D              __end_of_I2C_DO_SEND_STOP 013E  
                       __size_of_main 008A                       _I2C_SetCallback 035A  
       ??_I2C_SetDataCompleteCallback 0078                 ?_I2C_DO_SEND_ADR_READ 0070  
                        _SSP1STATbits 0214              __end_of_I2C_MasterIsNack 015D  
            __end_of_I2C_MasterSetIrq 0114                              isdigit@c 0071  
      __end_of_I2C_DO_RX_NACK_RESTART 014D               __size_of_WDT_Initialize 0004  
                         ?_I2C_Poller 0070                             sprintf@ap 0045  
                           sprintf@sp 004C      __size_of_I2C_MasterEnableRestart 0003  
                    ___lwmod@dividend 007A               ?_PIN_MANAGER_Initialize 0070  
                 _I2C_DO_SEND_RESTART 0134         __size_of_I2C_MasterDisableIrq 0003  
                     _PWM1_Initialize 0191       __size_of_I2C_MasterWaitForEvent 0006  
             __end_of_I2C_MasterClose 00FF              __size_of_I2C_DO_TX_EMPTY 0027  
             __end_of_I2C_MasterStart 0105               __end_of_I2C_MasterWrite 0157  
                       __pstringtext1 0800                         __pstringtext2 0838  
                       __pstringtext3 0858                         __pstringtext4 0000  
                ?_I2C_DO_SEND_RESTART 0070                              sprintf@c 004D  
                            sprintf@f 003D                       ___lwmod@divisor 0078  
        __size_of_I2C_MasterGetRxData 0003                       ___lwmod@counter 007D  
         __size_of_I2C_MasterClearIrq 0003               __end_of_I2C_SetCallback 0380  
      __end_of_PIN_MANAGER_Initialize 05A2        __size_of_rd1RegCompleteHandler 0011  
       __end_of_rd1RegCompleteHandler 021E                __size_of_I2C_DO_RX_ACK 0005  
                     _COG3_Initialize 0316            __end_of_PWM1_LoadDutyValue 0276  
      __size_of_wr1RegCompleteHandler 0011                 __size_of_I2C_DO_RESET 0005  
       __end_of_wr1RegCompleteHandler 0240          __size_of_I2C_DO_ADDRESS_NACK 0024  
                __size_of_I2C_DO_IDLE 0005                  __size_of_I2C_DO_RCEN 0007  
                  __size_of_I2C_DO_RX 003E                    __size_of_I2C_DO_TX 0054  
