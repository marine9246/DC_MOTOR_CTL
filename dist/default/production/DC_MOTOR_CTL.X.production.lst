

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Jun 29 15:07:12 2022

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F1778
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,inline,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2
    33                           	psect	text15,local,class=CODE,merge=1,inline,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,inline,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,inline,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,inline,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,inline,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,inline,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,inline,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,inline,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,inline,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,inline,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,inline,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,inline,delta=2
    71                           	psect	text53,local,class=CODE,merge=1,delta=2
    72                           	psect	text54,local,class=CODE,merge=1,inline,delta=2
    73                           	psect	text55,local,class=CODE,merge=1,inline,delta=2
    74                           	psect	text56,local,class=CODE,merge=1,inline,delta=2
    75                           	psect	text57,local,class=CODE,merge=1,delta=2
    76                           	psect	text58,local,class=CODE,merge=1,delta=2
    77                           	psect	text59,local,class=CODE,merge=1,delta=2
    78                           	psect	text60,local,class=CODE,merge=1,delta=2
    79                           	psect	text61,local,class=CODE,merge=1,delta=2
    80                           	psect	text62,local,class=CODE,merge=1,delta=2
    81                           	psect	text63,local,class=CODE,merge=1,delta=2
    82                           	psect	text64,local,class=CODE,merge=1,delta=2
    83                           	psect	text65,local,class=CODE,merge=1,delta=2
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    85                           	dabs	1,0x7E,2
    86  0000                     
    87                           ; Version 2.20
    88                           ; Generated 12/02/2020 GMT
    89                           ; 
    90                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    91                           ; All rights reserved.
    92                           ; 
    93                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    94                           ; 
    95                           ; Redistribution and use in source and binary forms, with or without modification, are
    96                           ; permitted provided that the following conditions are met:
    97                           ; 
    98                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    99                           ;        conditions and the following disclaimer.
   100                           ; 
   101                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   102                           ;        of conditions and the following disclaimer in the documentation and/or other
   103                           ;        materials provided with the distribution.
   104                           ; 
   105                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   106                           ;        software without specific prior written permission.
   107                           ; 
   108                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   109                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   110                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   111                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   112                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   113                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   114                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   115                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   116                           ; 
   117                           ; 
   118                           ; Code-generator required, PIC16F1778 Definitions
   119                           ; 
   120                           ; SFR Addresses
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001C                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0090                     	;# 
   158  0091                     	;# 
   159  0092                     	;# 
   160  0093                     	;# 
   161  0094                     	;# 
   162  0095                     	;# 
   163  0096                     	;# 
   164  0097                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009A                     	;# 
   168  009B                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  0111                     	;# 
   177  0112                     	;# 
   178  0113                     	;# 
   179  0114                     	;# 
   180  0115                     	;# 
   181  0116                     	;# 
   182  0117                     	;# 
   183  0118                     	;# 
   184  0119                     	;# 
   185  011A                     	;# 
   186  011B                     	;# 
   187  011C                     	;# 
   188  011D                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  018E                     	;# 
   192  0191                     	;# 
   193  0191                     	;# 
   194  0192                     	;# 
   195  0193                     	;# 
   196  0193                     	;# 
   197  0194                     	;# 
   198  0195                     	;# 
   199  0196                     	;# 
   200  0197                     	;# 
   201  0199                     	;# 
   202  0199                     	;# 
   203  0199                     	;# 
   204  019A                     	;# 
   205  019A                     	;# 
   206  019A                     	;# 
   207  019B                     	;# 
   208  019B                     	;# 
   209  019B                     	;# 
   210  019B                     	;# 
   211  019B                     	;# 
   212  019C                     	;# 
   213  019C                     	;# 
   214  019C                     	;# 
   215  019D                     	;# 
   216  019D                     	;# 
   217  019D                     	;# 
   218  019E                     	;# 
   219  019E                     	;# 
   220  019E                     	;# 
   221  019F                     	;# 
   222  019F                     	;# 
   223  019F                     	;# 
   224  019F                     	;# 
   225  019F                     	;# 
   226  020C                     	;# 
   227  020D                     	;# 
   228  020E                     	;# 
   229  0210                     	;# 
   230  0211                     	;# 
   231  0211                     	;# 
   232  0212                     	;# 
   233  0212                     	;# 
   234  0213                     	;# 
   235  0213                     	;# 
   236  0214                     	;# 
   237  0214                     	;# 
   238  0215                     	;# 
   239  0215                     	;# 
   240  0215                     	;# 
   241  0215                     	;# 
   242  0216                     	;# 
   243  0216                     	;# 
   244  0217                     	;# 
   245  0217                     	;# 
   246  021B                     	;# 
   247  021C                     	;# 
   248  021D                     	;# 
   249  021E                     	;# 
   250  021F                     	;# 
   251  028C                     	;# 
   252  028D                     	;# 
   253  028E                     	;# 
   254  0291                     	;# 
   255  0291                     	;# 
   256  0292                     	;# 
   257  0293                     	;# 
   258  0294                     	;# 
   259  0295                     	;# 
   260  0295                     	;# 
   261  0296                     	;# 
   262  0297                     	;# 
   263  0298                     	;# 
   264  0299                     	;# 
   265  0299                     	;# 
   266  029A                     	;# 
   267  029B                     	;# 
   268  029C                     	;# 
   269  029E                     	;# 
   270  029F                     	;# 
   271  030C                     	;# 
   272  030D                     	;# 
   273  030E                     	;# 
   274  0315                     	;# 
   275  0316                     	;# 
   276  0317                     	;# 
   277  0318                     	;# 
   278  0319                     	;# 
   279  031B                     	;# 
   280  031C                     	;# 
   281  031D                     	;# 
   282  031E                     	;# 
   283  031F                     	;# 
   284  038C                     	;# 
   285  038D                     	;# 
   286  038E                     	;# 
   287  0390                     	;# 
   288  0391                     	;# 
   289  0392                     	;# 
   290  0393                     	;# 
   291  0394                     	;# 
   292  0395                     	;# 
   293  0396                     	;# 
   294  0397                     	;# 
   295  0398                     	;# 
   296  0399                     	;# 
   297  039D                     	;# 
   298  039E                     	;# 
   299  039F                     	;# 
   300  040D                     	;# 
   301  040F                     	;# 
   302  040F                     	;# 
   303  0410                     	;# 
   304  0411                     	;# 
   305  0412                     	;# 
   306  0413                     	;# 
   307  0413                     	;# 
   308  0414                     	;# 
   309  0414                     	;# 
   310  0415                     	;# 
   311  0416                     	;# 
   312  0417                     	;# 
   313  0418                     	;# 
   314  041A                     	;# 
   315  041A                     	;# 
   316  041B                     	;# 
   317  041B                     	;# 
   318  041C                     	;# 
   319  041D                     	;# 
   320  041E                     	;# 
   321  041F                     	;# 
   322  048E                     	;# 
   323  048E                     	;# 
   324  048F                     	;# 
   325  0490                     	;# 
   326  0491                     	;# 
   327  0492                     	;# 
   328  0493                     	;# 
   329  0493                     	;# 
   330  0494                     	;# 
   331  0494                     	;# 
   332  0495                     	;# 
   333  0496                     	;# 
   334  0497                     	;# 
   335  0498                     	;# 
   336  049A                     	;# 
   337  049A                     	;# 
   338  049B                     	;# 
   339  049B                     	;# 
   340  049C                     	;# 
   341  049D                     	;# 
   342  049E                     	;# 
   343  049F                     	;# 
   344  050F                     	;# 
   345  0510                     	;# 
   346  0511                     	;# 
   347  0512                     	;# 
   348  0513                     	;# 
   349  0514                     	;# 
   350  0515                     	;# 
   351  0516                     	;# 
   352  0517                     	;# 
   353  0518                     	;# 
   354  0519                     	;# 
   355  051A                     	;# 
   356  058D                     	;# 
   357  058E                     	;# 
   358  058F                     	;# 
   359  058F                     	;# 
   360  058F                     	;# 
   361  0590                     	;# 
   362  0590                     	;# 
   363  0591                     	;# 
   364  0592                     	;# 
   365  0592                     	;# 
   366  0592                     	;# 
   367  0593                     	;# 
   368  0593                     	;# 
   369  0594                     	;# 
   370  0595                     	;# 
   371  0595                     	;# 
   372  0596                     	;# 
   373  0597                     	;# 
   374  0597                     	;# 
   375  0598                     	;# 
   376  0599                     	;# 
   377  0599                     	;# 
   378  0599                     	;# 
   379  059A                     	;# 
   380  059A                     	;# 
   381  059E                     	;# 
   382  059F                     	;# 
   383  059F                     	;# 
   384  0614                     	;# 
   385  0614                     	;# 
   386  0615                     	;# 
   387  0616                     	;# 
   388  0617                     	;# 
   389  0617                     	;# 
   390  0618                     	;# 
   391  0619                     	;# 
   392  061A                     	;# 
   393  061A                     	;# 
   394  061B                     	;# 
   395  061C                     	;# 
   396  068D                     	;# 
   397  068E                     	;# 
   398  068F                     	;# 
   399  0690                     	;# 
   400  0691                     	;# 
   401  0692                     	;# 
   402  0693                     	;# 
   403  0694                     	;# 
   404  0695                     	;# 
   405  0696                     	;# 
   406  0697                     	;# 
   407  0698                     	;# 
   408  0699                     	;# 
   409  069A                     	;# 
   410  069B                     	;# 
   411  069C                     	;# 
   412  069D                     	;# 
   413  069E                     	;# 
   414  069F                     	;# 
   415  070D                     	;# 
   416  070E                     	;# 
   417  070F                     	;# 
   418  0710                     	;# 
   419  0711                     	;# 
   420  0712                     	;# 
   421  0713                     	;# 
   422  0714                     	;# 
   423  0715                     	;# 
   424  0716                     	;# 
   425  0717                     	;# 
   426  0718                     	;# 
   427  0719                     	;# 
   428  071A                     	;# 
   429  071B                     	;# 
   430  071C                     	;# 
   431  071D                     	;# 
   432  071E                     	;# 
   433  071F                     	;# 
   434  078E                     	;# 
   435  078F                     	;# 
   436  0790                     	;# 
   437  0791                     	;# 
   438  0792                     	;# 
   439  0793                     	;# 
   440  0794                     	;# 
   441  0795                     	;# 
   442  0796                     	;# 
   443  0797                     	;# 
   444  0798                     	;# 
   445  0799                     	;# 
   446  079A                     	;# 
   447  079B                     	;# 
   448  079C                     	;# 
   449  079D                     	;# 
   450  079E                     	;# 
   451  079F                     	;# 
   452  080D                     	;# 
   453  080E                     	;# 
   454  080F                     	;# 
   455  0810                     	;# 
   456  0811                     	;# 
   457  0812                     	;# 
   458  0813                     	;# 
   459  0814                     	;# 
   460  0815                     	;# 
   461  0816                     	;# 
   462  0817                     	;# 
   463  0818                     	;# 
   464  0819                     	;# 
   465  081A                     	;# 
   466  081B                     	;# 
   467  081C                     	;# 
   468  081D                     	;# 
   469  081E                     	;# 
   470  081F                     	;# 
   471  090C                     	;# 
   472  090D                     	;# 
   473  090E                     	;# 
   474  090F                     	;# 
   475  0910                     	;# 
   476  0911                     	;# 
   477  0912                     	;# 
   478  0913                     	;# 
   479  0914                     	;# 
   480  0915                     	;# 
   481  0916                     	;# 
   482  0917                     	;# 
   483  0D8E                     	;# 
   484  0D8F                     	;# 
   485  0D90                     	;# 
   486  0D91                     	;# 
   487  0D91                     	;# 
   488  0D92                     	;# 
   489  0D93                     	;# 
   490  0D93                     	;# 
   491  0D94                     	;# 
   492  0D95                     	;# 
   493  0D95                     	;# 
   494  0D96                     	;# 
   495  0D97                     	;# 
   496  0D97                     	;# 
   497  0D98                     	;# 
   498  0D99                     	;# 
   499  0D99                     	;# 
   500  0D9A                     	;# 
   501  0D9B                     	;# 
   502  0D9C                     	;# 
   503  0D9C                     	;# 
   504  0D9D                     	;# 
   505  0D9D                     	;# 
   506  0D9E                     	;# 
   507  0D9F                     	;# 
   508  0DA0                     	;# 
   509  0DA1                     	;# 
   510  0DA1                     	;# 
   511  0DA2                     	;# 
   512  0DA3                     	;# 
   513  0DA3                     	;# 
   514  0DA4                     	;# 
   515  0DA5                     	;# 
   516  0DA5                     	;# 
   517  0DA6                     	;# 
   518  0DA7                     	;# 
   519  0DA7                     	;# 
   520  0DA8                     	;# 
   521  0DA9                     	;# 
   522  0DA9                     	;# 
   523  0DAA                     	;# 
   524  0DAB                     	;# 
   525  0DAC                     	;# 
   526  0DAC                     	;# 
   527  0DAD                     	;# 
   528  0DAD                     	;# 
   529  0DAE                     	;# 
   530  0DAF                     	;# 
   531  0DB0                     	;# 
   532  0DB1                     	;# 
   533  0DB1                     	;# 
   534  0DB2                     	;# 
   535  0DB3                     	;# 
   536  0DB3                     	;# 
   537  0DB4                     	;# 
   538  0DB5                     	;# 
   539  0DB5                     	;# 
   540  0DB6                     	;# 
   541  0DB7                     	;# 
   542  0DB7                     	;# 
   543  0DB8                     	;# 
   544  0DB9                     	;# 
   545  0DB9                     	;# 
   546  0DBA                     	;# 
   547  0DBB                     	;# 
   548  0DBC                     	;# 
   549  0DBC                     	;# 
   550  0DBD                     	;# 
   551  0DBD                     	;# 
   552  0DBE                     	;# 
   553  0DBF                     	;# 
   554  0DC0                     	;# 
   555  0E0C                     	;# 
   556  0E0D                     	;# 
   557  0E0E                     	;# 
   558  0E0F                     	;# 
   559  0E10                     	;# 
   560  0E11                     	;# 
   561  0E12                     	;# 
   562  0E13                     	;# 
   563  0E14                     	;# 
   564  0E15                     	;# 
   565  0E15                     	;# 
   566  0E15                     	;# 
   567  0E16                     	;# 
   568  0E16                     	;# 
   569  0E16                     	;# 
   570  0E17                     	;# 
   571  0E17                     	;# 
   572  0E17                     	;# 
   573  0E18                     	;# 
   574  0E18                     	;# 
   575  0E18                     	;# 
   576  0E19                     	;# 
   577  0E1A                     	;# 
   578  0E1B                     	;# 
   579  0E1D                     	;# 
   580  0E1E                     	;# 
   581  0E1F                     	;# 
   582  0E21                     	;# 
   583  0E22                     	;# 
   584  0E23                     	;# 
   585  0E24                     	;# 
   586  0E25                     	;# 
   587  0E26                     	;# 
   588  0E27                     	;# 
   589  0E28                     	;# 
   590  0E29                     	;# 
   591  0E2D                     	;# 
   592  0E2E                     	;# 
   593  0E2F                     	;# 
   594  0E30                     	;# 
   595  0E31                     	;# 
   596  0E32                     	;# 
   597  0E35                     	;# 
   598  0E36                     	;# 
   599  0E37                     	;# 
   600  0E38                     	;# 
   601  0E39                     	;# 
   602  0E3A                     	;# 
   603  0E3B                     	;# 
   604  0E3C                     	;# 
   605  0E3D                     	;# 
   606  0E3E                     	;# 
   607  0E90                     	;# 
   608  0E91                     	;# 
   609  0E92                     	;# 
   610  0E93                     	;# 
   611  0E94                     	;# 
   612  0E95                     	;# 
   613  0E96                     	;# 
   614  0E97                     	;# 
   615  0E98                     	;# 
   616  0E99                     	;# 
   617  0E9A                     	;# 
   618  0E9B                     	;# 
   619  0E9C                     	;# 
   620  0E9D                     	;# 
   621  0E9E                     	;# 
   622  0E9F                     	;# 
   623  0EA0                     	;# 
   624  0EA1                     	;# 
   625  0EA2                     	;# 
   626  0EA3                     	;# 
   627  0EA4                     	;# 
   628  0EA5                     	;# 
   629  0EA6                     	;# 
   630  0EA7                     	;# 
   631  0F0F                     	;# 
   632  0F10                     	;# 
   633  0F11                     	;# 
   634  0F12                     	;# 
   635  0F13                     	;# 
   636  0F14                     	;# 
   637  0F15                     	;# 
   638  0F16                     	;# 
   639  0F17                     	;# 
   640  0F18                     	;# 
   641  0F19                     	;# 
   642  0F1A                     	;# 
   643  0F1B                     	;# 
   644  0F1C                     	;# 
   645  0F1D                     	;# 
   646  0F1E                     	;# 
   647  0F1F                     	;# 
   648  0F20                     	;# 
   649  0F21                     	;# 
   650  0F22                     	;# 
   651  0F23                     	;# 
   652  0F24                     	;# 
   653  0F25                     	;# 
   654  0F26                     	;# 
   655  0F27                     	;# 
   656  0F28                     	;# 
   657  0F29                     	;# 
   658  0F2A                     	;# 
   659  0F2B                     	;# 
   660  0F2C                     	;# 
   661  0F2D                     	;# 
   662  0F2E                     	;# 
   663  0F2F                     	;# 
   664  0F30                     	;# 
   665  0F31                     	;# 
   666  0F32                     	;# 
   667  0F33                     	;# 
   668  0F34                     	;# 
   669  0F35                     	;# 
   670  0F36                     	;# 
   671  0F37                     	;# 
   672  0FE4                     	;# 
   673  0FE5                     	;# 
   674  0FE6                     	;# 
   675  0FE7                     	;# 
   676  0FE8                     	;# 
   677  0FE9                     	;# 
   678  0FEA                     	;# 
   679  0FEB                     	;# 
   680  0FED                     	;# 
   681  0FEE                     	;# 
   682  0FEF                     	;# 
   683  0000                     	;# 
   684  0001                     	;# 
   685  0002                     	;# 
   686  0003                     	;# 
   687  0004                     	;# 
   688  0005                     	;# 
   689  0006                     	;# 
   690  0007                     	;# 
   691  0008                     	;# 
   692  0009                     	;# 
   693  000A                     	;# 
   694  000B                     	;# 
   695  000C                     	;# 
   696  000D                     	;# 
   697  000E                     	;# 
   698  0010                     	;# 
   699  0011                     	;# 
   700  0012                     	;# 
   701  0013                     	;# 
   702  0014                     	;# 
   703  0015                     	;# 
   704  0016                     	;# 
   705  0017                     	;# 
   706  0018                     	;# 
   707  0018                     	;# 
   708  0019                     	;# 
   709  001A                     	;# 
   710  001B                     	;# 
   711  001C                     	;# 
   712  001C                     	;# 
   713  001D                     	;# 
   714  001E                     	;# 
   715  001F                     	;# 
   716  008C                     	;# 
   717  008D                     	;# 
   718  008E                     	;# 
   719  0090                     	;# 
   720  0091                     	;# 
   721  0092                     	;# 
   722  0093                     	;# 
   723  0094                     	;# 
   724  0095                     	;# 
   725  0096                     	;# 
   726  0097                     	;# 
   727  0098                     	;# 
   728  0099                     	;# 
   729  009A                     	;# 
   730  009B                     	;# 
   731  009C                     	;# 
   732  009D                     	;# 
   733  009E                     	;# 
   734  009F                     	;# 
   735  010C                     	;# 
   736  010D                     	;# 
   737  010E                     	;# 
   738  0111                     	;# 
   739  0112                     	;# 
   740  0113                     	;# 
   741  0114                     	;# 
   742  0115                     	;# 
   743  0116                     	;# 
   744  0117                     	;# 
   745  0118                     	;# 
   746  0119                     	;# 
   747  011A                     	;# 
   748  011B                     	;# 
   749  011C                     	;# 
   750  011D                     	;# 
   751  018C                     	;# 
   752  018D                     	;# 
   753  018E                     	;# 
   754  0191                     	;# 
   755  0191                     	;# 
   756  0192                     	;# 
   757  0193                     	;# 
   758  0193                     	;# 
   759  0194                     	;# 
   760  0195                     	;# 
   761  0196                     	;# 
   762  0197                     	;# 
   763  0199                     	;# 
   764  0199                     	;# 
   765  0199                     	;# 
   766  019A                     	;# 
   767  019A                     	;# 
   768  019A                     	;# 
   769  019B                     	;# 
   770  019B                     	;# 
   771  019B                     	;# 
   772  019B                     	;# 
   773  019B                     	;# 
   774  019C                     	;# 
   775  019C                     	;# 
   776  019C                     	;# 
   777  019D                     	;# 
   778  019D                     	;# 
   779  019D                     	;# 
   780  019E                     	;# 
   781  019E                     	;# 
   782  019E                     	;# 
   783  019F                     	;# 
   784  019F                     	;# 
   785  019F                     	;# 
   786  019F                     	;# 
   787  019F                     	;# 
   788  020C                     	;# 
   789  020D                     	;# 
   790  020E                     	;# 
   791  0210                     	;# 
   792  0211                     	;# 
   793  0211                     	;# 
   794  0212                     	;# 
   795  0212                     	;# 
   796  0213                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0214                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0216                     	;# 
   805  0216                     	;# 
   806  0217                     	;# 
   807  0217                     	;# 
   808  021B                     	;# 
   809  021C                     	;# 
   810  021D                     	;# 
   811  021E                     	;# 
   812  021F                     	;# 
   813  028C                     	;# 
   814  028D                     	;# 
   815  028E                     	;# 
   816  0291                     	;# 
   817  0291                     	;# 
   818  0292                     	;# 
   819  0293                     	;# 
   820  0294                     	;# 
   821  0295                     	;# 
   822  0295                     	;# 
   823  0296                     	;# 
   824  0297                     	;# 
   825  0298                     	;# 
   826  0299                     	;# 
   827  0299                     	;# 
   828  029A                     	;# 
   829  029B                     	;# 
   830  029C                     	;# 
   831  029E                     	;# 
   832  029F                     	;# 
   833  030C                     	;# 
   834  030D                     	;# 
   835  030E                     	;# 
   836  0315                     	;# 
   837  0316                     	;# 
   838  0317                     	;# 
   839  0318                     	;# 
   840  0319                     	;# 
   841  031B                     	;# 
   842  031C                     	;# 
   843  031D                     	;# 
   844  031E                     	;# 
   845  031F                     	;# 
   846  038C                     	;# 
   847  038D                     	;# 
   848  038E                     	;# 
   849  0390                     	;# 
   850  0391                     	;# 
   851  0392                     	;# 
   852  0393                     	;# 
   853  0394                     	;# 
   854  0395                     	;# 
   855  0396                     	;# 
   856  0397                     	;# 
   857  0398                     	;# 
   858  0399                     	;# 
   859  039D                     	;# 
   860  039E                     	;# 
   861  039F                     	;# 
   862  040D                     	;# 
   863  040F                     	;# 
   864  040F                     	;# 
   865  0410                     	;# 
   866  0411                     	;# 
   867  0412                     	;# 
   868  0413                     	;# 
   869  0413                     	;# 
   870  0414                     	;# 
   871  0414                     	;# 
   872  0415                     	;# 
   873  0416                     	;# 
   874  0417                     	;# 
   875  0418                     	;# 
   876  041A                     	;# 
   877  041A                     	;# 
   878  041B                     	;# 
   879  041B                     	;# 
   880  041C                     	;# 
   881  041D                     	;# 
   882  041E                     	;# 
   883  041F                     	;# 
   884  048E                     	;# 
   885  048E                     	;# 
   886  048F                     	;# 
   887  0490                     	;# 
   888  0491                     	;# 
   889  0492                     	;# 
   890  0493                     	;# 
   891  0493                     	;# 
   892  0494                     	;# 
   893  0494                     	;# 
   894  0495                     	;# 
   895  0496                     	;# 
   896  0497                     	;# 
   897  0498                     	;# 
   898  049A                     	;# 
   899  049A                     	;# 
   900  049B                     	;# 
   901  049B                     	;# 
   902  049C                     	;# 
   903  049D                     	;# 
   904  049E                     	;# 
   905  049F                     	;# 
   906  050F                     	;# 
   907  0510                     	;# 
   908  0511                     	;# 
   909  0512                     	;# 
   910  0513                     	;# 
   911  0514                     	;# 
   912  0515                     	;# 
   913  0516                     	;# 
   914  0517                     	;# 
   915  0518                     	;# 
   916  0519                     	;# 
   917  051A                     	;# 
   918  058D                     	;# 
   919  058E                     	;# 
   920  058F                     	;# 
   921  058F                     	;# 
   922  058F                     	;# 
   923  0590                     	;# 
   924  0590                     	;# 
   925  0591                     	;# 
   926  0592                     	;# 
   927  0592                     	;# 
   928  0592                     	;# 
   929  0593                     	;# 
   930  0593                     	;# 
   931  0594                     	;# 
   932  0595                     	;# 
   933  0595                     	;# 
   934  0596                     	;# 
   935  0597                     	;# 
   936  0597                     	;# 
   937  0598                     	;# 
   938  0599                     	;# 
   939  0599                     	;# 
   940  0599                     	;# 
   941  059A                     	;# 
   942  059A                     	;# 
   943  059E                     	;# 
   944  059F                     	;# 
   945  059F                     	;# 
   946  0614                     	;# 
   947  0614                     	;# 
   948  0615                     	;# 
   949  0616                     	;# 
   950  0617                     	;# 
   951  0617                     	;# 
   952  0618                     	;# 
   953  0619                     	;# 
   954  061A                     	;# 
   955  061A                     	;# 
   956  061B                     	;# 
   957  061C                     	;# 
   958  068D                     	;# 
   959  068E                     	;# 
   960  068F                     	;# 
   961  0690                     	;# 
   962  0691                     	;# 
   963  0692                     	;# 
   964  0693                     	;# 
   965  0694                     	;# 
   966  0695                     	;# 
   967  0696                     	;# 
   968  0697                     	;# 
   969  0698                     	;# 
   970  0699                     	;# 
   971  069A                     	;# 
   972  069B                     	;# 
   973  069C                     	;# 
   974  069D                     	;# 
   975  069E                     	;# 
   976  069F                     	;# 
   977  070D                     	;# 
   978  070E                     	;# 
   979  070F                     	;# 
   980  0710                     	;# 
   981  0711                     	;# 
   982  0712                     	;# 
   983  0713                     	;# 
   984  0714                     	;# 
   985  0715                     	;# 
   986  0716                     	;# 
   987  0717                     	;# 
   988  0718                     	;# 
   989  0719                     	;# 
   990  071A                     	;# 
   991  071B                     	;# 
   992  071C                     	;# 
   993  071D                     	;# 
   994  071E                     	;# 
   995  071F                     	;# 
   996  078E                     	;# 
   997  078F                     	;# 
   998  0790                     	;# 
   999  0791                     	;# 
  1000  0792                     	;# 
  1001  0793                     	;# 
  1002  0794                     	;# 
  1003  0795                     	;# 
  1004  0796                     	;# 
  1005  0797                     	;# 
  1006  0798                     	;# 
  1007  0799                     	;# 
  1008  079A                     	;# 
  1009  079B                     	;# 
  1010  079C                     	;# 
  1011  079D                     	;# 
  1012  079E                     	;# 
  1013  079F                     	;# 
  1014  080D                     	;# 
  1015  080E                     	;# 
  1016  080F                     	;# 
  1017  0810                     	;# 
  1018  0811                     	;# 
  1019  0812                     	;# 
  1020  0813                     	;# 
  1021  0814                     	;# 
  1022  0815                     	;# 
  1023  0816                     	;# 
  1024  0817                     	;# 
  1025  0818                     	;# 
  1026  0819                     	;# 
  1027  081A                     	;# 
  1028  081B                     	;# 
  1029  081C                     	;# 
  1030  081D                     	;# 
  1031  081E                     	;# 
  1032  081F                     	;# 
  1033  090C                     	;# 
  1034  090D                     	;# 
  1035  090E                     	;# 
  1036  090F                     	;# 
  1037  0910                     	;# 
  1038  0911                     	;# 
  1039  0912                     	;# 
  1040  0913                     	;# 
  1041  0914                     	;# 
  1042  0915                     	;# 
  1043  0916                     	;# 
  1044  0917                     	;# 
  1045  0D8E                     	;# 
  1046  0D8F                     	;# 
  1047  0D90                     	;# 
  1048  0D91                     	;# 
  1049  0D91                     	;# 
  1050  0D92                     	;# 
  1051  0D93                     	;# 
  1052  0D93                     	;# 
  1053  0D94                     	;# 
  1054  0D95                     	;# 
  1055  0D95                     	;# 
  1056  0D96                     	;# 
  1057  0D97                     	;# 
  1058  0D97                     	;# 
  1059  0D98                     	;# 
  1060  0D99                     	;# 
  1061  0D99                     	;# 
  1062  0D9A                     	;# 
  1063  0D9B                     	;# 
  1064  0D9C                     	;# 
  1065  0D9C                     	;# 
  1066  0D9D                     	;# 
  1067  0D9D                     	;# 
  1068  0D9E                     	;# 
  1069  0D9F                     	;# 
  1070  0DA0                     	;# 
  1071  0DA1                     	;# 
  1072  0DA1                     	;# 
  1073  0DA2                     	;# 
  1074  0DA3                     	;# 
  1075  0DA3                     	;# 
  1076  0DA4                     	;# 
  1077  0DA5                     	;# 
  1078  0DA5                     	;# 
  1079  0DA6                     	;# 
  1080  0DA7                     	;# 
  1081  0DA7                     	;# 
  1082  0DA8                     	;# 
  1083  0DA9                     	;# 
  1084  0DA9                     	;# 
  1085  0DAA                     	;# 
  1086  0DAB                     	;# 
  1087  0DAC                     	;# 
  1088  0DAC                     	;# 
  1089  0DAD                     	;# 
  1090  0DAD                     	;# 
  1091  0DAE                     	;# 
  1092  0DAF                     	;# 
  1093  0DB0                     	;# 
  1094  0DB1                     	;# 
  1095  0DB1                     	;# 
  1096  0DB2                     	;# 
  1097  0DB3                     	;# 
  1098  0DB3                     	;# 
  1099  0DB4                     	;# 
  1100  0DB5                     	;# 
  1101  0DB5                     	;# 
  1102  0DB6                     	;# 
  1103  0DB7                     	;# 
  1104  0DB7                     	;# 
  1105  0DB8                     	;# 
  1106  0DB9                     	;# 
  1107  0DB9                     	;# 
  1108  0DBA                     	;# 
  1109  0DBB                     	;# 
  1110  0DBC                     	;# 
  1111  0DBC                     	;# 
  1112  0DBD                     	;# 
  1113  0DBD                     	;# 
  1114  0DBE                     	;# 
  1115  0DBF                     	;# 
  1116  0DC0                     	;# 
  1117  0E0C                     	;# 
  1118  0E0D                     	;# 
  1119  0E0E                     	;# 
  1120  0E0F                     	;# 
  1121  0E10                     	;# 
  1122  0E11                     	;# 
  1123  0E12                     	;# 
  1124  0E13                     	;# 
  1125  0E14                     	;# 
  1126  0E15                     	;# 
  1127  0E15                     	;# 
  1128  0E15                     	;# 
  1129  0E16                     	;# 
  1130  0E16                     	;# 
  1131  0E16                     	;# 
  1132  0E17                     	;# 
  1133  0E17                     	;# 
  1134  0E17                     	;# 
  1135  0E18                     	;# 
  1136  0E18                     	;# 
  1137  0E18                     	;# 
  1138  0E19                     	;# 
  1139  0E1A                     	;# 
  1140  0E1B                     	;# 
  1141  0E1D                     	;# 
  1142  0E1E                     	;# 
  1143  0E1F                     	;# 
  1144  0E21                     	;# 
  1145  0E22                     	;# 
  1146  0E23                     	;# 
  1147  0E24                     	;# 
  1148  0E25                     	;# 
  1149  0E26                     	;# 
  1150  0E27                     	;# 
  1151  0E28                     	;# 
  1152  0E29                     	;# 
  1153  0E2D                     	;# 
  1154  0E2E                     	;# 
  1155  0E2F                     	;# 
  1156  0E30                     	;# 
  1157  0E31                     	;# 
  1158  0E32                     	;# 
  1159  0E35                     	;# 
  1160  0E36                     	;# 
  1161  0E37                     	;# 
  1162  0E38                     	;# 
  1163  0E39                     	;# 
  1164  0E3A                     	;# 
  1165  0E3B                     	;# 
  1166  0E3C                     	;# 
  1167  0E3D                     	;# 
  1168  0E3E                     	;# 
  1169  0E90                     	;# 
  1170  0E91                     	;# 
  1171  0E92                     	;# 
  1172  0E93                     	;# 
  1173  0E94                     	;# 
  1174  0E95                     	;# 
  1175  0E96                     	;# 
  1176  0E97                     	;# 
  1177  0E98                     	;# 
  1178  0E99                     	;# 
  1179  0E9A                     	;# 
  1180  0E9B                     	;# 
  1181  0E9C                     	;# 
  1182  0E9D                     	;# 
  1183  0E9E                     	;# 
  1184  0E9F                     	;# 
  1185  0EA0                     	;# 
  1186  0EA1                     	;# 
  1187  0EA2                     	;# 
  1188  0EA3                     	;# 
  1189  0EA4                     	;# 
  1190  0EA5                     	;# 
  1191  0EA6                     	;# 
  1192  0EA7                     	;# 
  1193  0F0F                     	;# 
  1194  0F10                     	;# 
  1195  0F11                     	;# 
  1196  0F12                     	;# 
  1197  0F13                     	;# 
  1198  0F14                     	;# 
  1199  0F15                     	;# 
  1200  0F16                     	;# 
  1201  0F17                     	;# 
  1202  0F18                     	;# 
  1203  0F19                     	;# 
  1204  0F1A                     	;# 
  1205  0F1B                     	;# 
  1206  0F1C                     	;# 
  1207  0F1D                     	;# 
  1208  0F1E                     	;# 
  1209  0F1F                     	;# 
  1210  0F20                     	;# 
  1211  0F21                     	;# 
  1212  0F22                     	;# 
  1213  0F23                     	;# 
  1214  0F24                     	;# 
  1215  0F25                     	;# 
  1216  0F26                     	;# 
  1217  0F27                     	;# 
  1218  0F28                     	;# 
  1219  0F29                     	;# 
  1220  0F2A                     	;# 
  1221  0F2B                     	;# 
  1222  0F2C                     	;# 
  1223  0F2D                     	;# 
  1224  0F2E                     	;# 
  1225  0F2F                     	;# 
  1226  0F30                     	;# 
  1227  0F31                     	;# 
  1228  0F32                     	;# 
  1229  0F33                     	;# 
  1230  0F34                     	;# 
  1231  0F35                     	;# 
  1232  0F36                     	;# 
  1233  0F37                     	;# 
  1234  0FE4                     	;# 
  1235  0FE5                     	;# 
  1236  0FE6                     	;# 
  1237  0FE7                     	;# 
  1238  0FE8                     	;# 
  1239  0FE9                     	;# 
  1240  0FEA                     	;# 
  1241  0FEB                     	;# 
  1242  0FED                     	;# 
  1243  0FEE                     	;# 
  1244  0FEF                     	;# 
  1245  0000                     	;# 
  1246  0001                     	;# 
  1247  0002                     	;# 
  1248  0003                     	;# 
  1249  0004                     	;# 
  1250  0005                     	;# 
  1251  0006                     	;# 
  1252  0007                     	;# 
  1253  0008                     	;# 
  1254  0009                     	;# 
  1255  000A                     	;# 
  1256  000B                     	;# 
  1257  000C                     	;# 
  1258  000D                     	;# 
  1259  000E                     	;# 
  1260  0010                     	;# 
  1261  0011                     	;# 
  1262  0012                     	;# 
  1263  0013                     	;# 
  1264  0014                     	;# 
  1265  0015                     	;# 
  1266  0016                     	;# 
  1267  0017                     	;# 
  1268  0018                     	;# 
  1269  0018                     	;# 
  1270  0019                     	;# 
  1271  001A                     	;# 
  1272  001B                     	;# 
  1273  001C                     	;# 
  1274  001C                     	;# 
  1275  001D                     	;# 
  1276  001E                     	;# 
  1277  001F                     	;# 
  1278  008C                     	;# 
  1279  008D                     	;# 
  1280  008E                     	;# 
  1281  0090                     	;# 
  1282  0091                     	;# 
  1283  0092                     	;# 
  1284  0093                     	;# 
  1285  0094                     	;# 
  1286  0095                     	;# 
  1287  0096                     	;# 
  1288  0097                     	;# 
  1289  0098                     	;# 
  1290  0099                     	;# 
  1291  009A                     	;# 
  1292  009B                     	;# 
  1293  009C                     	;# 
  1294  009D                     	;# 
  1295  009E                     	;# 
  1296  009F                     	;# 
  1297  010C                     	;# 
  1298  010D                     	;# 
  1299  010E                     	;# 
  1300  0111                     	;# 
  1301  0112                     	;# 
  1302  0113                     	;# 
  1303  0114                     	;# 
  1304  0115                     	;# 
  1305  0116                     	;# 
  1306  0117                     	;# 
  1307  0118                     	;# 
  1308  0119                     	;# 
  1309  011A                     	;# 
  1310  011B                     	;# 
  1311  011C                     	;# 
  1312  011D                     	;# 
  1313  018C                     	;# 
  1314  018D                     	;# 
  1315  018E                     	;# 
  1316  0191                     	;# 
  1317  0191                     	;# 
  1318  0192                     	;# 
  1319  0193                     	;# 
  1320  0193                     	;# 
  1321  0194                     	;# 
  1322  0195                     	;# 
  1323  0196                     	;# 
  1324  0197                     	;# 
  1325  0199                     	;# 
  1326  0199                     	;# 
  1327  0199                     	;# 
  1328  019A                     	;# 
  1329  019A                     	;# 
  1330  019A                     	;# 
  1331  019B                     	;# 
  1332  019B                     	;# 
  1333  019B                     	;# 
  1334  019B                     	;# 
  1335  019B                     	;# 
  1336  019C                     	;# 
  1337  019C                     	;# 
  1338  019C                     	;# 
  1339  019D                     	;# 
  1340  019D                     	;# 
  1341  019D                     	;# 
  1342  019E                     	;# 
  1343  019E                     	;# 
  1344  019E                     	;# 
  1345  019F                     	;# 
  1346  019F                     	;# 
  1347  019F                     	;# 
  1348  019F                     	;# 
  1349  019F                     	;# 
  1350  020C                     	;# 
  1351  020D                     	;# 
  1352  020E                     	;# 
  1353  0210                     	;# 
  1354  0211                     	;# 
  1355  0211                     	;# 
  1356  0212                     	;# 
  1357  0212                     	;# 
  1358  0213                     	;# 
  1359  0213                     	;# 
  1360  0214                     	;# 
  1361  0214                     	;# 
  1362  0215                     	;# 
  1363  0215                     	;# 
  1364  0215                     	;# 
  1365  0215                     	;# 
  1366  0216                     	;# 
  1367  0216                     	;# 
  1368  0217                     	;# 
  1369  0217                     	;# 
  1370  021B                     	;# 
  1371  021C                     	;# 
  1372  021D                     	;# 
  1373  021E                     	;# 
  1374  021F                     	;# 
  1375  028C                     	;# 
  1376  028D                     	;# 
  1377  028E                     	;# 
  1378  0291                     	;# 
  1379  0291                     	;# 
  1380  0292                     	;# 
  1381  0293                     	;# 
  1382  0294                     	;# 
  1383  0295                     	;# 
  1384  0295                     	;# 
  1385  0296                     	;# 
  1386  0297                     	;# 
  1387  0298                     	;# 
  1388  0299                     	;# 
  1389  0299                     	;# 
  1390  029A                     	;# 
  1391  029B                     	;# 
  1392  029C                     	;# 
  1393  029E                     	;# 
  1394  029F                     	;# 
  1395  030C                     	;# 
  1396  030D                     	;# 
  1397  030E                     	;# 
  1398  0315                     	;# 
  1399  0316                     	;# 
  1400  0317                     	;# 
  1401  0318                     	;# 
  1402  0319                     	;# 
  1403  031B                     	;# 
  1404  031C                     	;# 
  1405  031D                     	;# 
  1406  031E                     	;# 
  1407  031F                     	;# 
  1408  038C                     	;# 
  1409  038D                     	;# 
  1410  038E                     	;# 
  1411  0390                     	;# 
  1412  0391                     	;# 
  1413  0392                     	;# 
  1414  0393                     	;# 
  1415  0394                     	;# 
  1416  0395                     	;# 
  1417  0396                     	;# 
  1418  0397                     	;# 
  1419  0398                     	;# 
  1420  0399                     	;# 
  1421  039D                     	;# 
  1422  039E                     	;# 
  1423  039F                     	;# 
  1424  040D                     	;# 
  1425  040F                     	;# 
  1426  040F                     	;# 
  1427  0410                     	;# 
  1428  0411                     	;# 
  1429  0412                     	;# 
  1430  0413                     	;# 
  1431  0413                     	;# 
  1432  0414                     	;# 
  1433  0414                     	;# 
  1434  0415                     	;# 
  1435  0416                     	;# 
  1436  0417                     	;# 
  1437  0418                     	;# 
  1438  041A                     	;# 
  1439  041A                     	;# 
  1440  041B                     	;# 
  1441  041B                     	;# 
  1442  041C                     	;# 
  1443  041D                     	;# 
  1444  041E                     	;# 
  1445  041F                     	;# 
  1446  048E                     	;# 
  1447  048E                     	;# 
  1448  048F                     	;# 
  1449  0490                     	;# 
  1450  0491                     	;# 
  1451  0492                     	;# 
  1452  0493                     	;# 
  1453  0493                     	;# 
  1454  0494                     	;# 
  1455  0494                     	;# 
  1456  0495                     	;# 
  1457  0496                     	;# 
  1458  0497                     	;# 
  1459  0498                     	;# 
  1460  049A                     	;# 
  1461  049A                     	;# 
  1462  049B                     	;# 
  1463  049B                     	;# 
  1464  049C                     	;# 
  1465  049D                     	;# 
  1466  049E                     	;# 
  1467  049F                     	;# 
  1468  050F                     	;# 
  1469  0510                     	;# 
  1470  0511                     	;# 
  1471  0512                     	;# 
  1472  0513                     	;# 
  1473  0514                     	;# 
  1474  0515                     	;# 
  1475  0516                     	;# 
  1476  0517                     	;# 
  1477  0518                     	;# 
  1478  0519                     	;# 
  1479  051A                     	;# 
  1480  058D                     	;# 
  1481  058E                     	;# 
  1482  058F                     	;# 
  1483  058F                     	;# 
  1484  058F                     	;# 
  1485  0590                     	;# 
  1486  0590                     	;# 
  1487  0591                     	;# 
  1488  0592                     	;# 
  1489  0592                     	;# 
  1490  0592                     	;# 
  1491  0593                     	;# 
  1492  0593                     	;# 
  1493  0594                     	;# 
  1494  0595                     	;# 
  1495  0595                     	;# 
  1496  0596                     	;# 
  1497  0597                     	;# 
  1498  0597                     	;# 
  1499  0598                     	;# 
  1500  0599                     	;# 
  1501  0599                     	;# 
  1502  0599                     	;# 
  1503  059A                     	;# 
  1504  059A                     	;# 
  1505  059E                     	;# 
  1506  059F                     	;# 
  1507  059F                     	;# 
  1508  0614                     	;# 
  1509  0614                     	;# 
  1510  0615                     	;# 
  1511  0616                     	;# 
  1512  0617                     	;# 
  1513  0617                     	;# 
  1514  0618                     	;# 
  1515  0619                     	;# 
  1516  061A                     	;# 
  1517  061A                     	;# 
  1518  061B                     	;# 
  1519  061C                     	;# 
  1520  068D                     	;# 
  1521  068E                     	;# 
  1522  068F                     	;# 
  1523  0690                     	;# 
  1524  0691                     	;# 
  1525  0692                     	;# 
  1526  0693                     	;# 
  1527  0694                     	;# 
  1528  0695                     	;# 
  1529  0696                     	;# 
  1530  0697                     	;# 
  1531  0698                     	;# 
  1532  0699                     	;# 
  1533  069A                     	;# 
  1534  069B                     	;# 
  1535  069C                     	;# 
  1536  069D                     	;# 
  1537  069E                     	;# 
  1538  069F                     	;# 
  1539  070D                     	;# 
  1540  070E                     	;# 
  1541  070F                     	;# 
  1542  0710                     	;# 
  1543  0711                     	;# 
  1544  0712                     	;# 
  1545  0713                     	;# 
  1546  0714                     	;# 
  1547  0715                     	;# 
  1548  0716                     	;# 
  1549  0717                     	;# 
  1550  0718                     	;# 
  1551  0719                     	;# 
  1552  071A                     	;# 
  1553  071B                     	;# 
  1554  071C                     	;# 
  1555  071D                     	;# 
  1556  071E                     	;# 
  1557  071F                     	;# 
  1558  078E                     	;# 
  1559  078F                     	;# 
  1560  0790                     	;# 
  1561  0791                     	;# 
  1562  0792                     	;# 
  1563  0793                     	;# 
  1564  0794                     	;# 
  1565  0795                     	;# 
  1566  0796                     	;# 
  1567  0797                     	;# 
  1568  0798                     	;# 
  1569  0799                     	;# 
  1570  079A                     	;# 
  1571  079B                     	;# 
  1572  079C                     	;# 
  1573  079D                     	;# 
  1574  079E                     	;# 
  1575  079F                     	;# 
  1576  080D                     	;# 
  1577  080E                     	;# 
  1578  080F                     	;# 
  1579  0810                     	;# 
  1580  0811                     	;# 
  1581  0812                     	;# 
  1582  0813                     	;# 
  1583  0814                     	;# 
  1584  0815                     	;# 
  1585  0816                     	;# 
  1586  0817                     	;# 
  1587  0818                     	;# 
  1588  0819                     	;# 
  1589  081A                     	;# 
  1590  081B                     	;# 
  1591  081C                     	;# 
  1592  081D                     	;# 
  1593  081E                     	;# 
  1594  081F                     	;# 
  1595  090C                     	;# 
  1596  090D                     	;# 
  1597  090E                     	;# 
  1598  090F                     	;# 
  1599  0910                     	;# 
  1600  0911                     	;# 
  1601  0912                     	;# 
  1602  0913                     	;# 
  1603  0914                     	;# 
  1604  0915                     	;# 
  1605  0916                     	;# 
  1606  0917                     	;# 
  1607  0D8E                     	;# 
  1608  0D8F                     	;# 
  1609  0D90                     	;# 
  1610  0D91                     	;# 
  1611  0D91                     	;# 
  1612  0D92                     	;# 
  1613  0D93                     	;# 
  1614  0D93                     	;# 
  1615  0D94                     	;# 
  1616  0D95                     	;# 
  1617  0D95                     	;# 
  1618  0D96                     	;# 
  1619  0D97                     	;# 
  1620  0D97                     	;# 
  1621  0D98                     	;# 
  1622  0D99                     	;# 
  1623  0D99                     	;# 
  1624  0D9A                     	;# 
  1625  0D9B                     	;# 
  1626  0D9C                     	;# 
  1627  0D9C                     	;# 
  1628  0D9D                     	;# 
  1629  0D9D                     	;# 
  1630  0D9E                     	;# 
  1631  0D9F                     	;# 
  1632  0DA0                     	;# 
  1633  0DA1                     	;# 
  1634  0DA1                     	;# 
  1635  0DA2                     	;# 
  1636  0DA3                     	;# 
  1637  0DA3                     	;# 
  1638  0DA4                     	;# 
  1639  0DA5                     	;# 
  1640  0DA5                     	;# 
  1641  0DA6                     	;# 
  1642  0DA7                     	;# 
  1643  0DA7                     	;# 
  1644  0DA8                     	;# 
  1645  0DA9                     	;# 
  1646  0DA9                     	;# 
  1647  0DAA                     	;# 
  1648  0DAB                     	;# 
  1649  0DAC                     	;# 
  1650  0DAC                     	;# 
  1651  0DAD                     	;# 
  1652  0DAD                     	;# 
  1653  0DAE                     	;# 
  1654  0DAF                     	;# 
  1655  0DB0                     	;# 
  1656  0DB1                     	;# 
  1657  0DB1                     	;# 
  1658  0DB2                     	;# 
  1659  0DB3                     	;# 
  1660  0DB3                     	;# 
  1661  0DB4                     	;# 
  1662  0DB5                     	;# 
  1663  0DB5                     	;# 
  1664  0DB6                     	;# 
  1665  0DB7                     	;# 
  1666  0DB7                     	;# 
  1667  0DB8                     	;# 
  1668  0DB9                     	;# 
  1669  0DB9                     	;# 
  1670  0DBA                     	;# 
  1671  0DBB                     	;# 
  1672  0DBC                     	;# 
  1673  0DBC                     	;# 
  1674  0DBD                     	;# 
  1675  0DBD                     	;# 
  1676  0DBE                     	;# 
  1677  0DBF                     	;# 
  1678  0DC0                     	;# 
  1679  0E0C                     	;# 
  1680  0E0D                     	;# 
  1681  0E0E                     	;# 
  1682  0E0F                     	;# 
  1683  0E10                     	;# 
  1684  0E11                     	;# 
  1685  0E12                     	;# 
  1686  0E13                     	;# 
  1687  0E14                     	;# 
  1688  0E15                     	;# 
  1689  0E15                     	;# 
  1690  0E15                     	;# 
  1691  0E16                     	;# 
  1692  0E16                     	;# 
  1693  0E16                     	;# 
  1694  0E17                     	;# 
  1695  0E17                     	;# 
  1696  0E17                     	;# 
  1697  0E18                     	;# 
  1698  0E18                     	;# 
  1699  0E18                     	;# 
  1700  0E19                     	;# 
  1701  0E1A                     	;# 
  1702  0E1B                     	;# 
  1703  0E1D                     	;# 
  1704  0E1E                     	;# 
  1705  0E1F                     	;# 
  1706  0E21                     	;# 
  1707  0E22                     	;# 
  1708  0E23                     	;# 
  1709  0E24                     	;# 
  1710  0E25                     	;# 
  1711  0E26                     	;# 
  1712  0E27                     	;# 
  1713  0E28                     	;# 
  1714  0E29                     	;# 
  1715  0E2D                     	;# 
  1716  0E2E                     	;# 
  1717  0E2F                     	;# 
  1718  0E30                     	;# 
  1719  0E31                     	;# 
  1720  0E32                     	;# 
  1721  0E35                     	;# 
  1722  0E36                     	;# 
  1723  0E37                     	;# 
  1724  0E38                     	;# 
  1725  0E39                     	;# 
  1726  0E3A                     	;# 
  1727  0E3B                     	;# 
  1728  0E3C                     	;# 
  1729  0E3D                     	;# 
  1730  0E3E                     	;# 
  1731  0E90                     	;# 
  1732  0E91                     	;# 
  1733  0E92                     	;# 
  1734  0E93                     	;# 
  1735  0E94                     	;# 
  1736  0E95                     	;# 
  1737  0E96                     	;# 
  1738  0E97                     	;# 
  1739  0E98                     	;# 
  1740  0E99                     	;# 
  1741  0E9A                     	;# 
  1742  0E9B                     	;# 
  1743  0E9C                     	;# 
  1744  0E9D                     	;# 
  1745  0E9E                     	;# 
  1746  0E9F                     	;# 
  1747  0EA0                     	;# 
  1748  0EA1                     	;# 
  1749  0EA2                     	;# 
  1750  0EA3                     	;# 
  1751  0EA4                     	;# 
  1752  0EA5                     	;# 
  1753  0EA6                     	;# 
  1754  0EA7                     	;# 
  1755  0F0F                     	;# 
  1756  0F10                     	;# 
  1757  0F11                     	;# 
  1758  0F12                     	;# 
  1759  0F13                     	;# 
  1760  0F14                     	;# 
  1761  0F15                     	;# 
  1762  0F16                     	;# 
  1763  0F17                     	;# 
  1764  0F18                     	;# 
  1765  0F19                     	;# 
  1766  0F1A                     	;# 
  1767  0F1B                     	;# 
  1768  0F1C                     	;# 
  1769  0F1D                     	;# 
  1770  0F1E                     	;# 
  1771  0F1F                     	;# 
  1772  0F20                     	;# 
  1773  0F21                     	;# 
  1774  0F22                     	;# 
  1775  0F23                     	;# 
  1776  0F24                     	;# 
  1777  0F25                     	;# 
  1778  0F26                     	;# 
  1779  0F27                     	;# 
  1780  0F28                     	;# 
  1781  0F29                     	;# 
  1782  0F2A                     	;# 
  1783  0F2B                     	;# 
  1784  0F2C                     	;# 
  1785  0F2D                     	;# 
  1786  0F2E                     	;# 
  1787  0F2F                     	;# 
  1788  0F30                     	;# 
  1789  0F31                     	;# 
  1790  0F32                     	;# 
  1791  0F33                     	;# 
  1792  0F34                     	;# 
  1793  0F35                     	;# 
  1794  0F36                     	;# 
  1795  0F37                     	;# 
  1796  0FE4                     	;# 
  1797  0FE5                     	;# 
  1798  0FE6                     	;# 
  1799  0FE7                     	;# 
  1800  0FE8                     	;# 
  1801  0FE9                     	;# 
  1802  0FEA                     	;# 
  1803  0FEB                     	;# 
  1804  0FED                     	;# 
  1805  0FEE                     	;# 
  1806  0FEF                     	;# 
  1807  0000                     	;# 
  1808  0001                     	;# 
  1809  0002                     	;# 
  1810  0003                     	;# 
  1811  0004                     	;# 
  1812  0005                     	;# 
  1813  0006                     	;# 
  1814  0007                     	;# 
  1815  0008                     	;# 
  1816  0009                     	;# 
  1817  000A                     	;# 
  1818  000B                     	;# 
  1819  000C                     	;# 
  1820  000D                     	;# 
  1821  000E                     	;# 
  1822  0010                     	;# 
  1823  0011                     	;# 
  1824  0012                     	;# 
  1825  0013                     	;# 
  1826  0014                     	;# 
  1827  0015                     	;# 
  1828  0016                     	;# 
  1829  0017                     	;# 
  1830  0018                     	;# 
  1831  0018                     	;# 
  1832  0019                     	;# 
  1833  001A                     	;# 
  1834  001B                     	;# 
  1835  001C                     	;# 
  1836  001C                     	;# 
  1837  001D                     	;# 
  1838  001E                     	;# 
  1839  001F                     	;# 
  1840  008C                     	;# 
  1841  008D                     	;# 
  1842  008E                     	;# 
  1843  0090                     	;# 
  1844  0091                     	;# 
  1845  0092                     	;# 
  1846  0093                     	;# 
  1847  0094                     	;# 
  1848  0095                     	;# 
  1849  0096                     	;# 
  1850  0097                     	;# 
  1851  0098                     	;# 
  1852  0099                     	;# 
  1853  009A                     	;# 
  1854  009B                     	;# 
  1855  009C                     	;# 
  1856  009D                     	;# 
  1857  009E                     	;# 
  1858  009F                     	;# 
  1859  010C                     	;# 
  1860  010D                     	;# 
  1861  010E                     	;# 
  1862  0111                     	;# 
  1863  0112                     	;# 
  1864  0113                     	;# 
  1865  0114                     	;# 
  1866  0115                     	;# 
  1867  0116                     	;# 
  1868  0117                     	;# 
  1869  0118                     	;# 
  1870  0119                     	;# 
  1871  011A                     	;# 
  1872  011B                     	;# 
  1873  011C                     	;# 
  1874  011D                     	;# 
  1875  018C                     	;# 
  1876  018D                     	;# 
  1877  018E                     	;# 
  1878  0191                     	;# 
  1879  0191                     	;# 
  1880  0192                     	;# 
  1881  0193                     	;# 
  1882  0193                     	;# 
  1883  0194                     	;# 
  1884  0195                     	;# 
  1885  0196                     	;# 
  1886  0197                     	;# 
  1887  0199                     	;# 
  1888  0199                     	;# 
  1889  0199                     	;# 
  1890  019A                     	;# 
  1891  019A                     	;# 
  1892  019A                     	;# 
  1893  019B                     	;# 
  1894  019B                     	;# 
  1895  019B                     	;# 
  1896  019B                     	;# 
  1897  019B                     	;# 
  1898  019C                     	;# 
  1899  019C                     	;# 
  1900  019C                     	;# 
  1901  019D                     	;# 
  1902  019D                     	;# 
  1903  019D                     	;# 
  1904  019E                     	;# 
  1905  019E                     	;# 
  1906  019E                     	;# 
  1907  019F                     	;# 
  1908  019F                     	;# 
  1909  019F                     	;# 
  1910  019F                     	;# 
  1911  019F                     	;# 
  1912  020C                     	;# 
  1913  020D                     	;# 
  1914  020E                     	;# 
  1915  0210                     	;# 
  1916  0211                     	;# 
  1917  0211                     	;# 
  1918  0212                     	;# 
  1919  0212                     	;# 
  1920  0213                     	;# 
  1921  0213                     	;# 
  1922  0214                     	;# 
  1923  0214                     	;# 
  1924  0215                     	;# 
  1925  0215                     	;# 
  1926  0215                     	;# 
  1927  0215                     	;# 
  1928  0216                     	;# 
  1929  0216                     	;# 
  1930  0217                     	;# 
  1931  0217                     	;# 
  1932  021B                     	;# 
  1933  021C                     	;# 
  1934  021D                     	;# 
  1935  021E                     	;# 
  1936  021F                     	;# 
  1937  028C                     	;# 
  1938  028D                     	;# 
  1939  028E                     	;# 
  1940  0291                     	;# 
  1941  0291                     	;# 
  1942  0292                     	;# 
  1943  0293                     	;# 
  1944  0294                     	;# 
  1945  0295                     	;# 
  1946  0295                     	;# 
  1947  0296                     	;# 
  1948  0297                     	;# 
  1949  0298                     	;# 
  1950  0299                     	;# 
  1951  0299                     	;# 
  1952  029A                     	;# 
  1953  029B                     	;# 
  1954  029C                     	;# 
  1955  029E                     	;# 
  1956  029F                     	;# 
  1957  030C                     	;# 
  1958  030D                     	;# 
  1959  030E                     	;# 
  1960  0315                     	;# 
  1961  0316                     	;# 
  1962  0317                     	;# 
  1963  0318                     	;# 
  1964  0319                     	;# 
  1965  031B                     	;# 
  1966  031C                     	;# 
  1967  031D                     	;# 
  1968  031E                     	;# 
  1969  031F                     	;# 
  1970  038C                     	;# 
  1971  038D                     	;# 
  1972  038E                     	;# 
  1973  0390                     	;# 
  1974  0391                     	;# 
  1975  0392                     	;# 
  1976  0393                     	;# 
  1977  0394                     	;# 
  1978  0395                     	;# 
  1979  0396                     	;# 
  1980  0397                     	;# 
  1981  0398                     	;# 
  1982  0399                     	;# 
  1983  039D                     	;# 
  1984  039E                     	;# 
  1985  039F                     	;# 
  1986  040D                     	;# 
  1987  040F                     	;# 
  1988  040F                     	;# 
  1989  0410                     	;# 
  1990  0411                     	;# 
  1991  0412                     	;# 
  1992  0413                     	;# 
  1993  0413                     	;# 
  1994  0414                     	;# 
  1995  0414                     	;# 
  1996  0415                     	;# 
  1997  0416                     	;# 
  1998  0417                     	;# 
  1999  0418                     	;# 
  2000  041A                     	;# 
  2001  041A                     	;# 
  2002  041B                     	;# 
  2003  041B                     	;# 
  2004  041C                     	;# 
  2005  041D                     	;# 
  2006  041E                     	;# 
  2007  041F                     	;# 
  2008  048E                     	;# 
  2009  048E                     	;# 
  2010  048F                     	;# 
  2011  0490                     	;# 
  2012  0491                     	;# 
  2013  0492                     	;# 
  2014  0493                     	;# 
  2015  0493                     	;# 
  2016  0494                     	;# 
  2017  0494                     	;# 
  2018  0495                     	;# 
  2019  0496                     	;# 
  2020  0497                     	;# 
  2021  0498                     	;# 
  2022  049A                     	;# 
  2023  049A                     	;# 
  2024  049B                     	;# 
  2025  049B                     	;# 
  2026  049C                     	;# 
  2027  049D                     	;# 
  2028  049E                     	;# 
  2029  049F                     	;# 
  2030  050F                     	;# 
  2031  0510                     	;# 
  2032  0511                     	;# 
  2033  0512                     	;# 
  2034  0513                     	;# 
  2035  0514                     	;# 
  2036  0515                     	;# 
  2037  0516                     	;# 
  2038  0517                     	;# 
  2039  0518                     	;# 
  2040  0519                     	;# 
  2041  051A                     	;# 
  2042  058D                     	;# 
  2043  058E                     	;# 
  2044  058F                     	;# 
  2045  058F                     	;# 
  2046  058F                     	;# 
  2047  0590                     	;# 
  2048  0590                     	;# 
  2049  0591                     	;# 
  2050  0592                     	;# 
  2051  0592                     	;# 
  2052  0592                     	;# 
  2053  0593                     	;# 
  2054  0593                     	;# 
  2055  0594                     	;# 
  2056  0595                     	;# 
  2057  0595                     	;# 
  2058  0596                     	;# 
  2059  0597                     	;# 
  2060  0597                     	;# 
  2061  0598                     	;# 
  2062  0599                     	;# 
  2063  0599                     	;# 
  2064  0599                     	;# 
  2065  059A                     	;# 
  2066  059A                     	;# 
  2067  059E                     	;# 
  2068  059F                     	;# 
  2069  059F                     	;# 
  2070  0614                     	;# 
  2071  0614                     	;# 
  2072  0615                     	;# 
  2073  0616                     	;# 
  2074  0617                     	;# 
  2075  0617                     	;# 
  2076  0618                     	;# 
  2077  0619                     	;# 
  2078  061A                     	;# 
  2079  061A                     	;# 
  2080  061B                     	;# 
  2081  061C                     	;# 
  2082  068D                     	;# 
  2083  068E                     	;# 
  2084  068F                     	;# 
  2085  0690                     	;# 
  2086  0691                     	;# 
  2087  0692                     	;# 
  2088  0693                     	;# 
  2089  0694                     	;# 
  2090  0695                     	;# 
  2091  0696                     	;# 
  2092  0697                     	;# 
  2093  0698                     	;# 
  2094  0699                     	;# 
  2095  069A                     	;# 
  2096  069B                     	;# 
  2097  069C                     	;# 
  2098  069D                     	;# 
  2099  069E                     	;# 
  2100  069F                     	;# 
  2101  070D                     	;# 
  2102  070E                     	;# 
  2103  070F                     	;# 
  2104  0710                     	;# 
  2105  0711                     	;# 
  2106  0712                     	;# 
  2107  0713                     	;# 
  2108  0714                     	;# 
  2109  0715                     	;# 
  2110  0716                     	;# 
  2111  0717                     	;# 
  2112  0718                     	;# 
  2113  0719                     	;# 
  2114  071A                     	;# 
  2115  071B                     	;# 
  2116  071C                     	;# 
  2117  071D                     	;# 
  2118  071E                     	;# 
  2119  071F                     	;# 
  2120  078E                     	;# 
  2121  078F                     	;# 
  2122  0790                     	;# 
  2123  0791                     	;# 
  2124  0792                     	;# 
  2125  0793                     	;# 
  2126  0794                     	;# 
  2127  0795                     	;# 
  2128  0796                     	;# 
  2129  0797                     	;# 
  2130  0798                     	;# 
  2131  0799                     	;# 
  2132  079A                     	;# 
  2133  079B                     	;# 
  2134  079C                     	;# 
  2135  079D                     	;# 
  2136  079E                     	;# 
  2137  079F                     	;# 
  2138  080D                     	;# 
  2139  080E                     	;# 
  2140  080F                     	;# 
  2141  0810                     	;# 
  2142  0811                     	;# 
  2143  0812                     	;# 
  2144  0813                     	;# 
  2145  0814                     	;# 
  2146  0815                     	;# 
  2147  0816                     	;# 
  2148  0817                     	;# 
  2149  0818                     	;# 
  2150  0819                     	;# 
  2151  081A                     	;# 
  2152  081B                     	;# 
  2153  081C                     	;# 
  2154  081D                     	;# 
  2155  081E                     	;# 
  2156  081F                     	;# 
  2157  090C                     	;# 
  2158  090D                     	;# 
  2159  090E                     	;# 
  2160  090F                     	;# 
  2161  0910                     	;# 
  2162  0911                     	;# 
  2163  0912                     	;# 
  2164  0913                     	;# 
  2165  0914                     	;# 
  2166  0915                     	;# 
  2167  0916                     	;# 
  2168  0917                     	;# 
  2169  0D8E                     	;# 
  2170  0D8F                     	;# 
  2171  0D90                     	;# 
  2172  0D91                     	;# 
  2173  0D91                     	;# 
  2174  0D92                     	;# 
  2175  0D93                     	;# 
  2176  0D93                     	;# 
  2177  0D94                     	;# 
  2178  0D95                     	;# 
  2179  0D95                     	;# 
  2180  0D96                     	;# 
  2181  0D97                     	;# 
  2182  0D97                     	;# 
  2183  0D98                     	;# 
  2184  0D99                     	;# 
  2185  0D99                     	;# 
  2186  0D9A                     	;# 
  2187  0D9B                     	;# 
  2188  0D9C                     	;# 
  2189  0D9C                     	;# 
  2190  0D9D                     	;# 
  2191  0D9D                     	;# 
  2192  0D9E                     	;# 
  2193  0D9F                     	;# 
  2194  0DA0                     	;# 
  2195  0DA1                     	;# 
  2196  0DA1                     	;# 
  2197  0DA2                     	;# 
  2198  0DA3                     	;# 
  2199  0DA3                     	;# 
  2200  0DA4                     	;# 
  2201  0DA5                     	;# 
  2202  0DA5                     	;# 
  2203  0DA6                     	;# 
  2204  0DA7                     	;# 
  2205  0DA7                     	;# 
  2206  0DA8                     	;# 
  2207  0DA9                     	;# 
  2208  0DA9                     	;# 
  2209  0DAA                     	;# 
  2210  0DAB                     	;# 
  2211  0DAC                     	;# 
  2212  0DAC                     	;# 
  2213  0DAD                     	;# 
  2214  0DAD                     	;# 
  2215  0DAE                     	;# 
  2216  0DAF                     	;# 
  2217  0DB0                     	;# 
  2218  0DB1                     	;# 
  2219  0DB1                     	;# 
  2220  0DB2                     	;# 
  2221  0DB3                     	;# 
  2222  0DB3                     	;# 
  2223  0DB4                     	;# 
  2224  0DB5                     	;# 
  2225  0DB5                     	;# 
  2226  0DB6                     	;# 
  2227  0DB7                     	;# 
  2228  0DB7                     	;# 
  2229  0DB8                     	;# 
  2230  0DB9                     	;# 
  2231  0DB9                     	;# 
  2232  0DBA                     	;# 
  2233  0DBB                     	;# 
  2234  0DBC                     	;# 
  2235  0DBC                     	;# 
  2236  0DBD                     	;# 
  2237  0DBD                     	;# 
  2238  0DBE                     	;# 
  2239  0DBF                     	;# 
  2240  0DC0                     	;# 
  2241  0E0C                     	;# 
  2242  0E0D                     	;# 
  2243  0E0E                     	;# 
  2244  0E0F                     	;# 
  2245  0E10                     	;# 
  2246  0E11                     	;# 
  2247  0E12                     	;# 
  2248  0E13                     	;# 
  2249  0E14                     	;# 
  2250  0E15                     	;# 
  2251  0E15                     	;# 
  2252  0E15                     	;# 
  2253  0E16                     	;# 
  2254  0E16                     	;# 
  2255  0E16                     	;# 
  2256  0E17                     	;# 
  2257  0E17                     	;# 
  2258  0E17                     	;# 
  2259  0E18                     	;# 
  2260  0E18                     	;# 
  2261  0E18                     	;# 
  2262  0E19                     	;# 
  2263  0E1A                     	;# 
  2264  0E1B                     	;# 
  2265  0E1D                     	;# 
  2266  0E1E                     	;# 
  2267  0E1F                     	;# 
  2268  0E21                     	;# 
  2269  0E22                     	;# 
  2270  0E23                     	;# 
  2271  0E24                     	;# 
  2272  0E25                     	;# 
  2273  0E26                     	;# 
  2274  0E27                     	;# 
  2275  0E28                     	;# 
  2276  0E29                     	;# 
  2277  0E2D                     	;# 
  2278  0E2E                     	;# 
  2279  0E2F                     	;# 
  2280  0E30                     	;# 
  2281  0E31                     	;# 
  2282  0E32                     	;# 
  2283  0E35                     	;# 
  2284  0E36                     	;# 
  2285  0E37                     	;# 
  2286  0E38                     	;# 
  2287  0E39                     	;# 
  2288  0E3A                     	;# 
  2289  0E3B                     	;# 
  2290  0E3C                     	;# 
  2291  0E3D                     	;# 
  2292  0E3E                     	;# 
  2293  0E90                     	;# 
  2294  0E91                     	;# 
  2295  0E92                     	;# 
  2296  0E93                     	;# 
  2297  0E94                     	;# 
  2298  0E95                     	;# 
  2299  0E96                     	;# 
  2300  0E97                     	;# 
  2301  0E98                     	;# 
  2302  0E99                     	;# 
  2303  0E9A                     	;# 
  2304  0E9B                     	;# 
  2305  0E9C                     	;# 
  2306  0E9D                     	;# 
  2307  0E9E                     	;# 
  2308  0E9F                     	;# 
  2309  0EA0                     	;# 
  2310  0EA1                     	;# 
  2311  0EA2                     	;# 
  2312  0EA3                     	;# 
  2313  0EA4                     	;# 
  2314  0EA5                     	;# 
  2315  0EA6                     	;# 
  2316  0EA7                     	;# 
  2317  0F0F                     	;# 
  2318  0F10                     	;# 
  2319  0F11                     	;# 
  2320  0F12                     	;# 
  2321  0F13                     	;# 
  2322  0F14                     	;# 
  2323  0F15                     	;# 
  2324  0F16                     	;# 
  2325  0F17                     	;# 
  2326  0F18                     	;# 
  2327  0F19                     	;# 
  2328  0F1A                     	;# 
  2329  0F1B                     	;# 
  2330  0F1C                     	;# 
  2331  0F1D                     	;# 
  2332  0F1E                     	;# 
  2333  0F1F                     	;# 
  2334  0F20                     	;# 
  2335  0F21                     	;# 
  2336  0F22                     	;# 
  2337  0F23                     	;# 
  2338  0F24                     	;# 
  2339  0F25                     	;# 
  2340  0F26                     	;# 
  2341  0F27                     	;# 
  2342  0F28                     	;# 
  2343  0F29                     	;# 
  2344  0F2A                     	;# 
  2345  0F2B                     	;# 
  2346  0F2C                     	;# 
  2347  0F2D                     	;# 
  2348  0F2E                     	;# 
  2349  0F2F                     	;# 
  2350  0F30                     	;# 
  2351  0F31                     	;# 
  2352  0F32                     	;# 
  2353  0F33                     	;# 
  2354  0F34                     	;# 
  2355  0F35                     	;# 
  2356  0F36                     	;# 
  2357  0F37                     	;# 
  2358  0FE4                     	;# 
  2359  0FE5                     	;# 
  2360  0FE6                     	;# 
  2361  0FE7                     	;# 
  2362  0FE8                     	;# 
  2363  0FE9                     	;# 
  2364  0FEA                     	;# 
  2365  0FEB                     	;# 
  2366  0FED                     	;# 
  2367  0FEE                     	;# 
  2368  0FEF                     	;# 
  2369  0000                     	;# 
  2370  0001                     	;# 
  2371  0002                     	;# 
  2372  0003                     	;# 
  2373  0004                     	;# 
  2374  0005                     	;# 
  2375  0006                     	;# 
  2376  0007                     	;# 
  2377  0008                     	;# 
  2378  0009                     	;# 
  2379  000A                     	;# 
  2380  000B                     	;# 
  2381  000C                     	;# 
  2382  000D                     	;# 
  2383  000E                     	;# 
  2384  0010                     	;# 
  2385  0011                     	;# 
  2386  0012                     	;# 
  2387  0013                     	;# 
  2388  0014                     	;# 
  2389  0015                     	;# 
  2390  0016                     	;# 
  2391  0017                     	;# 
  2392  0018                     	;# 
  2393  0018                     	;# 
  2394  0019                     	;# 
  2395  001A                     	;# 
  2396  001B                     	;# 
  2397  001C                     	;# 
  2398  001C                     	;# 
  2399  001D                     	;# 
  2400  001E                     	;# 
  2401  001F                     	;# 
  2402  008C                     	;# 
  2403  008D                     	;# 
  2404  008E                     	;# 
  2405  0090                     	;# 
  2406  0091                     	;# 
  2407  0092                     	;# 
  2408  0093                     	;# 
  2409  0094                     	;# 
  2410  0095                     	;# 
  2411  0096                     	;# 
  2412  0097                     	;# 
  2413  0098                     	;# 
  2414  0099                     	;# 
  2415  009A                     	;# 
  2416  009B                     	;# 
  2417  009C                     	;# 
  2418  009D                     	;# 
  2419  009E                     	;# 
  2420  009F                     	;# 
  2421  010C                     	;# 
  2422  010D                     	;# 
  2423  010E                     	;# 
  2424  0111                     	;# 
  2425  0112                     	;# 
  2426  0113                     	;# 
  2427  0114                     	;# 
  2428  0115                     	;# 
  2429  0116                     	;# 
  2430  0117                     	;# 
  2431  0118                     	;# 
  2432  0119                     	;# 
  2433  011A                     	;# 
  2434  011B                     	;# 
  2435  011C                     	;# 
  2436  011D                     	;# 
  2437  018C                     	;# 
  2438  018D                     	;# 
  2439  018E                     	;# 
  2440  0191                     	;# 
  2441  0191                     	;# 
  2442  0192                     	;# 
  2443  0193                     	;# 
  2444  0193                     	;# 
  2445  0194                     	;# 
  2446  0195                     	;# 
  2447  0196                     	;# 
  2448  0197                     	;# 
  2449  0199                     	;# 
  2450  0199                     	;# 
  2451  0199                     	;# 
  2452  019A                     	;# 
  2453  019A                     	;# 
  2454  019A                     	;# 
  2455  019B                     	;# 
  2456  019B                     	;# 
  2457  019B                     	;# 
  2458  019B                     	;# 
  2459  019B                     	;# 
  2460  019C                     	;# 
  2461  019C                     	;# 
  2462  019C                     	;# 
  2463  019D                     	;# 
  2464  019D                     	;# 
  2465  019D                     	;# 
  2466  019E                     	;# 
  2467  019E                     	;# 
  2468  019E                     	;# 
  2469  019F                     	;# 
  2470  019F                     	;# 
  2471  019F                     	;# 
  2472  019F                     	;# 
  2473  019F                     	;# 
  2474  020C                     	;# 
  2475  020D                     	;# 
  2476  020E                     	;# 
  2477  0210                     	;# 
  2478  0211                     	;# 
  2479  0211                     	;# 
  2480  0212                     	;# 
  2481  0212                     	;# 
  2482  0213                     	;# 
  2483  0213                     	;# 
  2484  0214                     	;# 
  2485  0214                     	;# 
  2486  0215                     	;# 
  2487  0215                     	;# 
  2488  0215                     	;# 
  2489  0215                     	;# 
  2490  0216                     	;# 
  2491  0216                     	;# 
  2492  0217                     	;# 
  2493  0217                     	;# 
  2494  021B                     	;# 
  2495  021C                     	;# 
  2496  021D                     	;# 
  2497  021E                     	;# 
  2498  021F                     	;# 
  2499  028C                     	;# 
  2500  028D                     	;# 
  2501  028E                     	;# 
  2502  0291                     	;# 
  2503  0291                     	;# 
  2504  0292                     	;# 
  2505  0293                     	;# 
  2506  0294                     	;# 
  2507  0295                     	;# 
  2508  0295                     	;# 
  2509  0296                     	;# 
  2510  0297                     	;# 
  2511  0298                     	;# 
  2512  0299                     	;# 
  2513  0299                     	;# 
  2514  029A                     	;# 
  2515  029B                     	;# 
  2516  029C                     	;# 
  2517  029E                     	;# 
  2518  029F                     	;# 
  2519  030C                     	;# 
  2520  030D                     	;# 
  2521  030E                     	;# 
  2522  0315                     	;# 
  2523  0316                     	;# 
  2524  0317                     	;# 
  2525  0318                     	;# 
  2526  0319                     	;# 
  2527  031B                     	;# 
  2528  031C                     	;# 
  2529  031D                     	;# 
  2530  031E                     	;# 
  2531  031F                     	;# 
  2532  038C                     	;# 
  2533  038D                     	;# 
  2534  038E                     	;# 
  2535  0390                     	;# 
  2536  0391                     	;# 
  2537  0392                     	;# 
  2538  0393                     	;# 
  2539  0394                     	;# 
  2540  0395                     	;# 
  2541  0396                     	;# 
  2542  0397                     	;# 
  2543  0398                     	;# 
  2544  0399                     	;# 
  2545  039D                     	;# 
  2546  039E                     	;# 
  2547  039F                     	;# 
  2548  040D                     	;# 
  2549  040F                     	;# 
  2550  040F                     	;# 
  2551  0410                     	;# 
  2552  0411                     	;# 
  2553  0412                     	;# 
  2554  0413                     	;# 
  2555  0413                     	;# 
  2556  0414                     	;# 
  2557  0414                     	;# 
  2558  0415                     	;# 
  2559  0416                     	;# 
  2560  0417                     	;# 
  2561  0418                     	;# 
  2562  041A                     	;# 
  2563  041A                     	;# 
  2564  041B                     	;# 
  2565  041B                     	;# 
  2566  041C                     	;# 
  2567  041D                     	;# 
  2568  041E                     	;# 
  2569  041F                     	;# 
  2570  048E                     	;# 
  2571  048E                     	;# 
  2572  048F                     	;# 
  2573  0490                     	;# 
  2574  0491                     	;# 
  2575  0492                     	;# 
  2576  0493                     	;# 
  2577  0493                     	;# 
  2578  0494                     	;# 
  2579  0494                     	;# 
  2580  0495                     	;# 
  2581  0496                     	;# 
  2582  0497                     	;# 
  2583  0498                     	;# 
  2584  049A                     	;# 
  2585  049A                     	;# 
  2586  049B                     	;# 
  2587  049B                     	;# 
  2588  049C                     	;# 
  2589  049D                     	;# 
  2590  049E                     	;# 
  2591  049F                     	;# 
  2592  050F                     	;# 
  2593  0510                     	;# 
  2594  0511                     	;# 
  2595  0512                     	;# 
  2596  0513                     	;# 
  2597  0514                     	;# 
  2598  0515                     	;# 
  2599  0516                     	;# 
  2600  0517                     	;# 
  2601  0518                     	;# 
  2602  0519                     	;# 
  2603  051A                     	;# 
  2604  058D                     	;# 
  2605  058E                     	;# 
  2606  058F                     	;# 
  2607  058F                     	;# 
  2608  058F                     	;# 
  2609  0590                     	;# 
  2610  0590                     	;# 
  2611  0591                     	;# 
  2612  0592                     	;# 
  2613  0592                     	;# 
  2614  0592                     	;# 
  2615  0593                     	;# 
  2616  0593                     	;# 
  2617  0594                     	;# 
  2618  0595                     	;# 
  2619  0595                     	;# 
  2620  0596                     	;# 
  2621  0597                     	;# 
  2622  0597                     	;# 
  2623  0598                     	;# 
  2624  0599                     	;# 
  2625  0599                     	;# 
  2626  0599                     	;# 
  2627  059A                     	;# 
  2628  059A                     	;# 
  2629  059E                     	;# 
  2630  059F                     	;# 
  2631  059F                     	;# 
  2632  0614                     	;# 
  2633  0614                     	;# 
  2634  0615                     	;# 
  2635  0616                     	;# 
  2636  0617                     	;# 
  2637  0617                     	;# 
  2638  0618                     	;# 
  2639  0619                     	;# 
  2640  061A                     	;# 
  2641  061A                     	;# 
  2642  061B                     	;# 
  2643  061C                     	;# 
  2644  068D                     	;# 
  2645  068E                     	;# 
  2646  068F                     	;# 
  2647  0690                     	;# 
  2648  0691                     	;# 
  2649  0692                     	;# 
  2650  0693                     	;# 
  2651  0694                     	;# 
  2652  0695                     	;# 
  2653  0696                     	;# 
  2654  0697                     	;# 
  2655  0698                     	;# 
  2656  0699                     	;# 
  2657  069A                     	;# 
  2658  069B                     	;# 
  2659  069C                     	;# 
  2660  069D                     	;# 
  2661  069E                     	;# 
  2662  069F                     	;# 
  2663  070D                     	;# 
  2664  070E                     	;# 
  2665  070F                     	;# 
  2666  0710                     	;# 
  2667  0711                     	;# 
  2668  0712                     	;# 
  2669  0713                     	;# 
  2670  0714                     	;# 
  2671  0715                     	;# 
  2672  0716                     	;# 
  2673  0717                     	;# 
  2674  0718                     	;# 
  2675  0719                     	;# 
  2676  071A                     	;# 
  2677  071B                     	;# 
  2678  071C                     	;# 
  2679  071D                     	;# 
  2680  071E                     	;# 
  2681  071F                     	;# 
  2682  078E                     	;# 
  2683  078F                     	;# 
  2684  0790                     	;# 
  2685  0791                     	;# 
  2686  0792                     	;# 
  2687  0793                     	;# 
  2688  0794                     	;# 
  2689  0795                     	;# 
  2690  0796                     	;# 
  2691  0797                     	;# 
  2692  0798                     	;# 
  2693  0799                     	;# 
  2694  079A                     	;# 
  2695  079B                     	;# 
  2696  079C                     	;# 
  2697  079D                     	;# 
  2698  079E                     	;# 
  2699  079F                     	;# 
  2700  080D                     	;# 
  2701  080E                     	;# 
  2702  080F                     	;# 
  2703  0810                     	;# 
  2704  0811                     	;# 
  2705  0812                     	;# 
  2706  0813                     	;# 
  2707  0814                     	;# 
  2708  0815                     	;# 
  2709  0816                     	;# 
  2710  0817                     	;# 
  2711  0818                     	;# 
  2712  0819                     	;# 
  2713  081A                     	;# 
  2714  081B                     	;# 
  2715  081C                     	;# 
  2716  081D                     	;# 
  2717  081E                     	;# 
  2718  081F                     	;# 
  2719  090C                     	;# 
  2720  090D                     	;# 
  2721  090E                     	;# 
  2722  090F                     	;# 
  2723  0910                     	;# 
  2724  0911                     	;# 
  2725  0912                     	;# 
  2726  0913                     	;# 
  2727  0914                     	;# 
  2728  0915                     	;# 
  2729  0916                     	;# 
  2730  0917                     	;# 
  2731  0D8E                     	;# 
  2732  0D8F                     	;# 
  2733  0D90                     	;# 
  2734  0D91                     	;# 
  2735  0D91                     	;# 
  2736  0D92                     	;# 
  2737  0D93                     	;# 
  2738  0D93                     	;# 
  2739  0D94                     	;# 
  2740  0D95                     	;# 
  2741  0D95                     	;# 
  2742  0D96                     	;# 
  2743  0D97                     	;# 
  2744  0D97                     	;# 
  2745  0D98                     	;# 
  2746  0D99                     	;# 
  2747  0D99                     	;# 
  2748  0D9A                     	;# 
  2749  0D9B                     	;# 
  2750  0D9C                     	;# 
  2751  0D9C                     	;# 
  2752  0D9D                     	;# 
  2753  0D9D                     	;# 
  2754  0D9E                     	;# 
  2755  0D9F                     	;# 
  2756  0DA0                     	;# 
  2757  0DA1                     	;# 
  2758  0DA1                     	;# 
  2759  0DA2                     	;# 
  2760  0DA3                     	;# 
  2761  0DA3                     	;# 
  2762  0DA4                     	;# 
  2763  0DA5                     	;# 
  2764  0DA5                     	;# 
  2765  0DA6                     	;# 
  2766  0DA7                     	;# 
  2767  0DA7                     	;# 
  2768  0DA8                     	;# 
  2769  0DA9                     	;# 
  2770  0DA9                     	;# 
  2771  0DAA                     	;# 
  2772  0DAB                     	;# 
  2773  0DAC                     	;# 
  2774  0DAC                     	;# 
  2775  0DAD                     	;# 
  2776  0DAD                     	;# 
  2777  0DAE                     	;# 
  2778  0DAF                     	;# 
  2779  0DB0                     	;# 
  2780  0DB1                     	;# 
  2781  0DB1                     	;# 
  2782  0DB2                     	;# 
  2783  0DB3                     	;# 
  2784  0DB3                     	;# 
  2785  0DB4                     	;# 
  2786  0DB5                     	;# 
  2787  0DB5                     	;# 
  2788  0DB6                     	;# 
  2789  0DB7                     	;# 
  2790  0DB7                     	;# 
  2791  0DB8                     	;# 
  2792  0DB9                     	;# 
  2793  0DB9                     	;# 
  2794  0DBA                     	;# 
  2795  0DBB                     	;# 
  2796  0DBC                     	;# 
  2797  0DBC                     	;# 
  2798  0DBD                     	;# 
  2799  0DBD                     	;# 
  2800  0DBE                     	;# 
  2801  0DBF                     	;# 
  2802  0DC0                     	;# 
  2803  0E0C                     	;# 
  2804  0E0D                     	;# 
  2805  0E0E                     	;# 
  2806  0E0F                     	;# 
  2807  0E10                     	;# 
  2808  0E11                     	;# 
  2809  0E12                     	;# 
  2810  0E13                     	;# 
  2811  0E14                     	;# 
  2812  0E15                     	;# 
  2813  0E15                     	;# 
  2814  0E15                     	;# 
  2815  0E16                     	;# 
  2816  0E16                     	;# 
  2817  0E16                     	;# 
  2818  0E17                     	;# 
  2819  0E17                     	;# 
  2820  0E17                     	;# 
  2821  0E18                     	;# 
  2822  0E18                     	;# 
  2823  0E18                     	;# 
  2824  0E19                     	;# 
  2825  0E1A                     	;# 
  2826  0E1B                     	;# 
  2827  0E1D                     	;# 
  2828  0E1E                     	;# 
  2829  0E1F                     	;# 
  2830  0E21                     	;# 
  2831  0E22                     	;# 
  2832  0E23                     	;# 
  2833  0E24                     	;# 
  2834  0E25                     	;# 
  2835  0E26                     	;# 
  2836  0E27                     	;# 
  2837  0E28                     	;# 
  2838  0E29                     	;# 
  2839  0E2D                     	;# 
  2840  0E2E                     	;# 
  2841  0E2F                     	;# 
  2842  0E30                     	;# 
  2843  0E31                     	;# 
  2844  0E32                     	;# 
  2845  0E35                     	;# 
  2846  0E36                     	;# 
  2847  0E37                     	;# 
  2848  0E38                     	;# 
  2849  0E39                     	;# 
  2850  0E3A                     	;# 
  2851  0E3B                     	;# 
  2852  0E3C                     	;# 
  2853  0E3D                     	;# 
  2854  0E3E                     	;# 
  2855  0E90                     	;# 
  2856  0E91                     	;# 
  2857  0E92                     	;# 
  2858  0E93                     	;# 
  2859  0E94                     	;# 
  2860  0E95                     	;# 
  2861  0E96                     	;# 
  2862  0E97                     	;# 
  2863  0E98                     	;# 
  2864  0E99                     	;# 
  2865  0E9A                     	;# 
  2866  0E9B                     	;# 
  2867  0E9C                     	;# 
  2868  0E9D                     	;# 
  2869  0E9E                     	;# 
  2870  0E9F                     	;# 
  2871  0EA0                     	;# 
  2872  0EA1                     	;# 
  2873  0EA2                     	;# 
  2874  0EA3                     	;# 
  2875  0EA4                     	;# 
  2876  0EA5                     	;# 
  2877  0EA6                     	;# 
  2878  0EA7                     	;# 
  2879  0F0F                     	;# 
  2880  0F10                     	;# 
  2881  0F11                     	;# 
  2882  0F12                     	;# 
  2883  0F13                     	;# 
  2884  0F14                     	;# 
  2885  0F15                     	;# 
  2886  0F16                     	;# 
  2887  0F17                     	;# 
  2888  0F18                     	;# 
  2889  0F19                     	;# 
  2890  0F1A                     	;# 
  2891  0F1B                     	;# 
  2892  0F1C                     	;# 
  2893  0F1D                     	;# 
  2894  0F1E                     	;# 
  2895  0F1F                     	;# 
  2896  0F20                     	;# 
  2897  0F21                     	;# 
  2898  0F22                     	;# 
  2899  0F23                     	;# 
  2900  0F24                     	;# 
  2901  0F25                     	;# 
  2902  0F26                     	;# 
  2903  0F27                     	;# 
  2904  0F28                     	;# 
  2905  0F29                     	;# 
  2906  0F2A                     	;# 
  2907  0F2B                     	;# 
  2908  0F2C                     	;# 
  2909  0F2D                     	;# 
  2910  0F2E                     	;# 
  2911  0F2F                     	;# 
  2912  0F30                     	;# 
  2913  0F31                     	;# 
  2914  0F32                     	;# 
  2915  0F33                     	;# 
  2916  0F34                     	;# 
  2917  0F35                     	;# 
  2918  0F36                     	;# 
  2919  0F37                     	;# 
  2920  0FE4                     	;# 
  2921  0FE5                     	;# 
  2922  0FE6                     	;# 
  2923  0FE7                     	;# 
  2924  0FE8                     	;# 
  2925  0FE9                     	;# 
  2926  0FEA                     	;# 
  2927  0FEB                     	;# 
  2928  0FED                     	;# 
  2929  0FEE                     	;# 
  2930  0FEF                     	;# 
  2931  0000                     	;# 
  2932  0001                     	;# 
  2933  0002                     	;# 
  2934  0003                     	;# 
  2935  0004                     	;# 
  2936  0005                     	;# 
  2937  0006                     	;# 
  2938  0007                     	;# 
  2939  0008                     	;# 
  2940  0009                     	;# 
  2941  000A                     	;# 
  2942  000B                     	;# 
  2943  000C                     	;# 
  2944  000D                     	;# 
  2945  000E                     	;# 
  2946  0010                     	;# 
  2947  0011                     	;# 
  2948  0012                     	;# 
  2949  0013                     	;# 
  2950  0014                     	;# 
  2951  0015                     	;# 
  2952  0016                     	;# 
  2953  0017                     	;# 
  2954  0018                     	;# 
  2955  0018                     	;# 
  2956  0019                     	;# 
  2957  001A                     	;# 
  2958  001B                     	;# 
  2959  001C                     	;# 
  2960  001C                     	;# 
  2961  001D                     	;# 
  2962  001E                     	;# 
  2963  001F                     	;# 
  2964  008C                     	;# 
  2965  008D                     	;# 
  2966  008E                     	;# 
  2967  0090                     	;# 
  2968  0091                     	;# 
  2969  0092                     	;# 
  2970  0093                     	;# 
  2971  0094                     	;# 
  2972  0095                     	;# 
  2973  0096                     	;# 
  2974  0097                     	;# 
  2975  0098                     	;# 
  2976  0099                     	;# 
  2977  009A                     	;# 
  2978  009B                     	;# 
  2979  009C                     	;# 
  2980  009D                     	;# 
  2981  009E                     	;# 
  2982  009F                     	;# 
  2983  010C                     	;# 
  2984  010D                     	;# 
  2985  010E                     	;# 
  2986  0111                     	;# 
  2987  0112                     	;# 
  2988  0113                     	;# 
  2989  0114                     	;# 
  2990  0115                     	;# 
  2991  0116                     	;# 
  2992  0117                     	;# 
  2993  0118                     	;# 
  2994  0119                     	;# 
  2995  011A                     	;# 
  2996  011B                     	;# 
  2997  011C                     	;# 
  2998  011D                     	;# 
  2999  018C                     	;# 
  3000  018D                     	;# 
  3001  018E                     	;# 
  3002  0191                     	;# 
  3003  0191                     	;# 
  3004  0192                     	;# 
  3005  0193                     	;# 
  3006  0193                     	;# 
  3007  0194                     	;# 
  3008  0195                     	;# 
  3009  0196                     	;# 
  3010  0197                     	;# 
  3011  0199                     	;# 
  3012  0199                     	;# 
  3013  0199                     	;# 
  3014  019A                     	;# 
  3015  019A                     	;# 
  3016  019A                     	;# 
  3017  019B                     	;# 
  3018  019B                     	;# 
  3019  019B                     	;# 
  3020  019B                     	;# 
  3021  019B                     	;# 
  3022  019C                     	;# 
  3023  019C                     	;# 
  3024  019C                     	;# 
  3025  019D                     	;# 
  3026  019D                     	;# 
  3027  019D                     	;# 
  3028  019E                     	;# 
  3029  019E                     	;# 
  3030  019E                     	;# 
  3031  019F                     	;# 
  3032  019F                     	;# 
  3033  019F                     	;# 
  3034  019F                     	;# 
  3035  019F                     	;# 
  3036  020C                     	;# 
  3037  020D                     	;# 
  3038  020E                     	;# 
  3039  0210                     	;# 
  3040  0211                     	;# 
  3041  0211                     	;# 
  3042  0212                     	;# 
  3043  0212                     	;# 
  3044  0213                     	;# 
  3045  0213                     	;# 
  3046  0214                     	;# 
  3047  0214                     	;# 
  3048  0215                     	;# 
  3049  0215                     	;# 
  3050  0215                     	;# 
  3051  0215                     	;# 
  3052  0216                     	;# 
  3053  0216                     	;# 
  3054  0217                     	;# 
  3055  0217                     	;# 
  3056  021B                     	;# 
  3057  021C                     	;# 
  3058  021D                     	;# 
  3059  021E                     	;# 
  3060  021F                     	;# 
  3061  028C                     	;# 
  3062  028D                     	;# 
  3063  028E                     	;# 
  3064  0291                     	;# 
  3065  0291                     	;# 
  3066  0292                     	;# 
  3067  0293                     	;# 
  3068  0294                     	;# 
  3069  0295                     	;# 
  3070  0295                     	;# 
  3071  0296                     	;# 
  3072  0297                     	;# 
  3073  0298                     	;# 
  3074  0299                     	;# 
  3075  0299                     	;# 
  3076  029A                     	;# 
  3077  029B                     	;# 
  3078  029C                     	;# 
  3079  029E                     	;# 
  3080  029F                     	;# 
  3081  030C                     	;# 
  3082  030D                     	;# 
  3083  030E                     	;# 
  3084  0315                     	;# 
  3085  0316                     	;# 
  3086  0317                     	;# 
  3087  0318                     	;# 
  3088  0319                     	;# 
  3089  031B                     	;# 
  3090  031C                     	;# 
  3091  031D                     	;# 
  3092  031E                     	;# 
  3093  031F                     	;# 
  3094  038C                     	;# 
  3095  038D                     	;# 
  3096  038E                     	;# 
  3097  0390                     	;# 
  3098  0391                     	;# 
  3099  0392                     	;# 
  3100  0393                     	;# 
  3101  0394                     	;# 
  3102  0395                     	;# 
  3103  0396                     	;# 
  3104  0397                     	;# 
  3105  0398                     	;# 
  3106  0399                     	;# 
  3107  039D                     	;# 
  3108  039E                     	;# 
  3109  039F                     	;# 
  3110  040D                     	;# 
  3111  040F                     	;# 
  3112  040F                     	;# 
  3113  0410                     	;# 
  3114  0411                     	;# 
  3115  0412                     	;# 
  3116  0413                     	;# 
  3117  0413                     	;# 
  3118  0414                     	;# 
  3119  0414                     	;# 
  3120  0415                     	;# 
  3121  0416                     	;# 
  3122  0417                     	;# 
  3123  0418                     	;# 
  3124  041A                     	;# 
  3125  041A                     	;# 
  3126  041B                     	;# 
  3127  041B                     	;# 
  3128  041C                     	;# 
  3129  041D                     	;# 
  3130  041E                     	;# 
  3131  041F                     	;# 
  3132  048E                     	;# 
  3133  048E                     	;# 
  3134  048F                     	;# 
  3135  0490                     	;# 
  3136  0491                     	;# 
  3137  0492                     	;# 
  3138  0493                     	;# 
  3139  0493                     	;# 
  3140  0494                     	;# 
  3141  0494                     	;# 
  3142  0495                     	;# 
  3143  0496                     	;# 
  3144  0497                     	;# 
  3145  0498                     	;# 
  3146  049A                     	;# 
  3147  049A                     	;# 
  3148  049B                     	;# 
  3149  049B                     	;# 
  3150  049C                     	;# 
  3151  049D                     	;# 
  3152  049E                     	;# 
  3153  049F                     	;# 
  3154  050F                     	;# 
  3155  0510                     	;# 
  3156  0511                     	;# 
  3157  0512                     	;# 
  3158  0513                     	;# 
  3159  0514                     	;# 
  3160  0515                     	;# 
  3161  0516                     	;# 
  3162  0517                     	;# 
  3163  0518                     	;# 
  3164  0519                     	;# 
  3165  051A                     	;# 
  3166  058D                     	;# 
  3167  058E                     	;# 
  3168  058F                     	;# 
  3169  058F                     	;# 
  3170  058F                     	;# 
  3171  0590                     	;# 
  3172  0590                     	;# 
  3173  0591                     	;# 
  3174  0592                     	;# 
  3175  0592                     	;# 
  3176  0592                     	;# 
  3177  0593                     	;# 
  3178  0593                     	;# 
  3179  0594                     	;# 
  3180  0595                     	;# 
  3181  0595                     	;# 
  3182  0596                     	;# 
  3183  0597                     	;# 
  3184  0597                     	;# 
  3185  0598                     	;# 
  3186  0599                     	;# 
  3187  0599                     	;# 
  3188  0599                     	;# 
  3189  059A                     	;# 
  3190  059A                     	;# 
  3191  059E                     	;# 
  3192  059F                     	;# 
  3193  059F                     	;# 
  3194  0614                     	;# 
  3195  0614                     	;# 
  3196  0615                     	;# 
  3197  0616                     	;# 
  3198  0617                     	;# 
  3199  0617                     	;# 
  3200  0618                     	;# 
  3201  0619                     	;# 
  3202  061A                     	;# 
  3203  061A                     	;# 
  3204  061B                     	;# 
  3205  061C                     	;# 
  3206  068D                     	;# 
  3207  068E                     	;# 
  3208  068F                     	;# 
  3209  0690                     	;# 
  3210  0691                     	;# 
  3211  0692                     	;# 
  3212  0693                     	;# 
  3213  0694                     	;# 
  3214  0695                     	;# 
  3215  0696                     	;# 
  3216  0697                     	;# 
  3217  0698                     	;# 
  3218  0699                     	;# 
  3219  069A                     	;# 
  3220  069B                     	;# 
  3221  069C                     	;# 
  3222  069D                     	;# 
  3223  069E                     	;# 
  3224  069F                     	;# 
  3225  070D                     	;# 
  3226  070E                     	;# 
  3227  070F                     	;# 
  3228  0710                     	;# 
  3229  0711                     	;# 
  3230  0712                     	;# 
  3231  0713                     	;# 
  3232  0714                     	;# 
  3233  0715                     	;# 
  3234  0716                     	;# 
  3235  0717                     	;# 
  3236  0718                     	;# 
  3237  0719                     	;# 
  3238  071A                     	;# 
  3239  071B                     	;# 
  3240  071C                     	;# 
  3241  071D                     	;# 
  3242  071E                     	;# 
  3243  071F                     	;# 
  3244  078E                     	;# 
  3245  078F                     	;# 
  3246  0790                     	;# 
  3247  0791                     	;# 
  3248  0792                     	;# 
  3249  0793                     	;# 
  3250  0794                     	;# 
  3251  0795                     	;# 
  3252  0796                     	;# 
  3253  0797                     	;# 
  3254  0798                     	;# 
  3255  0799                     	;# 
  3256  079A                     	;# 
  3257  079B                     	;# 
  3258  079C                     	;# 
  3259  079D                     	;# 
  3260  079E                     	;# 
  3261  079F                     	;# 
  3262  080D                     	;# 
  3263  080E                     	;# 
  3264  080F                     	;# 
  3265  0810                     	;# 
  3266  0811                     	;# 
  3267  0812                     	;# 
  3268  0813                     	;# 
  3269  0814                     	;# 
  3270  0815                     	;# 
  3271  0816                     	;# 
  3272  0817                     	;# 
  3273  0818                     	;# 
  3274  0819                     	;# 
  3275  081A                     	;# 
  3276  081B                     	;# 
  3277  081C                     	;# 
  3278  081D                     	;# 
  3279  081E                     	;# 
  3280  081F                     	;# 
  3281  090C                     	;# 
  3282  090D                     	;# 
  3283  090E                     	;# 
  3284  090F                     	;# 
  3285  0910                     	;# 
  3286  0911                     	;# 
  3287  0912                     	;# 
  3288  0913                     	;# 
  3289  0914                     	;# 
  3290  0915                     	;# 
  3291  0916                     	;# 
  3292  0917                     	;# 
  3293  0D8E                     	;# 
  3294  0D8F                     	;# 
  3295  0D90                     	;# 
  3296  0D91                     	;# 
  3297  0D91                     	;# 
  3298  0D92                     	;# 
  3299  0D93                     	;# 
  3300  0D93                     	;# 
  3301  0D94                     	;# 
  3302  0D95                     	;# 
  3303  0D95                     	;# 
  3304  0D96                     	;# 
  3305  0D97                     	;# 
  3306  0D97                     	;# 
  3307  0D98                     	;# 
  3308  0D99                     	;# 
  3309  0D99                     	;# 
  3310  0D9A                     	;# 
  3311  0D9B                     	;# 
  3312  0D9C                     	;# 
  3313  0D9C                     	;# 
  3314  0D9D                     	;# 
  3315  0D9D                     	;# 
  3316  0D9E                     	;# 
  3317  0D9F                     	;# 
  3318  0DA0                     	;# 
  3319  0DA1                     	;# 
  3320  0DA1                     	;# 
  3321  0DA2                     	;# 
  3322  0DA3                     	;# 
  3323  0DA3                     	;# 
  3324  0DA4                     	;# 
  3325  0DA5                     	;# 
  3326  0DA5                     	;# 
  3327  0DA6                     	;# 
  3328  0DA7                     	;# 
  3329  0DA7                     	;# 
  3330  0DA8                     	;# 
  3331  0DA9                     	;# 
  3332  0DA9                     	;# 
  3333  0DAA                     	;# 
  3334  0DAB                     	;# 
  3335  0DAC                     	;# 
  3336  0DAC                     	;# 
  3337  0DAD                     	;# 
  3338  0DAD                     	;# 
  3339  0DAE                     	;# 
  3340  0DAF                     	;# 
  3341  0DB0                     	;# 
  3342  0DB1                     	;# 
  3343  0DB1                     	;# 
  3344  0DB2                     	;# 
  3345  0DB3                     	;# 
  3346  0DB3                     	;# 
  3347  0DB4                     	;# 
  3348  0DB5                     	;# 
  3349  0DB5                     	;# 
  3350  0DB6                     	;# 
  3351  0DB7                     	;# 
  3352  0DB7                     	;# 
  3353  0DB8                     	;# 
  3354  0DB9                     	;# 
  3355  0DB9                     	;# 
  3356  0DBA                     	;# 
  3357  0DBB                     	;# 
  3358  0DBC                     	;# 
  3359  0DBC                     	;# 
  3360  0DBD                     	;# 
  3361  0DBD                     	;# 
  3362  0DBE                     	;# 
  3363  0DBF                     	;# 
  3364  0DC0                     	;# 
  3365  0E0C                     	;# 
  3366  0E0D                     	;# 
  3367  0E0E                     	;# 
  3368  0E0F                     	;# 
  3369  0E10                     	;# 
  3370  0E11                     	;# 
  3371  0E12                     	;# 
  3372  0E13                     	;# 
  3373  0E14                     	;# 
  3374  0E15                     	;# 
  3375  0E15                     	;# 
  3376  0E15                     	;# 
  3377  0E16                     	;# 
  3378  0E16                     	;# 
  3379  0E16                     	;# 
  3380  0E17                     	;# 
  3381  0E17                     	;# 
  3382  0E17                     	;# 
  3383  0E18                     	;# 
  3384  0E18                     	;# 
  3385  0E18                     	;# 
  3386  0E19                     	;# 
  3387  0E1A                     	;# 
  3388  0E1B                     	;# 
  3389  0E1D                     	;# 
  3390  0E1E                     	;# 
  3391  0E1F                     	;# 
  3392  0E21                     	;# 
  3393  0E22                     	;# 
  3394  0E23                     	;# 
  3395  0E24                     	;# 
  3396  0E25                     	;# 
  3397  0E26                     	;# 
  3398  0E27                     	;# 
  3399  0E28                     	;# 
  3400  0E29                     	;# 
  3401  0E2D                     	;# 
  3402  0E2E                     	;# 
  3403  0E2F                     	;# 
  3404  0E30                     	;# 
  3405  0E31                     	;# 
  3406  0E32                     	;# 
  3407  0E35                     	;# 
  3408  0E36                     	;# 
  3409  0E37                     	;# 
  3410  0E38                     	;# 
  3411  0E39                     	;# 
  3412  0E3A                     	;# 
  3413  0E3B                     	;# 
  3414  0E3C                     	;# 
  3415  0E3D                     	;# 
  3416  0E3E                     	;# 
  3417  0E90                     	;# 
  3418  0E91                     	;# 
  3419  0E92                     	;# 
  3420  0E93                     	;# 
  3421  0E94                     	;# 
  3422  0E95                     	;# 
  3423  0E96                     	;# 
  3424  0E97                     	;# 
  3425  0E98                     	;# 
  3426  0E99                     	;# 
  3427  0E9A                     	;# 
  3428  0E9B                     	;# 
  3429  0E9C                     	;# 
  3430  0E9D                     	;# 
  3431  0E9E                     	;# 
  3432  0E9F                     	;# 
  3433  0EA0                     	;# 
  3434  0EA1                     	;# 
  3435  0EA2                     	;# 
  3436  0EA3                     	;# 
  3437  0EA4                     	;# 
  3438  0EA5                     	;# 
  3439  0EA6                     	;# 
  3440  0EA7                     	;# 
  3441  0F0F                     	;# 
  3442  0F10                     	;# 
  3443  0F11                     	;# 
  3444  0F12                     	;# 
  3445  0F13                     	;# 
  3446  0F14                     	;# 
  3447  0F15                     	;# 
  3448  0F16                     	;# 
  3449  0F17                     	;# 
  3450  0F18                     	;# 
  3451  0F19                     	;# 
  3452  0F1A                     	;# 
  3453  0F1B                     	;# 
  3454  0F1C                     	;# 
  3455  0F1D                     	;# 
  3456  0F1E                     	;# 
  3457  0F1F                     	;# 
  3458  0F20                     	;# 
  3459  0F21                     	;# 
  3460  0F22                     	;# 
  3461  0F23                     	;# 
  3462  0F24                     	;# 
  3463  0F25                     	;# 
  3464  0F26                     	;# 
  3465  0F27                     	;# 
  3466  0F28                     	;# 
  3467  0F29                     	;# 
  3468  0F2A                     	;# 
  3469  0F2B                     	;# 
  3470  0F2C                     	;# 
  3471  0F2D                     	;# 
  3472  0F2E                     	;# 
  3473  0F2F                     	;# 
  3474  0F30                     	;# 
  3475  0F31                     	;# 
  3476  0F32                     	;# 
  3477  0F33                     	;# 
  3478  0F34                     	;# 
  3479  0F35                     	;# 
  3480  0F36                     	;# 
  3481  0F37                     	;# 
  3482  0FE4                     	;# 
  3483  0FE5                     	;# 
  3484  0FE6                     	;# 
  3485  0FE7                     	;# 
  3486  0FE8                     	;# 
  3487  0FE9                     	;# 
  3488  0FEA                     	;# 
  3489  0FEB                     	;# 
  3490  0FED                     	;# 
  3491  0FEE                     	;# 
  3492  0FEF                     	;# 
  3493  0000                     	;# 
  3494  0001                     	;# 
  3495  0002                     	;# 
  3496  0003                     	;# 
  3497  0004                     	;# 
  3498  0005                     	;# 
  3499  0006                     	;# 
  3500  0007                     	;# 
  3501  0008                     	;# 
  3502  0009                     	;# 
  3503  000A                     	;# 
  3504  000B                     	;# 
  3505  000C                     	;# 
  3506  000D                     	;# 
  3507  000E                     	;# 
  3508  0010                     	;# 
  3509  0011                     	;# 
  3510  0012                     	;# 
  3511  0013                     	;# 
  3512  0014                     	;# 
  3513  0015                     	;# 
  3514  0016                     	;# 
  3515  0017                     	;# 
  3516  0018                     	;# 
  3517  0018                     	;# 
  3518  0019                     	;# 
  3519  001A                     	;# 
  3520  001B                     	;# 
  3521  001C                     	;# 
  3522  001C                     	;# 
  3523  001D                     	;# 
  3524  001E                     	;# 
  3525  001F                     	;# 
  3526  008C                     	;# 
  3527  008D                     	;# 
  3528  008E                     	;# 
  3529  0090                     	;# 
  3530  0091                     	;# 
  3531  0092                     	;# 
  3532  0093                     	;# 
  3533  0094                     	;# 
  3534  0095                     	;# 
  3535  0096                     	;# 
  3536  0097                     	;# 
  3537  0098                     	;# 
  3538  0099                     	;# 
  3539  009A                     	;# 
  3540  009B                     	;# 
  3541  009C                     	;# 
  3542  009D                     	;# 
  3543  009E                     	;# 
  3544  009F                     	;# 
  3545  010C                     	;# 
  3546  010D                     	;# 
  3547  010E                     	;# 
  3548  0111                     	;# 
  3549  0112                     	;# 
  3550  0113                     	;# 
  3551  0114                     	;# 
  3552  0115                     	;# 
  3553  0116                     	;# 
  3554  0117                     	;# 
  3555  0118                     	;# 
  3556  0119                     	;# 
  3557  011A                     	;# 
  3558  011B                     	;# 
  3559  011C                     	;# 
  3560  011D                     	;# 
  3561  018C                     	;# 
  3562  018D                     	;# 
  3563  018E                     	;# 
  3564  0191                     	;# 
  3565  0191                     	;# 
  3566  0192                     	;# 
  3567  0193                     	;# 
  3568  0193                     	;# 
  3569  0194                     	;# 
  3570  0195                     	;# 
  3571  0196                     	;# 
  3572  0197                     	;# 
  3573  0199                     	;# 
  3574  0199                     	;# 
  3575  0199                     	;# 
  3576  019A                     	;# 
  3577  019A                     	;# 
  3578  019A                     	;# 
  3579  019B                     	;# 
  3580  019B                     	;# 
  3581  019B                     	;# 
  3582  019B                     	;# 
  3583  019B                     	;# 
  3584  019C                     	;# 
  3585  019C                     	;# 
  3586  019C                     	;# 
  3587  019D                     	;# 
  3588  019D                     	;# 
  3589  019D                     	;# 
  3590  019E                     	;# 
  3591  019E                     	;# 
  3592  019E                     	;# 
  3593  019F                     	;# 
  3594  019F                     	;# 
  3595  019F                     	;# 
  3596  019F                     	;# 
  3597  019F                     	;# 
  3598  020C                     	;# 
  3599  020D                     	;# 
  3600  020E                     	;# 
  3601  0210                     	;# 
  3602  0211                     	;# 
  3603  0211                     	;# 
  3604  0212                     	;# 
  3605  0212                     	;# 
  3606  0213                     	;# 
  3607  0213                     	;# 
  3608  0214                     	;# 
  3609  0214                     	;# 
  3610  0215                     	;# 
  3611  0215                     	;# 
  3612  0215                     	;# 
  3613  0215                     	;# 
  3614  0216                     	;# 
  3615  0216                     	;# 
  3616  0217                     	;# 
  3617  0217                     	;# 
  3618  021B                     	;# 
  3619  021C                     	;# 
  3620  021D                     	;# 
  3621  021E                     	;# 
  3622  021F                     	;# 
  3623  028C                     	;# 
  3624  028D                     	;# 
  3625  028E                     	;# 
  3626  0291                     	;# 
  3627  0291                     	;# 
  3628  0292                     	;# 
  3629  0293                     	;# 
  3630  0294                     	;# 
  3631  0295                     	;# 
  3632  0295                     	;# 
  3633  0296                     	;# 
  3634  0297                     	;# 
  3635  0298                     	;# 
  3636  0299                     	;# 
  3637  0299                     	;# 
  3638  029A                     	;# 
  3639  029B                     	;# 
  3640  029C                     	;# 
  3641  029E                     	;# 
  3642  029F                     	;# 
  3643  030C                     	;# 
  3644  030D                     	;# 
  3645  030E                     	;# 
  3646  0315                     	;# 
  3647  0316                     	;# 
  3648  0317                     	;# 
  3649  0318                     	;# 
  3650  0319                     	;# 
  3651  031B                     	;# 
  3652  031C                     	;# 
  3653  031D                     	;# 
  3654  031E                     	;# 
  3655  031F                     	;# 
  3656  038C                     	;# 
  3657  038D                     	;# 
  3658  038E                     	;# 
  3659  0390                     	;# 
  3660  0391                     	;# 
  3661  0392                     	;# 
  3662  0393                     	;# 
  3663  0394                     	;# 
  3664  0395                     	;# 
  3665  0396                     	;# 
  3666  0397                     	;# 
  3667  0398                     	;# 
  3668  0399                     	;# 
  3669  039D                     	;# 
  3670  039E                     	;# 
  3671  039F                     	;# 
  3672  040D                     	;# 
  3673  040F                     	;# 
  3674  040F                     	;# 
  3675  0410                     	;# 
  3676  0411                     	;# 
  3677  0412                     	;# 
  3678  0413                     	;# 
  3679  0413                     	;# 
  3680  0414                     	;# 
  3681  0414                     	;# 
  3682  0415                     	;# 
  3683  0416                     	;# 
  3684  0417                     	;# 
  3685  0418                     	;# 
  3686  041A                     	;# 
  3687  041A                     	;# 
  3688  041B                     	;# 
  3689  041B                     	;# 
  3690  041C                     	;# 
  3691  041D                     	;# 
  3692  041E                     	;# 
  3693  041F                     	;# 
  3694  048E                     	;# 
  3695  048E                     	;# 
  3696  048F                     	;# 
  3697  0490                     	;# 
  3698  0491                     	;# 
  3699  0492                     	;# 
  3700  0493                     	;# 
  3701  0493                     	;# 
  3702  0494                     	;# 
  3703  0494                     	;# 
  3704  0495                     	;# 
  3705  0496                     	;# 
  3706  0497                     	;# 
  3707  0498                     	;# 
  3708  049A                     	;# 
  3709  049A                     	;# 
  3710  049B                     	;# 
  3711  049B                     	;# 
  3712  049C                     	;# 
  3713  049D                     	;# 
  3714  049E                     	;# 
  3715  049F                     	;# 
  3716  050F                     	;# 
  3717  0510                     	;# 
  3718  0511                     	;# 
  3719  0512                     	;# 
  3720  0513                     	;# 
  3721  0514                     	;# 
  3722  0515                     	;# 
  3723  0516                     	;# 
  3724  0517                     	;# 
  3725  0518                     	;# 
  3726  0519                     	;# 
  3727  051A                     	;# 
  3728  058D                     	;# 
  3729  058E                     	;# 
  3730  058F                     	;# 
  3731  058F                     	;# 
  3732  058F                     	;# 
  3733  0590                     	;# 
  3734  0590                     	;# 
  3735  0591                     	;# 
  3736  0592                     	;# 
  3737  0592                     	;# 
  3738  0592                     	;# 
  3739  0593                     	;# 
  3740  0593                     	;# 
  3741  0594                     	;# 
  3742  0595                     	;# 
  3743  0595                     	;# 
  3744  0596                     	;# 
  3745  0597                     	;# 
  3746  0597                     	;# 
  3747  0598                     	;# 
  3748  0599                     	;# 
  3749  0599                     	;# 
  3750  0599                     	;# 
  3751  059A                     	;# 
  3752  059A                     	;# 
  3753  059E                     	;# 
  3754  059F                     	;# 
  3755  059F                     	;# 
  3756  0614                     	;# 
  3757  0614                     	;# 
  3758  0615                     	;# 
  3759  0616                     	;# 
  3760  0617                     	;# 
  3761  0617                     	;# 
  3762  0618                     	;# 
  3763  0619                     	;# 
  3764  061A                     	;# 
  3765  061A                     	;# 
  3766  061B                     	;# 
  3767  061C                     	;# 
  3768  068D                     	;# 
  3769  068E                     	;# 
  3770  068F                     	;# 
  3771  0690                     	;# 
  3772  0691                     	;# 
  3773  0692                     	;# 
  3774  0693                     	;# 
  3775  0694                     	;# 
  3776  0695                     	;# 
  3777  0696                     	;# 
  3778  0697                     	;# 
  3779  0698                     	;# 
  3780  0699                     	;# 
  3781  069A                     	;# 
  3782  069B                     	;# 
  3783  069C                     	;# 
  3784  069D                     	;# 
  3785  069E                     	;# 
  3786  069F                     	;# 
  3787  070D                     	;# 
  3788  070E                     	;# 
  3789  070F                     	;# 
  3790  0710                     	;# 
  3791  0711                     	;# 
  3792  0712                     	;# 
  3793  0713                     	;# 
  3794  0714                     	;# 
  3795  0715                     	;# 
  3796  0716                     	;# 
  3797  0717                     	;# 
  3798  0718                     	;# 
  3799  0719                     	;# 
  3800  071A                     	;# 
  3801  071B                     	;# 
  3802  071C                     	;# 
  3803  071D                     	;# 
  3804  071E                     	;# 
  3805  071F                     	;# 
  3806  078E                     	;# 
  3807  078F                     	;# 
  3808  0790                     	;# 
  3809  0791                     	;# 
  3810  0792                     	;# 
  3811  0793                     	;# 
  3812  0794                     	;# 
  3813  0795                     	;# 
  3814  0796                     	;# 
  3815  0797                     	;# 
  3816  0798                     	;# 
  3817  0799                     	;# 
  3818  079A                     	;# 
  3819  079B                     	;# 
  3820  079C                     	;# 
  3821  079D                     	;# 
  3822  079E                     	;# 
  3823  079F                     	;# 
  3824  080D                     	;# 
  3825  080E                     	;# 
  3826  080F                     	;# 
  3827  0810                     	;# 
  3828  0811                     	;# 
  3829  0812                     	;# 
  3830  0813                     	;# 
  3831  0814                     	;# 
  3832  0815                     	;# 
  3833  0816                     	;# 
  3834  0817                     	;# 
  3835  0818                     	;# 
  3836  0819                     	;# 
  3837  081A                     	;# 
  3838  081B                     	;# 
  3839  081C                     	;# 
  3840  081D                     	;# 
  3841  081E                     	;# 
  3842  081F                     	;# 
  3843  090C                     	;# 
  3844  090D                     	;# 
  3845  090E                     	;# 
  3846  090F                     	;# 
  3847  0910                     	;# 
  3848  0911                     	;# 
  3849  0912                     	;# 
  3850  0913                     	;# 
  3851  0914                     	;# 
  3852  0915                     	;# 
  3853  0916                     	;# 
  3854  0917                     	;# 
  3855  0D8E                     	;# 
  3856  0D8F                     	;# 
  3857  0D90                     	;# 
  3858  0D91                     	;# 
  3859  0D91                     	;# 
  3860  0D92                     	;# 
  3861  0D93                     	;# 
  3862  0D93                     	;# 
  3863  0D94                     	;# 
  3864  0D95                     	;# 
  3865  0D95                     	;# 
  3866  0D96                     	;# 
  3867  0D97                     	;# 
  3868  0D97                     	;# 
  3869  0D98                     	;# 
  3870  0D99                     	;# 
  3871  0D99                     	;# 
  3872  0D9A                     	;# 
  3873  0D9B                     	;# 
  3874  0D9C                     	;# 
  3875  0D9C                     	;# 
  3876  0D9D                     	;# 
  3877  0D9D                     	;# 
  3878  0D9E                     	;# 
  3879  0D9F                     	;# 
  3880  0DA0                     	;# 
  3881  0DA1                     	;# 
  3882  0DA1                     	;# 
  3883  0DA2                     	;# 
  3884  0DA3                     	;# 
  3885  0DA3                     	;# 
  3886  0DA4                     	;# 
  3887  0DA5                     	;# 
  3888  0DA5                     	;# 
  3889  0DA6                     	;# 
  3890  0DA7                     	;# 
  3891  0DA7                     	;# 
  3892  0DA8                     	;# 
  3893  0DA9                     	;# 
  3894  0DA9                     	;# 
  3895  0DAA                     	;# 
  3896  0DAB                     	;# 
  3897  0DAC                     	;# 
  3898  0DAC                     	;# 
  3899  0DAD                     	;# 
  3900  0DAD                     	;# 
  3901  0DAE                     	;# 
  3902  0DAF                     	;# 
  3903  0DB0                     	;# 
  3904  0DB1                     	;# 
  3905  0DB1                     	;# 
  3906  0DB2                     	;# 
  3907  0DB3                     	;# 
  3908  0DB3                     	;# 
  3909  0DB4                     	;# 
  3910  0DB5                     	;# 
  3911  0DB5                     	;# 
  3912  0DB6                     	;# 
  3913  0DB7                     	;# 
  3914  0DB7                     	;# 
  3915  0DB8                     	;# 
  3916  0DB9                     	;# 
  3917  0DB9                     	;# 
  3918  0DBA                     	;# 
  3919  0DBB                     	;# 
  3920  0DBC                     	;# 
  3921  0DBC                     	;# 
  3922  0DBD                     	;# 
  3923  0DBD                     	;# 
  3924  0DBE                     	;# 
  3925  0DBF                     	;# 
  3926  0DC0                     	;# 
  3927  0E0C                     	;# 
  3928  0E0D                     	;# 
  3929  0E0E                     	;# 
  3930  0E0F                     	;# 
  3931  0E10                     	;# 
  3932  0E11                     	;# 
  3933  0E12                     	;# 
  3934  0E13                     	;# 
  3935  0E14                     	;# 
  3936  0E15                     	;# 
  3937  0E15                     	;# 
  3938  0E15                     	;# 
  3939  0E16                     	;# 
  3940  0E16                     	;# 
  3941  0E16                     	;# 
  3942  0E17                     	;# 
  3943  0E17                     	;# 
  3944  0E17                     	;# 
  3945  0E18                     	;# 
  3946  0E18                     	;# 
  3947  0E18                     	;# 
  3948  0E19                     	;# 
  3949  0E1A                     	;# 
  3950  0E1B                     	;# 
  3951  0E1D                     	;# 
  3952  0E1E                     	;# 
  3953  0E1F                     	;# 
  3954  0E21                     	;# 
  3955  0E22                     	;# 
  3956  0E23                     	;# 
  3957  0E24                     	;# 
  3958  0E25                     	;# 
  3959  0E26                     	;# 
  3960  0E27                     	;# 
  3961  0E28                     	;# 
  3962  0E29                     	;# 
  3963  0E2D                     	;# 
  3964  0E2E                     	;# 
  3965  0E2F                     	;# 
  3966  0E30                     	;# 
  3967  0E31                     	;# 
  3968  0E32                     	;# 
  3969  0E35                     	;# 
  3970  0E36                     	;# 
  3971  0E37                     	;# 
  3972  0E38                     	;# 
  3973  0E39                     	;# 
  3974  0E3A                     	;# 
  3975  0E3B                     	;# 
  3976  0E3C                     	;# 
  3977  0E3D                     	;# 
  3978  0E3E                     	;# 
  3979  0E90                     	;# 
  3980  0E91                     	;# 
  3981  0E92                     	;# 
  3982  0E93                     	;# 
  3983  0E94                     	;# 
  3984  0E95                     	;# 
  3985  0E96                     	;# 
  3986  0E97                     	;# 
  3987  0E98                     	;# 
  3988  0E99                     	;# 
  3989  0E9A                     	;# 
  3990  0E9B                     	;# 
  3991  0E9C                     	;# 
  3992  0E9D                     	;# 
  3993  0E9E                     	;# 
  3994  0E9F                     	;# 
  3995  0EA0                     	;# 
  3996  0EA1                     	;# 
  3997  0EA2                     	;# 
  3998  0EA3                     	;# 
  3999  0EA4                     	;# 
  4000  0EA5                     	;# 
  4001  0EA6                     	;# 
  4002  0EA7                     	;# 
  4003  0F0F                     	;# 
  4004  0F10                     	;# 
  4005  0F11                     	;# 
  4006  0F12                     	;# 
  4007  0F13                     	;# 
  4008  0F14                     	;# 
  4009  0F15                     	;# 
  4010  0F16                     	;# 
  4011  0F17                     	;# 
  4012  0F18                     	;# 
  4013  0F19                     	;# 
  4014  0F1A                     	;# 
  4015  0F1B                     	;# 
  4016  0F1C                     	;# 
  4017  0F1D                     	;# 
  4018  0F1E                     	;# 
  4019  0F1F                     	;# 
  4020  0F20                     	;# 
  4021  0F21                     	;# 
  4022  0F22                     	;# 
  4023  0F23                     	;# 
  4024  0F24                     	;# 
  4025  0F25                     	;# 
  4026  0F26                     	;# 
  4027  0F27                     	;# 
  4028  0F28                     	;# 
  4029  0F29                     	;# 
  4030  0F2A                     	;# 
  4031  0F2B                     	;# 
  4032  0F2C                     	;# 
  4033  0F2D                     	;# 
  4034  0F2E                     	;# 
  4035  0F2F                     	;# 
  4036  0F30                     	;# 
  4037  0F31                     	;# 
  4038  0F32                     	;# 
  4039  0F33                     	;# 
  4040  0F34                     	;# 
  4041  0F35                     	;# 
  4042  0F36                     	;# 
  4043  0F37                     	;# 
  4044  0FE4                     	;# 
  4045  0FE5                     	;# 
  4046  0FE6                     	;# 
  4047  0FE7                     	;# 
  4048  0FE8                     	;# 
  4049  0FE9                     	;# 
  4050  0FEA                     	;# 
  4051  0FEB                     	;# 
  4052  0FED                     	;# 
  4053  0FEE                     	;# 
  4054  0FEF                     	;# 
  4055  0000                     	;# 
  4056  0001                     	;# 
  4057  0002                     	;# 
  4058  0003                     	;# 
  4059  0004                     	;# 
  4060  0005                     	;# 
  4061  0006                     	;# 
  4062  0007                     	;# 
  4063  0008                     	;# 
  4064  0009                     	;# 
  4065  000A                     	;# 
  4066  000B                     	;# 
  4067  000C                     	;# 
  4068  000D                     	;# 
  4069  000E                     	;# 
  4070  0010                     	;# 
  4071  0011                     	;# 
  4072  0012                     	;# 
  4073  0013                     	;# 
  4074  0014                     	;# 
  4075  0015                     	;# 
  4076  0016                     	;# 
  4077  0017                     	;# 
  4078  0018                     	;# 
  4079  0018                     	;# 
  4080  0019                     	;# 
  4081  001A                     	;# 
  4082  001B                     	;# 
  4083  001C                     	;# 
  4084  001C                     	;# 
  4085  001D                     	;# 
  4086  001E                     	;# 
  4087  001F                     	;# 
  4088  008C                     	;# 
  4089  008D                     	;# 
  4090  008E                     	;# 
  4091  0090                     	;# 
  4092  0091                     	;# 
  4093  0092                     	;# 
  4094  0093                     	;# 
  4095  0094                     	;# 
  4096  0095                     	;# 
  4097  0096                     	;# 
  4098  0097                     	;# 
  4099  0098                     	;# 
  4100  0099                     	;# 
  4101  009A                     	;# 
  4102  009B                     	;# 
  4103  009C                     	;# 
  4104  009D                     	;# 
  4105  009E                     	;# 
  4106  009F                     	;# 
  4107  010C                     	;# 
  4108  010D                     	;# 
  4109  010E                     	;# 
  4110  0111                     	;# 
  4111  0112                     	;# 
  4112  0113                     	;# 
  4113  0114                     	;# 
  4114  0115                     	;# 
  4115  0116                     	;# 
  4116  0117                     	;# 
  4117  0118                     	;# 
  4118  0119                     	;# 
  4119  011A                     	;# 
  4120  011B                     	;# 
  4121  011C                     	;# 
  4122  011D                     	;# 
  4123  018C                     	;# 
  4124  018D                     	;# 
  4125  018E                     	;# 
  4126  0191                     	;# 
  4127  0191                     	;# 
  4128  0192                     	;# 
  4129  0193                     	;# 
  4130  0193                     	;# 
  4131  0194                     	;# 
  4132  0195                     	;# 
  4133  0196                     	;# 
  4134  0197                     	;# 
  4135  0199                     	;# 
  4136  0199                     	;# 
  4137  0199                     	;# 
  4138  019A                     	;# 
  4139  019A                     	;# 
  4140  019A                     	;# 
  4141  019B                     	;# 
  4142  019B                     	;# 
  4143  019B                     	;# 
  4144  019B                     	;# 
  4145  019B                     	;# 
  4146  019C                     	;# 
  4147  019C                     	;# 
  4148  019C                     	;# 
  4149  019D                     	;# 
  4150  019D                     	;# 
  4151  019D                     	;# 
  4152  019E                     	;# 
  4153  019E                     	;# 
  4154  019E                     	;# 
  4155  019F                     	;# 
  4156  019F                     	;# 
  4157  019F                     	;# 
  4158  019F                     	;# 
  4159  019F                     	;# 
  4160  020C                     	;# 
  4161  020D                     	;# 
  4162  020E                     	;# 
  4163  0210                     	;# 
  4164  0211                     	;# 
  4165  0211                     	;# 
  4166  0212                     	;# 
  4167  0212                     	;# 
  4168  0213                     	;# 
  4169  0213                     	;# 
  4170  0214                     	;# 
  4171  0214                     	;# 
  4172  0215                     	;# 
  4173  0215                     	;# 
  4174  0215                     	;# 
  4175  0215                     	;# 
  4176  0216                     	;# 
  4177  0216                     	;# 
  4178  0217                     	;# 
  4179  0217                     	;# 
  4180  021B                     	;# 
  4181  021C                     	;# 
  4182  021D                     	;# 
  4183  021E                     	;# 
  4184  021F                     	;# 
  4185  028C                     	;# 
  4186  028D                     	;# 
  4187  028E                     	;# 
  4188  0291                     	;# 
  4189  0291                     	;# 
  4190  0292                     	;# 
  4191  0293                     	;# 
  4192  0294                     	;# 
  4193  0295                     	;# 
  4194  0295                     	;# 
  4195  0296                     	;# 
  4196  0297                     	;# 
  4197  0298                     	;# 
  4198  0299                     	;# 
  4199  0299                     	;# 
  4200  029A                     	;# 
  4201  029B                     	;# 
  4202  029C                     	;# 
  4203  029E                     	;# 
  4204  029F                     	;# 
  4205  030C                     	;# 
  4206  030D                     	;# 
  4207  030E                     	;# 
  4208  0315                     	;# 
  4209  0316                     	;# 
  4210  0317                     	;# 
  4211  0318                     	;# 
  4212  0319                     	;# 
  4213  031B                     	;# 
  4214  031C                     	;# 
  4215  031D                     	;# 
  4216  031E                     	;# 
  4217  031F                     	;# 
  4218  038C                     	;# 
  4219  038D                     	;# 
  4220  038E                     	;# 
  4221  0390                     	;# 
  4222  0391                     	;# 
  4223  0392                     	;# 
  4224  0393                     	;# 
  4225  0394                     	;# 
  4226  0395                     	;# 
  4227  0396                     	;# 
  4228  0397                     	;# 
  4229  0398                     	;# 
  4230  0399                     	;# 
  4231  039D                     	;# 
  4232  039E                     	;# 
  4233  039F                     	;# 
  4234  040D                     	;# 
  4235  040F                     	;# 
  4236  040F                     	;# 
  4237  0410                     	;# 
  4238  0411                     	;# 
  4239  0412                     	;# 
  4240  0413                     	;# 
  4241  0413                     	;# 
  4242  0414                     	;# 
  4243  0414                     	;# 
  4244  0415                     	;# 
  4245  0416                     	;# 
  4246  0417                     	;# 
  4247  0418                     	;# 
  4248  041A                     	;# 
  4249  041A                     	;# 
  4250  041B                     	;# 
  4251  041B                     	;# 
  4252  041C                     	;# 
  4253  041D                     	;# 
  4254  041E                     	;# 
  4255  041F                     	;# 
  4256  048E                     	;# 
  4257  048E                     	;# 
  4258  048F                     	;# 
  4259  0490                     	;# 
  4260  0491                     	;# 
  4261  0492                     	;# 
  4262  0493                     	;# 
  4263  0493                     	;# 
  4264  0494                     	;# 
  4265  0494                     	;# 
  4266  0495                     	;# 
  4267  0496                     	;# 
  4268  0497                     	;# 
  4269  0498                     	;# 
  4270  049A                     	;# 
  4271  049A                     	;# 
  4272  049B                     	;# 
  4273  049B                     	;# 
  4274  049C                     	;# 
  4275  049D                     	;# 
  4276  049E                     	;# 
  4277  049F                     	;# 
  4278  050F                     	;# 
  4279  0510                     	;# 
  4280  0511                     	;# 
  4281  0512                     	;# 
  4282  0513                     	;# 
  4283  0514                     	;# 
  4284  0515                     	;# 
  4285  0516                     	;# 
  4286  0517                     	;# 
  4287  0518                     	;# 
  4288  0519                     	;# 
  4289  051A                     	;# 
  4290  058D                     	;# 
  4291  058E                     	;# 
  4292  058F                     	;# 
  4293  058F                     	;# 
  4294  058F                     	;# 
  4295  0590                     	;# 
  4296  0590                     	;# 
  4297  0591                     	;# 
  4298  0592                     	;# 
  4299  0592                     	;# 
  4300  0592                     	;# 
  4301  0593                     	;# 
  4302  0593                     	;# 
  4303  0594                     	;# 
  4304  0595                     	;# 
  4305  0595                     	;# 
  4306  0596                     	;# 
  4307  0597                     	;# 
  4308  0597                     	;# 
  4309  0598                     	;# 
  4310  0599                     	;# 
  4311  0599                     	;# 
  4312  0599                     	;# 
  4313  059A                     	;# 
  4314  059A                     	;# 
  4315  059E                     	;# 
  4316  059F                     	;# 
  4317  059F                     	;# 
  4318  0614                     	;# 
  4319  0614                     	;# 
  4320  0615                     	;# 
  4321  0616                     	;# 
  4322  0617                     	;# 
  4323  0617                     	;# 
  4324  0618                     	;# 
  4325  0619                     	;# 
  4326  061A                     	;# 
  4327  061A                     	;# 
  4328  061B                     	;# 
  4329  061C                     	;# 
  4330  068D                     	;# 
  4331  068E                     	;# 
  4332  068F                     	;# 
  4333  0690                     	;# 
  4334  0691                     	;# 
  4335  0692                     	;# 
  4336  0693                     	;# 
  4337  0694                     	;# 
  4338  0695                     	;# 
  4339  0696                     	;# 
  4340  0697                     	;# 
  4341  0698                     	;# 
  4342  0699                     	;# 
  4343  069A                     	;# 
  4344  069B                     	;# 
  4345  069C                     	;# 
  4346  069D                     	;# 
  4347  069E                     	;# 
  4348  069F                     	;# 
  4349  070D                     	;# 
  4350  070E                     	;# 
  4351  070F                     	;# 
  4352  0710                     	;# 
  4353  0711                     	;# 
  4354  0712                     	;# 
  4355  0713                     	;# 
  4356  0714                     	;# 
  4357  0715                     	;# 
  4358  0716                     	;# 
  4359  0717                     	;# 
  4360  0718                     	;# 
  4361  0719                     	;# 
  4362  071A                     	;# 
  4363  071B                     	;# 
  4364  071C                     	;# 
  4365  071D                     	;# 
  4366  071E                     	;# 
  4367  071F                     	;# 
  4368  078E                     	;# 
  4369  078F                     	;# 
  4370  0790                     	;# 
  4371  0791                     	;# 
  4372  0792                     	;# 
  4373  0793                     	;# 
  4374  0794                     	;# 
  4375  0795                     	;# 
  4376  0796                     	;# 
  4377  0797                     	;# 
  4378  0798                     	;# 
  4379  0799                     	;# 
  4380  079A                     	;# 
  4381  079B                     	;# 
  4382  079C                     	;# 
  4383  079D                     	;# 
  4384  079E                     	;# 
  4385  079F                     	;# 
  4386  080D                     	;# 
  4387  080E                     	;# 
  4388  080F                     	;# 
  4389  0810                     	;# 
  4390  0811                     	;# 
  4391  0812                     	;# 
  4392  0813                     	;# 
  4393  0814                     	;# 
  4394  0815                     	;# 
  4395  0816                     	;# 
  4396  0817                     	;# 
  4397  0818                     	;# 
  4398  0819                     	;# 
  4399  081A                     	;# 
  4400  081B                     	;# 
  4401  081C                     	;# 
  4402  081D                     	;# 
  4403  081E                     	;# 
  4404  081F                     	;# 
  4405  090C                     	;# 
  4406  090D                     	;# 
  4407  090E                     	;# 
  4408  090F                     	;# 
  4409  0910                     	;# 
  4410  0911                     	;# 
  4411  0912                     	;# 
  4412  0913                     	;# 
  4413  0914                     	;# 
  4414  0915                     	;# 
  4415  0916                     	;# 
  4416  0917                     	;# 
  4417  0D8E                     	;# 
  4418  0D8F                     	;# 
  4419  0D90                     	;# 
  4420  0D91                     	;# 
  4421  0D91                     	;# 
  4422  0D92                     	;# 
  4423  0D93                     	;# 
  4424  0D93                     	;# 
  4425  0D94                     	;# 
  4426  0D95                     	;# 
  4427  0D95                     	;# 
  4428  0D96                     	;# 
  4429  0D97                     	;# 
  4430  0D97                     	;# 
  4431  0D98                     	;# 
  4432  0D99                     	;# 
  4433  0D99                     	;# 
  4434  0D9A                     	;# 
  4435  0D9B                     	;# 
  4436  0D9C                     	;# 
  4437  0D9C                     	;# 
  4438  0D9D                     	;# 
  4439  0D9D                     	;# 
  4440  0D9E                     	;# 
  4441  0D9F                     	;# 
  4442  0DA0                     	;# 
  4443  0DA1                     	;# 
  4444  0DA1                     	;# 
  4445  0DA2                     	;# 
  4446  0DA3                     	;# 
  4447  0DA3                     	;# 
  4448  0DA4                     	;# 
  4449  0DA5                     	;# 
  4450  0DA5                     	;# 
  4451  0DA6                     	;# 
  4452  0DA7                     	;# 
  4453  0DA7                     	;# 
  4454  0DA8                     	;# 
  4455  0DA9                     	;# 
  4456  0DA9                     	;# 
  4457  0DAA                     	;# 
  4458  0DAB                     	;# 
  4459  0DAC                     	;# 
  4460  0DAC                     	;# 
  4461  0DAD                     	;# 
  4462  0DAD                     	;# 
  4463  0DAE                     	;# 
  4464  0DAF                     	;# 
  4465  0DB0                     	;# 
  4466  0DB1                     	;# 
  4467  0DB1                     	;# 
  4468  0DB2                     	;# 
  4469  0DB3                     	;# 
  4470  0DB3                     	;# 
  4471  0DB4                     	;# 
  4472  0DB5                     	;# 
  4473  0DB5                     	;# 
  4474  0DB6                     	;# 
  4475  0DB7                     	;# 
  4476  0DB7                     	;# 
  4477  0DB8                     	;# 
  4478  0DB9                     	;# 
  4479  0DB9                     	;# 
  4480  0DBA                     	;# 
  4481  0DBB                     	;# 
  4482  0DBC                     	;# 
  4483  0DBC                     	;# 
  4484  0DBD                     	;# 
  4485  0DBD                     	;# 
  4486  0DBE                     	;# 
  4487  0DBF                     	;# 
  4488  0DC0                     	;# 
  4489  0E0C                     	;# 
  4490  0E0D                     	;# 
  4491  0E0E                     	;# 
  4492  0E0F                     	;# 
  4493  0E10                     	;# 
  4494  0E11                     	;# 
  4495  0E12                     	;# 
  4496  0E13                     	;# 
  4497  0E14                     	;# 
  4498  0E15                     	;# 
  4499  0E15                     	;# 
  4500  0E15                     	;# 
  4501  0E16                     	;# 
  4502  0E16                     	;# 
  4503  0E16                     	;# 
  4504  0E17                     	;# 
  4505  0E17                     	;# 
  4506  0E17                     	;# 
  4507  0E18                     	;# 
  4508  0E18                     	;# 
  4509  0E18                     	;# 
  4510  0E19                     	;# 
  4511  0E1A                     	;# 
  4512  0E1B                     	;# 
  4513  0E1D                     	;# 
  4514  0E1E                     	;# 
  4515  0E1F                     	;# 
  4516  0E21                     	;# 
  4517  0E22                     	;# 
  4518  0E23                     	;# 
  4519  0E24                     	;# 
  4520  0E25                     	;# 
  4521  0E26                     	;# 
  4522  0E27                     	;# 
  4523  0E28                     	;# 
  4524  0E29                     	;# 
  4525  0E2D                     	;# 
  4526  0E2E                     	;# 
  4527  0E2F                     	;# 
  4528  0E30                     	;# 
  4529  0E31                     	;# 
  4530  0E32                     	;# 
  4531  0E35                     	;# 
  4532  0E36                     	;# 
  4533  0E37                     	;# 
  4534  0E38                     	;# 
  4535  0E39                     	;# 
  4536  0E3A                     	;# 
  4537  0E3B                     	;# 
  4538  0E3C                     	;# 
  4539  0E3D                     	;# 
  4540  0E3E                     	;# 
  4541  0E90                     	;# 
  4542  0E91                     	;# 
  4543  0E92                     	;# 
  4544  0E93                     	;# 
  4545  0E94                     	;# 
  4546  0E95                     	;# 
  4547  0E96                     	;# 
  4548  0E97                     	;# 
  4549  0E98                     	;# 
  4550  0E99                     	;# 
  4551  0E9A                     	;# 
  4552  0E9B                     	;# 
  4553  0E9C                     	;# 
  4554  0E9D                     	;# 
  4555  0E9E                     	;# 
  4556  0E9F                     	;# 
  4557  0EA0                     	;# 
  4558  0EA1                     	;# 
  4559  0EA2                     	;# 
  4560  0EA3                     	;# 
  4561  0EA4                     	;# 
  4562  0EA5                     	;# 
  4563  0EA6                     	;# 
  4564  0EA7                     	;# 
  4565  0F0F                     	;# 
  4566  0F10                     	;# 
  4567  0F11                     	;# 
  4568  0F12                     	;# 
  4569  0F13                     	;# 
  4570  0F14                     	;# 
  4571  0F15                     	;# 
  4572  0F16                     	;# 
  4573  0F17                     	;# 
  4574  0F18                     	;# 
  4575  0F19                     	;# 
  4576  0F1A                     	;# 
  4577  0F1B                     	;# 
  4578  0F1C                     	;# 
  4579  0F1D                     	;# 
  4580  0F1E                     	;# 
  4581  0F1F                     	;# 
  4582  0F20                     	;# 
  4583  0F21                     	;# 
  4584  0F22                     	;# 
  4585  0F23                     	;# 
  4586  0F24                     	;# 
  4587  0F25                     	;# 
  4588  0F26                     	;# 
  4589  0F27                     	;# 
  4590  0F28                     	;# 
  4591  0F29                     	;# 
  4592  0F2A                     	;# 
  4593  0F2B                     	;# 
  4594  0F2C                     	;# 
  4595  0F2D                     	;# 
  4596  0F2E                     	;# 
  4597  0F2F                     	;# 
  4598  0F30                     	;# 
  4599  0F31                     	;# 
  4600  0F32                     	;# 
  4601  0F33                     	;# 
  4602  0F34                     	;# 
  4603  0F35                     	;# 
  4604  0F36                     	;# 
  4605  0F37                     	;# 
  4606  0FE4                     	;# 
  4607  0FE5                     	;# 
  4608  0FE6                     	;# 
  4609  0FE7                     	;# 
  4610  0FE8                     	;# 
  4611  0FE9                     	;# 
  4612  0FEA                     	;# 
  4613  0FEB                     	;# 
  4614  0FED                     	;# 
  4615  0FEE                     	;# 
  4616  0FEF                     	;# 
  4617                           
  4618                           	psect	idataBANK0
  4619  01E2                     __pidataBANK0:
  4620                           
  4621                           ;initializer for _Duty
  4622  01E2  34FF               	retlw	255
  4623  01E3  3401               	retlw	1
  4624                           
  4625                           ;initializer for _Flag
  4626  01E4  3401               	retlw	1
  4627                           
  4628                           ;initializer for _Msg2
  4629  01E5  3444               	retlw	68
  4630  01E6  3475               	retlw	117
  4631  01E7  3474               	retlw	116
  4632  01E8  3479               	retlw	121
  4633  01E9  3420               	retlw	32
  4634  01EA  343D               	retlw	61
  4635  01EB  3420               	retlw	32
  4636  01EC  3458               	retlw	88
  4637  01ED  3458               	retlw	88
  4638  01EE  3458               	retlw	88
  4639  01EF  3458               	retlw	88
  4640  01F0  3400               	retlw	0
  4641                           
  4642                           	psect	idataBANK1
  4643  0245                     __pidataBANK1:
  4644                           
  4645                           ;initializer for _Msg1
  4646  0245  3444               	retlw	68
  4647  0246  3443               	retlw	67
  4648  0247  3420               	retlw	32
  4649  0248  344D               	retlw	77
  4650  0249  344F               	retlw	79
  4651  024A  3454               	retlw	84
  4652  024B  344F               	retlw	79
  4653  024C  3452               	retlw	82
  4654  024D  3420               	retlw	32
  4655  024E  3453               	retlw	83
  4656  024F  3450               	retlw	80
  4657  0250  3444               	retlw	68
  4658  0251  3420               	retlw	32
  4659  0252  3443               	retlw	67
  4660  0253  3454               	retlw	84
  4661  0254  344C               	retlw	76
  4662  0255  3400               	retlw	0
  4663                           
  4664                           	psect	stringtext1
  4665  0800                     __pstringtext1:
  4666  0800                     _ICON:
  4667  0800  3400               	retlw	0
  4668  0801  3400               	retlw	0
  4669  0802  3410               	retlw	16
  4670  0803  3400               	retlw	0
  4671  0804  3402               	retlw	2
  4672  0805  3400               	retlw	0
  4673  0806  3410               	retlw	16
  4674  0807  3400               	retlw	0
  4675  0808  3404               	retlw	4
  4676  0809  3400               	retlw	0
  4677  080A  3410               	retlw	16
  4678  080B  3400               	retlw	0
  4679  080C  3406               	retlw	6
  4680  080D  3400               	retlw	0
  4681  080E  3410               	retlw	16
  4682  080F  3400               	retlw	0
  4683  0810  3407               	retlw	7
  4684  0811  3400               	retlw	0
  4685  0812  3410               	retlw	16
  4686  0813  3400               	retlw	0
  4687  0814  3407               	retlw	7
  4688  0815  3400               	retlw	0
  4689  0816  3408               	retlw	8
  4690  0817  3400               	retlw	0
  4691  0818  3407               	retlw	7
  4692  0819  3400               	retlw	0
  4693  081A  3418               	retlw	24
  4694  081B  3400               	retlw	0
  4695  081C  3409               	retlw	9
  4696  081D  3400               	retlw	0
  4697  081E  3410               	retlw	16
  4698  081F  3400               	retlw	0
  4699  0820  340B               	retlw	11
  4700  0821  3400               	retlw	0
  4701  0822  3410               	retlw	16
  4702  0823  3400               	retlw	0
  4703  0824  340D               	retlw	13
  4704  0825  3400               	retlw	0
  4705  0826  3402               	retlw	2
  4706  0827  3400               	retlw	0
  4707  0828  340D               	retlw	13
  4708  0829  3400               	retlw	0
  4709  082A  3412               	retlw	18
  4710  082B  3400               	retlw	0
  4711  082C  340D               	retlw	13
  4712  082D  3400               	retlw	0
  4713  082E  341A               	retlw	26
  4714  082F  3400               	retlw	0
  4715  0830  340D               	retlw	13
  4716  0831  3400               	retlw	0
  4717  0832  341E               	retlw	30
  4718  0833  3400               	retlw	0
  4719  0834  340F               	retlw	15
  4720  0835  3400               	retlw	0
  4721  0836  3410               	retlw	16
  4722  0837  3400               	retlw	0
  4723  0838                     __end_of_ICON:
  4724                           
  4725                           	psect	stringtext2
  4726  0838                     __pstringtext2:
  4727  0838                     _i2c_fsmStateTable:
  4728  0838  342A               	retlw	low _I2C_DO_IDLE
  4729  0839  3401               	retlw	high _I2C_DO_IDLE
  4730  083A  3483               	retlw	low _I2C_DO_SEND_ADR_READ
  4731  083B  3401               	retlw	high _I2C_DO_SEND_ADR_READ
  4732  083C  347B               	retlw	low _I2C_DO_SEND_ADR_WRITE
  4733  083D  3401               	retlw	high _I2C_DO_SEND_ADR_WRITE
  4734  083E  34A2               	retlw	low _I2C_DO_TX
  4735  083F  3405               	retlw	high _I2C_DO_TX
  4736  0840  34E3               	retlw	low _I2C_DO_RX
  4737  0841  3404               	retlw	high _I2C_DO_RX
  4738  0842  3474               	retlw	low _I2C_DO_RCEN
  4739  0843  3401               	retlw	high _I2C_DO_RCEN
  4740  0844  3484               	retlw	low _I2C_DO_TX_EMPTY
  4741  0845  3403               	retlw	high _I2C_DO_TX_EMPTY
  4742  0846  342F               	retlw	low _I2C_DO_SEND_RESTART_READ
  4743  0847  3401               	retlw	high _I2C_DO_SEND_RESTART_READ
  4744  0848  3434               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  4745  0849  3401               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  4746  084A  3439               	retlw	low _I2C_DO_SEND_RESTART
  4747  084B  3401               	retlw	high _I2C_DO_SEND_RESTART
  4748  084C  343E               	retlw	low _I2C_DO_SEND_STOP
  4749  084D  3401               	retlw	high _I2C_DO_SEND_STOP
  4750  084E  3443               	retlw	low _I2C_DO_RX_ACK
  4751  084F  3401               	retlw	high _I2C_DO_RX_ACK
  4752  0850  3448               	retlw	low _I2C_DO_RX_NACK_STOP
  4753  0851  3401               	retlw	high _I2C_DO_RX_NACK_STOP
  4754  0852  344D               	retlw	low _I2C_DO_RX_NACK_RESTART
  4755  0853  3401               	retlw	high _I2C_DO_RX_NACK_RESTART
  4756  0854  3452               	retlw	low _I2C_DO_RESET
  4757  0855  3401               	retlw	high _I2C_DO_RESET
  4758  0856  343A               	retlw	low _I2C_DO_ADDRESS_NACK
  4759  0857  3403               	retlw	high _I2C_DO_ADDRESS_NACK
  4760  0858                     __end_of_i2c_fsmStateTable:
  4761                           
  4762                           	psect	stringtext3
  4763  0858                     __pstringtext3:
  4764  0858                     _dpowers:
  4765  0858  3401               	retlw	1
  4766  0859  3400               	retlw	0
  4767  085A  340A               	retlw	10
  4768  085B  3400               	retlw	0
  4769  085C  3464               	retlw	100
  4770  085D  3400               	retlw	0
  4771  085E  34E8               	retlw	232
  4772  085F  3403               	retlw	3
  4773  0860  3410               	retlw	16
  4774  0861  3427               	retlw	39
  4775  0862                     __end_of_dpowers:
  4776  0012                     _PIR2bits	set	18
  4777  000D                     _PORTBbits	set	13
  4778  0011                     _PIR1bits	set	17
  4779  0091                     _PIE1bits	set	145
  4780  0097                     _OPTION_REGbits	set	151
  4781  008E                     _TRISC	set	142
  4782  008D                     _TRISB	set	141
  4783  008C                     _TRISA	set	140
  4784  0090                     _TRISE	set	144
  4785  0099                     _WDTCON	set	153
  4786  009D                     _BORCON	set	157
  4787  009A                     _OSCTUNE	set	154
  4788  009C                     _OSCSTAT	set	156
  4789  009B                     _OSCCON	set	155
  4790  04E6                     _PLLR	set	1254
  4791  010D                     _LATBbits	set	269
  4792  010E                     _LATC	set	270
  4793  010D                     _LATB	set	269
  4794  010C                     _LATA	set	268
  4795  018C                     _ANSELA	set	396
  4796  018D                     _ANSELB	set	397
  4797  018E                     _ANSELC	set	398
  4798  0214                     _SSP1STATbits	set	532
  4799  0216                     _SSP1CON2bits	set	534
  4800  0211                     _SSP1BUF	set	529
  4801  0215                     _SSP1CON1bits	set	533
  4802  0212                     _SSP1ADD	set	530
  4803  0216                     _SSP1CON2	set	534
  4804  0215                     _SSP1CON1	set	533
  4805  0214                     _SSP1STAT	set	532
  4806  020E                     _WPUC	set	526
  4807  020C                     _WPUA	set	524
  4808  020D                     _WPUB	set	525
  4809  0210                     _WPUE	set	528
  4810  028E                     _ODCONC	set	654
  4811  028D                     _ODCONB	set	653
  4812  028C                     _ODCONA	set	652
  4813  0293                     _CCP1CONbits	set	659
  4814  029E                     _CCPTMRS1bits	set	670
  4815  0291                     _CCPR1L	set	657
  4816  0292                     _CCPR1H	set	658
  4817  0293                     _CCP1CON	set	659
  4818  030E                     _SLRCONC	set	782
  4819  030D                     _SLRCONB	set	781
  4820  030C                     _SLRCONA	set	780
  4821  038E                     _INLVLC	set	910
  4822  038D                     _INLVLB	set	909
  4823  038C                     _INLVLA	set	908
  4824  0494                     _PR2	set	1172
  4825  0493                     _TMR2	set	1171
  4826  0495                     _T2CONbits	set	1173
  4827  0498                     _T2RSTbits	set	1176
  4828  0496                     _T2HLTbits	set	1174
  4829  0495                     _T2CON	set	1173
  4830  0493                     _T2TMR	set	1171
  4831  0494                     _T2PR	set	1172
  4832  0498                     _T2RST	set	1176
  4833  0496                     _T2HLT	set	1174
  4834  0497                     _T2CLKCON	set	1175
  4835  0813                     _COG3CON0bits	set	2067
  4836  081D                     _COG3ASD0bits	set	2077
  4837  080E                     _COG3PHF	set	2062
  4838  080D                     _COG3PHR	set	2061
  4839  0810                     _COG3BLKF	set	2064
  4840  080F                     _COG3BLKR	set	2063
  4841  0812                     _COG3DBF	set	2066
  4842  0811                     _COG3DBR	set	2065
  4843  081F                     _COG3STR	set	2079
  4844  081E                     _COG3ASD1	set	2078
  4845  081D                     _COG3ASD0	set	2077
  4846  081C                     _COG3FSIM1	set	2076
  4847  081B                     _COG3FSIM0	set	2075
  4848  081A                     _COG3FIS1	set	2074
  4849  0819                     _COG3FIS0	set	2073
  4850  0818                     _COG3RSIM1	set	2072
  4851  0817                     _COG3RSIM0	set	2071
  4852  0816                     _COG3RIS1	set	2070
  4853  0815                     _COG3RIS0	set	2069
  4854  0814                     _COG3CON1	set	2068
  4855  0813                     _COG3CON0	set	2067
  4856  0E3A                     _SSPCLKPPS	set	3642
  4857  0E3B                     _SSPDATPPS	set	3643
  4858  0E96                     _RA6PPS	set	3734
  4859  0EA4                     _RC4PPS	set	3748
  4860  0EA1                     _RC1PPS	set	3745
  4861  0EA3                     _RC3PPS	set	3747
  4862  0EA0                     _RC0PPS	set	3744
  4863  0E97                     _RA7PPS	set	3735
  4864  0862                     STR_1:
  4865  0862  3444               	retlw	68	;'D'
  4866  0863  3475               	retlw	117	;'u'
  4867  0864  3474               	retlw	116	;'t'
  4868  0865  3479               	retlw	121	;'y'
  4869  0866  3420               	retlw	32	;' '
  4870  0867  343D               	retlw	61	;'='
  4871  0868  3420               	retlw	32	;' '
  4872  0869  3425               	retlw	37	;'%'
  4873  086A  3434               	retlw	52	;'4'
  4874  086B  3464               	retlw	100	;'d'
  4875  086C  3400               	retlw	0
  4876                           
  4877                           	psect	stringtext4
  4878  0000                     __pstringtext4:
  4879                           
  4880                           	psect	cinit
  4881  07DD                     start_initialization:	
  4882                           ; #config settings
  4883                           
  4884  07DD                     __initialization:
  4885                           
  4886                           ; Initialize objects allocated to BANK0
  4887  07DD  30E2               	movlw	low __pidataBANK0
  4888  07DE  0084               	movwf	4
  4889  07DF  3081               	movlw	(high __pidataBANK0)| (0+128)
  4890  07E0  0085               	movwf	5
  4891  07E1  3050               	movlw	low __pdataBANK0
  4892  07E2  0086               	movwf	6
  4893  07E3  3000               	movlw	high __pdataBANK0
  4894  07E4  0087               	movwf	7
  4895  07E5  300F               	movlw	15
  4896  07E6  3181  216E  3187   	fcall	init_ram
  4897                           
  4898                           ; Initialize objects allocated to BANK1
  4899  07E9  3045               	movlw	low __pidataBANK1
  4900  07EA  0084               	movwf	4
  4901  07EB  3082               	movlw	(high __pidataBANK1)| (0+128)
  4902  07EC  0085               	movwf	5
  4903  07ED  30A0               	movlw	low __pdataBANK1
  4904  07EE  0086               	movwf	6
  4905  07EF  3000               	movlw	high __pdataBANK1
  4906  07F0  0087               	movwf	7
  4907  07F1  3011               	movlw	17
  4908  07F2  3181  216E  3187   	fcall	init_ram
  4909                           
  4910                           ; Clear objects allocated to BANK0
  4911  07F5  3020               	movlw	low __pbssBANK0
  4912  07F6  0084               	movwf	4
  4913  07F7  3000               	movlw	high __pbssBANK0
  4914  07F8  0085               	movwf	5
  4915  07F9  301D               	movlw	29
  4916  07FA  3181  2168  3187   	fcall	clear_ram0
  4917  07FD                     end_of_initialization:	
  4918                           ;End of C runtime variable initialization code
  4919                           
  4920  07FD                     __end_of__initialization:
  4921  07FD  0020               	movlb	0
  4922  07FE  3185  2DF6         	ljmp	_main	;jump to C main() function
  4923                           
  4924                           	psect	bssBANK0
  4925  0020                     __pbssBANK0:
  4926  0020                     _I2C_Status:
  4927  0020                     	ds	29
  4928                           
  4929                           	psect	dataBANK0
  4930  0050                     __pdataBANK0:
  4931  0050                     _Duty:
  4932  0050                     	ds	2
  4933  0052                     _Flag:
  4934  0052                     	ds	1
  4935  0053                     _Msg2:
  4936  0053                     	ds	12
  4937                           
  4938                           	psect	dataBANK1
  4939  00A0                     __pdataBANK1:
  4940  00A0                     _Msg1:
  4941  00A0                     	ds	17
  4942                           
  4943                           	psect	inittext
  4944  016E                     init_ram:
  4945  016E  00FE               	movwf	btemp
  4946  016F                     initloop:
  4947  016F  0012               	moviw fsr0++
  4948  0170  001E               	movwi fsr1++
  4949  0171  0BFE               	decfsz	btemp,f
  4950  0172  296F               	goto	initloop
  4951  0173  3400               	retlw	0
  4952                           
  4953                           	psect	clrtext
  4954  0168                     clear_ram0:	
  4955                           ;	Called with FSR0 containing the base address, and
  4956                           ;	WREG with the size to clear
  4957                           
  4958  0168  0064               	clrwdt	;clear the watchdog before getting into this loop
  4959  0169                     clrloop0:
  4960  0169  0180               	clrf	0	;clear RAM location pointed to by FSR
  4961  016A  3101               	addfsr 0,1
  4962  016B  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  4963  016C  2969               	goto	clrloop0	;have we reached the end yet?
  4964  016D  3400               	retlw	0	;all done for this memory range, return
  4965                           
  4966                           	psect	cstackCOMMON
  4967  0070                     __pcstackCOMMON:
  4968  0070                     ?_isdigit:
  4969  0070                     ?_I2C_Initialize:	
  4970                           ; 1 bit 
  4971                           
  4972  0070                     ??_I2C_Initialize:	
  4973                           ; 1 bytes @ 0x0
  4974                           
  4975  0070                     ?_PIN_MANAGER_Initialize:	
  4976                           ; 1 bytes @ 0x0
  4977                           
  4978  0070                     ??_PIN_MANAGER_Initialize:	
  4979                           ; 1 bytes @ 0x0
  4980                           
  4981  0070                     ?_OSCILLATOR_Initialize:	
  4982                           ; 1 bytes @ 0x0
  4983                           
  4984  0070                     ??_OSCILLATOR_Initialize:	
  4985                           ; 1 bytes @ 0x0
  4986                           
  4987  0070                     ?_WDT_Initialize:	
  4988                           ; 1 bytes @ 0x0
  4989                           
  4990  0070                     ??_WDT_Initialize:	
  4991                           ; 1 bytes @ 0x0
  4992                           
  4993  0070                     ?_COG3_Initialize:	
  4994                           ; 1 bytes @ 0x0
  4995                           
  4996  0070                     ??_COG3_Initialize:	
  4997                           ; 1 bytes @ 0x0
  4998                           
  4999  0070                     ?_lcd_init:	
  5000                           ; 1 bytes @ 0x0
  5001                           
  5002  0070                     ?_lcd_cmd:	
  5003                           ; 1 bytes @ 0x0
  5004                           
  5005  0070                     ?_I2C_DO_IDLE:	
  5006                           ; 1 bytes @ 0x0
  5007                           
  5008  0070                     ??_I2C_DO_IDLE:	
  5009                           ; 1 bytes @ 0x0
  5010                           
  5011  0070                     ?_I2C_DO_SEND_ADR_READ:	
  5012                           ; 1 bytes @ 0x0
  5013                           
  5014  0070                     ??_I2C_DO_SEND_ADR_READ:	
  5015                           ; 1 bytes @ 0x0
  5016                           
  5017  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  5018                           ; 1 bytes @ 0x0
  5019                           
  5020  0070                     ?_I2C_DO_TX:	
  5021                           ; 1 bytes @ 0x0
  5022                           
  5023  0070                     ?_I2C_DO_RX:	
  5024                           ; 1 bytes @ 0x0
  5025                           
  5026  0070                     ??_I2C_DO_RX:	
  5027                           ; 1 bytes @ 0x0
  5028                           
  5029  0070                     ?_I2C_DO_RCEN:	
  5030                           ; 1 bytes @ 0x0
  5031                           
  5032  0070                     ??_I2C_DO_RCEN:	
  5033                           ; 1 bytes @ 0x0
  5034                           
  5035  0070                     ?_I2C_DO_TX_EMPTY:	
  5036                           ; 1 bytes @ 0x0
  5037                           
  5038  0070                     ??_I2C_DO_TX_EMPTY:	
  5039                           ; 1 bytes @ 0x0
  5040                           
  5041  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  5042                           ; 1 bytes @ 0x0
  5043                           
  5044  0070                     ??_I2C_DO_SEND_RESTART_READ:	
  5045                           ; 1 bytes @ 0x0
  5046                           
  5047  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  5048                           ; 1 bytes @ 0x0
  5049                           
  5050  0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  5051                           ; 1 bytes @ 0x0
  5052                           
  5053  0070                     ?_I2C_DO_SEND_RESTART:	
  5054                           ; 1 bytes @ 0x0
  5055                           
  5056  0070                     ??_I2C_DO_SEND_RESTART:	
  5057                           ; 1 bytes @ 0x0
  5058                           
  5059  0070                     ?_I2C_DO_SEND_STOP:	
  5060                           ; 1 bytes @ 0x0
  5061                           
  5062  0070                     ??_I2C_DO_SEND_STOP:	
  5063                           ; 1 bytes @ 0x0
  5064                           
  5065  0070                     ?_I2C_DO_RX_ACK:	
  5066                           ; 1 bytes @ 0x0
  5067                           
  5068  0070                     ??_I2C_DO_RX_ACK:	
  5069                           ; 1 bytes @ 0x0
  5070                           
  5071  0070                     ?_I2C_DO_RX_NACK_STOP:	
  5072                           ; 1 bytes @ 0x0
  5073                           
  5074  0070                     ??_I2C_DO_RX_NACK_STOP:	
  5075                           ; 1 bytes @ 0x0
  5076                           
  5077  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  5078                           ; 1 bytes @ 0x0
  5079                           
  5080  0070                     ??_I2C_DO_RX_NACK_RESTART:	
  5081                           ; 1 bytes @ 0x0
  5082                           
  5083  0070                     ?_I2C_DO_RESET:	
  5084                           ; 1 bytes @ 0x0
  5085                           
  5086  0070                     ??_I2C_DO_RESET:	
  5087                           ; 1 bytes @ 0x0
  5088                           
  5089  0070                     ?_I2C_DO_ADDRESS_NACK:	
  5090                           ; 1 bytes @ 0x0
  5091                           
  5092  0070                     ??_I2C_DO_ADDRESS_NACK:	
  5093                           ; 1 bytes @ 0x0
  5094                           
  5095  0070                     ?_I2C_MasterClearIrq:	
  5096                           ; 1 bytes @ 0x0
  5097                           
  5098  0070                     ??_I2C_MasterClearIrq:	
  5099                           ; 1 bytes @ 0x0
  5100                           
  5101  0070                     ?_I2C_MasterOpen:	
  5102                           ; 1 bytes @ 0x0
  5103                           
  5104  0070                     ??_I2C_MasterOpen:	
  5105                           ; 1 bytes @ 0x0
  5106                           
  5107  0070                     ?_I2C_MasterDisableIrq:	
  5108                           ; 1 bytes @ 0x0
  5109                           
  5110  0070                     ??_I2C_MasterDisableIrq:	
  5111                           ; 1 bytes @ 0x0
  5112                           
  5113  0070                     ?_I2C_MasterClose:	
  5114                           ; 1 bytes @ 0x0
  5115                           
  5116  0070                     ??_I2C_MasterClose:	
  5117                           ; 1 bytes @ 0x0
  5118                           
  5119  0070                     ?_I2C_MasterStart:	
  5120                           ; 1 bytes @ 0x0
  5121                           
  5122  0070                     ??_I2C_MasterStart:	
  5123                           ; 1 bytes @ 0x0
  5124                           
  5125  0070                     ?_I2C_Poller:	
  5126                           ; 1 bytes @ 0x0
  5127                           
  5128  0070                     ?_I2C_SetCallback:	
  5129                           ; 1 bytes @ 0x0
  5130                           
  5131  0070                     ?_I2C_MasterWaitForEvent:	
  5132                           ; 1 bytes @ 0x0
  5133                           
  5134  0070                     ??_I2C_MasterWaitForEvent:	
  5135                           ; 1 bytes @ 0x0
  5136                           
  5137  0070                     ?_I2C_MasterFsm:	
  5138                           ; 1 bytes @ 0x0
  5139                           
  5140  0070                     ?_I2C_MasterIsNack:	
  5141                           ; 1 bytes @ 0x0
  5142                           
  5143  0070                     ??_I2C_MasterIsNack:	
  5144                           ; 1 bytes @ 0x0
  5145                           
  5146  0070                     ?_I2C_MasterSendTxData:	
  5147                           ; 1 bytes @ 0x0
  5148                           
  5149  0070                     ??_I2C_MasterSendTxData:	
  5150                           ; 1 bytes @ 0x0
  5151                           
  5152  0070                     ?_I2C_MasterGetRxData:	
  5153                           ; 1 bytes @ 0x0
  5154                           
  5155  0070                     ??_I2C_MasterGetRxData:	
  5156                           ; 1 bytes @ 0x0
  5157                           
  5158  0070                     ?_I2C_MasterSendAck:	
  5159                           ; 1 bytes @ 0x0
  5160                           
  5161  0070                     ??_I2C_MasterSendAck:	
  5162                           ; 1 bytes @ 0x0
  5163                           
  5164  0070                     ?_I2C_MasterStartRx:	
  5165                           ; 1 bytes @ 0x0
  5166                           
  5167  0070                     ??_I2C_MasterStartRx:	
  5168                           ; 1 bytes @ 0x0
  5169                           
  5170  0070                     ?_I2C_MasterSetIrq:	
  5171                           ; 1 bytes @ 0x0
  5172                           
  5173  0070                     ??_I2C_MasterSetIrq:	
  5174                           ; 1 bytes @ 0x0
  5175                           
  5176  0070                     ?_I2C_MasterEnableRestart:	
  5177                           ; 1 bytes @ 0x0
  5178                           
  5179  0070                     ??_I2C_MasterEnableRestart:	
  5180                           ; 1 bytes @ 0x0
  5181                           
  5182  0070                     ?_I2C_MasterStop:	
  5183                           ; 1 bytes @ 0x0
  5184                           
  5185  0070                     ??_I2C_MasterStop:	
  5186                           ; 1 bytes @ 0x0
  5187                           
  5188  0070                     ?_I2C_MasterSendNack:	
  5189                           ; 1 bytes @ 0x0
  5190                           
  5191  0070                     ??_I2C_MasterSendNack:	
  5192                           ; 1 bytes @ 0x0
  5193                           
  5194  0070                     ??_isdigit:	
  5195                           ; 1 bytes @ 0x0
  5196                           
  5197  0070                     ?_PWM1_Initialize:	
  5198                           ; 1 bytes @ 0x0
  5199                           
  5200  0070                     ??_PWM1_Initialize:	
  5201                           ; 1 bytes @ 0x0
  5202                           
  5203  0070                     ?_PWM1_LoadDutyValue:	
  5204                           ; 1 bytes @ 0x0
  5205                           
  5206  0070                     ?_TMR2_Initialize:	
  5207                           ; 1 bytes @ 0x0
  5208                           
  5209  0070                     ??_TMR2_Initialize:	
  5210                           ; 1 bytes @ 0x0
  5211                           
  5212  0070                     ?_SYSTEM_Initialize:	
  5213                           ; 1 bytes @ 0x0
  5214                           
  5215  0070                     ??_SYSTEM_Initialize:	
  5216                           ; 1 bytes @ 0x0
  5217                           
  5218  0070                     ?_main:	
  5219                           ; 1 bytes @ 0x0
  5220                           
  5221  0070                     ?_I2C_Open:	
  5222                           ; 1 bytes @ 0x0
  5223                           
  5224  0070                     ??_I2C_Open:	
  5225                           ; 1 bytes @ 0x0
  5226                           
  5227  0070                     ?_I2C_Close:	
  5228                           ; 1 bytes @ 0x0
  5229                           
  5230  0070                     ??_I2C_Close:	
  5231                           ; 1 bytes @ 0x0
  5232                           
  5233  0070                     ?_I2C_MasterOperation:	
  5234                           ; 1 bytes @ 0x0
  5235                           
  5236  0070                     ?_I2C_MasterWrite:	
  5237                           ; 1 bytes @ 0x0
  5238                           
  5239  0070                     ?_I2C_SetBuffer:	
  5240                           ; 1 bytes @ 0x0
  5241                           
  5242  0070                     ?_lcd_data:	
  5243                           ; 1 bytes @ 0x0
  5244                           
  5245  0070                     ?___wmul:	
  5246                           ; 1 bytes @ 0x0
  5247                           
  5248  0070                     ?___lwdiv:	
  5249                           ; 2 bytes @ 0x0
  5250                           
  5251  0070                     I2C_MasterSendTxData@data:	
  5252                           ; 2 bytes @ 0x0
  5253                           
  5254  0070                     _isdigit$1766:	
  5255                           ; 1 bytes @ 0x0
  5256                           
  5257  0070                     PWM1_LoadDutyValue@dutyValue:	
  5258                           ; 1 bytes @ 0x0
  5259                           
  5260  0070                     I2C_SetBuffer@bufferSize:	
  5261                           ; 2 bytes @ 0x0
  5262                           
  5263  0070                     I2C_SetCallback@cb:	
  5264                           ; 2 bytes @ 0x0
  5265                           
  5266  0070                     ___wmul@multiplier:	
  5267                           ; 2 bytes @ 0x0
  5268                           
  5269  0070                     ___lwdiv@divisor:	
  5270                           ; 2 bytes @ 0x0
  5271                           
  5272                           
  5273                           ; 2 bytes @ 0x0
  5274  0070                     	ds	1
  5275  0071                     ??_I2C_DO_SEND_ADR_WRITE:
  5276  0071                     ??_I2C_DO_TX:	
  5277                           ; 1 bytes @ 0x1
  5278                           
  5279  0071                     I2C_Open@address:	
  5280                           ; 1 bytes @ 0x1
  5281                           
  5282  0071                     I2C_Close@returnValue:	
  5283                           ; 1 bytes @ 0x1
  5284                           
  5285  0071                     isdigit@c:	
  5286                           ; 1 bytes @ 0x1
  5287                           
  5288                           
  5289                           ; 1 bytes @ 0x1
  5290  0071                     	ds	1
  5291  0072                     ??_PWM1_LoadDutyValue:
  5292  0072                     ??_I2C_SetBuffer:	
  5293                           ; 1 bytes @ 0x2
  5294                           
  5295  0072                     I2C_Open@returnValue:	
  5296                           ; 1 bytes @ 0x2
  5297                           
  5298  0072                     I2C_SetCallback@ptr:	
  5299                           ; 1 bytes @ 0x2
  5300                           
  5301  0072                     _I2C_DO_TX$1219:	
  5302                           ; 1 bytes @ 0x2
  5303                           
  5304  0072                     ___wmul@multiplicand:	
  5305                           ; 2 bytes @ 0x2
  5306                           
  5307  0072                     ___lwdiv@dividend:	
  5308                           ; 2 bytes @ 0x2
  5309                           
  5310                           
  5311                           ; 2 bytes @ 0x2
  5312  0072                     	ds	1
  5313  0073                     ??_I2C_SetCallback:
  5314  0073                     I2C_SetBuffer@buffer:	
  5315                           ; 1 bytes @ 0x3
  5316                           
  5317                           
  5318                           ; 1 bytes @ 0x3
  5319  0073                     	ds	1
  5320  0074                     ??_I2C_MasterFsm:
  5321  0074                     ??___wmul:	
  5322                           ; 1 bytes @ 0x4
  5323                           
  5324  0074                     ??___lwdiv:	
  5325                           ; 1 bytes @ 0x4
  5326                           
  5327  0074                     I2C_SetCallback@idx:	
  5328                           ; 1 bytes @ 0x4
  5329                           
  5330  0074                     ___wmul@product:	
  5331                           ; 1 bytes @ 0x4
  5332                           
  5333                           
  5334                           ; 2 bytes @ 0x4
  5335  0074                     	ds	1
  5336  0075                     ?_I2C_SetDataCompleteCallback:
  5337  0075                     I2C_SetDataCompleteCallback@cb:	
  5338                           ; 1 bytes @ 0x5
  5339                           
  5340  0075                     ___lwdiv@quotient:	
  5341                           ; 2 bytes @ 0x5
  5342                           
  5343                           
  5344                           ; 2 bytes @ 0x5
  5345  0075                     	ds	2
  5346  0077                     ??_I2C_Poller:
  5347  0077                     ??_I2C_MasterOperation:	
  5348                           ; 1 bytes @ 0x7
  5349                           
  5350  0077                     I2C_SetDataCompleteCallback@ptr:	
  5351                           ; 1 bytes @ 0x7
  5352                           
  5353  0077                     ___lwdiv@counter:	
  5354                           ; 1 bytes @ 0x7
  5355                           
  5356                           
  5357                           ; 1 bytes @ 0x7
  5358  0077                     	ds	1
  5359  0078                     ??_I2C_SetDataCompleteCallback:
  5360  0078                     ?___lwmod:	
  5361                           ; 1 bytes @ 0x8
  5362                           
  5363  0078                     I2C_MasterOperation@read:	
  5364                           ; 2 bytes @ 0x8
  5365                           
  5366  0078                     ___lwmod@divisor:	
  5367                           ; 1 bytes @ 0x8
  5368                           
  5369                           
  5370                           ; 2 bytes @ 0x8
  5371  0078                     	ds	1
  5372  0079                     ?_I2C_CallbackReturnStop:
  5373  0079                     ?_I2C_CallbackReturnReset:	
  5374                           ; 1 bytes @ 0x9
  5375                           
  5376  0079                     ?_rd1RegCompleteHandler:	
  5377                           ; 1 bytes @ 0x9
  5378                           
  5379  0079                     ?_rd2RegCompleteHandler:	
  5380                           ; 1 bytes @ 0x9
  5381                           
  5382  0079                     ?_wr1RegCompleteHandler:	
  5383                           ; 1 bytes @ 0x9
  5384                           
  5385  0079                     ?_wr2RegCompleteHandler:	
  5386                           ; 1 bytes @ 0x9
  5387                           
  5388  0079                     ?_rdBlkRegCompleteHandler:	
  5389                           ; 1 bytes @ 0x9
  5390                           
  5391  0079                     I2C_MasterOperation@returnValue:	
  5392                           ; 1 bytes @ 0x9
  5393                           
  5394  0079                     I2C_CallbackReturnStop@funPtr:	
  5395                           ; 1 bytes @ 0x9
  5396                           
  5397  0079                     I2C_CallbackReturnReset@funPtr:	
  5398                           ; 1 bytes @ 0x9
  5399                           
  5400  0079                     rd1RegCompleteHandler@ptr:	
  5401                           ; 1 bytes @ 0x9
  5402                           
  5403  0079                     rd2RegCompleteHandler@ptr:	
  5404                           ; 1 bytes @ 0x9
  5405                           
  5406  0079                     wr1RegCompleteHandler@ptr:	
  5407                           ; 1 bytes @ 0x9
  5408                           
  5409  0079                     wr2RegCompleteHandler@ptr:	
  5410                           ; 1 bytes @ 0x9
  5411                           
  5412  0079                     rdBlkRegCompleteHandler@ptr:	
  5413                           ; 1 bytes @ 0x9
  5414                           
  5415                           
  5416                           ; 1 bytes @ 0x9
  5417  0079                     	ds	1
  5418  007A                     ??_lcd_cmd:
  5419  007A                     ??_I2C_CallbackReturnStop:	
  5420                           ; 1 bytes @ 0xA
  5421                           
  5422  007A                     ??_I2C_CallbackReturnReset:	
  5423                           ; 1 bytes @ 0xA
  5424                           
  5425  007A                     ??_rd1RegCompleteHandler:	
  5426                           ; 1 bytes @ 0xA
  5427                           
  5428  007A                     ??_rd2RegCompleteHandler:	
  5429                           ; 1 bytes @ 0xA
  5430                           
  5431  007A                     ??_wr1RegCompleteHandler:	
  5432                           ; 1 bytes @ 0xA
  5433                           
  5434  007A                     ??_wr2RegCompleteHandler:	
  5435                           ; 1 bytes @ 0xA
  5436                           
  5437  007A                     ??_rdBlkRegCompleteHandler:	
  5438                           ; 1 bytes @ 0xA
  5439                           
  5440  007A                     ??_I2C_MasterWrite:	
  5441                           ; 1 bytes @ 0xA
  5442                           
  5443  007A                     ??_lcd_data:	
  5444                           ; 1 bytes @ 0xA
  5445                           
  5446  007A                     ___lwmod@dividend:	
  5447                           ; 1 bytes @ 0xA
  5448                           
  5449                           
  5450                           ; 2 bytes @ 0xA
  5451  007A                     	ds	1
  5452  007B                     lcd_data@data:
  5453  007B                     lcd_cmd@tbuf:	
  5454                           ; 1 bytes @ 0xB
  5455                           
  5456                           
  5457                           ; 2 bytes @ 0xB
  5458  007B                     	ds	1
  5459  007C                     ??___lwmod:
  5460  007C                     lcd_data@tbuf:	
  5461                           ; 1 bytes @ 0xC
  5462                           
  5463                           
  5464                           ; 2 bytes @ 0xC
  5465  007C                     	ds	1
  5466  007D                     lcd_cmd@cmd:
  5467  007D                     ___lwmod@counter:	
  5468                           ; 1 bytes @ 0xD
  5469                           
  5470                           
  5471                           ; 1 bytes @ 0xD
  5472  007D                     	ds	1
  5473                           
  5474                           	psect	cstackBANK0
  5475  003D                     __pcstackBANK0:
  5476  003D                     ??_lcd_init:
  5477  003D                     ?_lcd_str:	
  5478                           ; 1 bytes @ 0x0
  5479                           
  5480  003D                     ??_lcd_str:	
  5481                           ; 1 bytes @ 0x0
  5482                           
  5483  003D                     ?_sprintf:	
  5484                           ; 1 bytes @ 0x0
  5485                           
  5486  003D                     sprintf@f:	
  5487                           ; 2 bytes @ 0x0
  5488                           
  5489                           
  5490                           ; 2 bytes @ 0x0
  5491  003D                     	ds	1
  5492  003E                     lcd_str@ptr:
  5493                           
  5494                           ; 1 bytes @ 0x1
  5495  003E                     	ds	3
  5496  0041                     ??_sprintf:
  5497                           
  5498                           ; 1 bytes @ 0x4
  5499  0041                     	ds	4
  5500  0045                     sprintf@ap:
  5501                           
  5502                           ; 1 bytes @ 0x8
  5503  0045                     	ds	1
  5504  0046                     sprintf@prec:
  5505                           
  5506                           ; 1 bytes @ 0x9
  5507  0046                     	ds	1
  5508  0047                     sprintf@flag:
  5509                           
  5510                           ; 1 bytes @ 0xA
  5511  0047                     	ds	1
  5512  0048                     sprintf@val:
  5513                           
  5514                           ; 2 bytes @ 0xB
  5515  0048                     	ds	2
  5516  004A                     sprintf@width:
  5517                           
  5518                           ; 2 bytes @ 0xD
  5519  004A                     	ds	2
  5520  004C                     sprintf@sp:
  5521                           
  5522                           ; 1 bytes @ 0xF
  5523  004C                     	ds	1
  5524  004D                     sprintf@c:
  5525                           
  5526                           ; 1 bytes @ 0x10
  5527  004D                     	ds	1
  5528  004E                     ??_main:
  5529                           
  5530                           ; 1 bytes @ 0x11
  5531  004E                     	ds	2
  5532                           
  5533                           	psect	maintext
  5534  05F6                     __pmaintext:	
  5535 ;;
  5536 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5537 ;;
  5538 ;; *************** function _main *****************
  5539 ;; Defined at:
  5540 ;;		line 56 in file "main.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;		None
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;		None
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  1    wreg      void 
  5547 ;; Registers used:
  5548 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5549 ;; Tracked objects:
  5550 ;;		On entry : B1F/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5556 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5557 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5558 ;;Total ram usage:        2 bytes
  5559 ;; Hardware stack levels required when called:   10
  5560 ;; This function calls:
  5561 ;;		_PWM1_LoadDutyValue
  5562 ;;		_SYSTEM_Initialize
  5563 ;;		_lcd_cmd
  5564 ;;		_lcd_init
  5565 ;;		_lcd_str
  5566 ;;		_sprintf
  5567 ;; This function is called by:
  5568 ;;		Startup code after reset
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           
  5573                           ;psect for function _main
  5574  05F6                     _main:
  5575  05F6                     l3334:	
  5576                           ;incstack = 0
  5577                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5578                           
  5579                           
  5580                           ;main.c: 59: SYSTEM_Initialize();
  5581  05F6  3182  227B  3185   	fcall	_SYSTEM_Initialize
  5582  05F9                     l3336:
  5583  05F9  0022               	movlb	2	; select bank2
  5584  05FA  108D               	bcf	13,1	;volatile
  5585  05FB                     l3338:
  5586                           
  5587                           ;main.c: 80: _delay((unsigned long)((10)*(32000000/4000.0)));
  5588  05FB  3068               	movlw	104
  5589  05FC  0020               	movlb	0	; select bank0
  5590  05FD  00CE               	movwf	??_main
  5591  05FE  30E4               	movlw	228
  5592  05FF                     u1757:
  5593  05FF  0B89               	decfsz	9,f
  5594  0600  2DFF               	goto	u1757
  5595  0601  0BCE               	decfsz	??_main,f
  5596  0602  2DFF               	goto	u1757
  5597  0603  0000               	nop
  5598  0604                     l3340:
  5599  0604  0022               	movlb	2	; select bank2
  5600  0605  148D               	bsf	13,1	;volatile
  5601  0606                     l3342:
  5602                           
  5603                           ;main.c: 82: lcd_init();
  5604  0606  3185  2521  3185   	fcall	_lcd_init
  5605  0609                     l3344:
  5606                           
  5607                           ;main.c: 83: lcd_cmd(0x80);
  5608  0609  3080               	movlw	128
  5609  060A  3184  246D  3185   	fcall	_lcd_cmd
  5610  060D                     l3346:
  5611                           
  5612                           ;main.c: 84: lcd_str(Msg1);
  5613  060D  30A0               	movlw	(low (_Msg1| 0))& (0+255)
  5614  060E  3182  22A9  3185   	fcall	_lcd_str
  5615  0611                     l3348:
  5616                           
  5617                           ;main.c: 86: COG3CON0bits.MD = 2;
  5618  0611  0030               	movlb	16	; select bank16
  5619  0612  0813               	movf	19,w	;volatile
  5620  0613  39F8               	andlw	-8
  5621  0614  3802               	iorlw	2
  5622  0615  0093               	movwf	19	;volatile
  5623  0616                     l3350:
  5624                           
  5625                           ;main.c: 89: sprintf(Msg2, "Duty = %4d", Duty);
  5626  0616  3062               	movlw	low (STR_1| (0+32768))
  5627  0617  0020               	movlb	0	; select bank0
  5628  0618  00BD               	movwf	sprintf@f
  5629  0619  3088               	movlw	high (STR_1| (0+32768))
  5630  061A  00BE               	movwf	sprintf@f+1
  5631  061B  0851               	movf	_Duty+1,w
  5632  061C  00C0               	movwf	?_sprintf+3
  5633  061D  0850               	movf	_Duty,w
  5634  061E  00BF               	movwf	?_sprintf+2
  5635  061F  3053               	movlw	(low (_Msg2| 0))& (0+255)
  5636  0620  3186  2680  3185   	fcall	_sprintf
  5637  0623                     l3352:
  5638                           
  5639                           ;main.c: 90: lcd_cmd(0xC0);
  5640  0623  30C0               	movlw	192
  5641  0624  3184  246D  3185   	fcall	_lcd_cmd
  5642  0627                     l3354:
  5643                           
  5644                           ;main.c: 91: lcd_str(Msg2);
  5645  0627  3053               	movlw	(low (_Msg2| 0))& (0+255)
  5646  0628  3182  22A9  3185   	fcall	_lcd_str
  5647  062B                     l3356:
  5648                           
  5649                           ;main.c: 92: _delay((unsigned long)((50)*(32000000/4000.0)));
  5650  062B  3003               	movlw	3
  5651  062C  0020               	movlb	0	; select bank0
  5652  062D  00CF               	movwf	??_main+1
  5653  062E  3008               	movlw	8
  5654  062F  00CE               	movwf	??_main
  5655  0630  3077               	movlw	119
  5656  0631                     u1767:
  5657  0631  0B89               	decfsz	9,f
  5658  0632  2E31               	goto	u1767
  5659  0633  0BCE               	decfsz	??_main,f
  5660  0634  2E31               	goto	u1767
  5661  0635  0BCF               	decfsz	??_main+1,f
  5662  0636  2E31               	goto	u1767
  5663  0637                     l3358:
  5664                           
  5665                           ;main.c: 94: if (PORTBbits.RB5 == 0) {
  5666  0637  0020               	movlb	0	; select bank0
  5667  0638  1A8D               	btfsc	13,5	;volatile
  5668  0639  2E3B               	goto	u1711
  5669  063A  2E3C               	goto	u1710
  5670  063B                     u1711:
  5671  063B  2E16               	goto	l3350
  5672  063C                     u1710:
  5673  063C                     l3360:
  5674                           
  5675                           ;main.c: 95: if (Flag == 1) {
  5676  063C  0352               	decf	_Flag,w
  5677  063D  1D03               	btfss	3,2
  5678  063E  2E40               	goto	u1721
  5679  063F  2E41               	goto	u1720
  5680  0640                     u1721:
  5681  0640  2E65               	goto	l3372
  5682  0641                     u1720:
  5683  0641                     l3362:
  5684                           
  5685                           ;main.c: 96: if (Duty < 1024) {
  5686  0641  3004               	movlw	4
  5687  0642  0251               	subwf	_Duty+1,w
  5688  0643  3000               	movlw	0
  5689  0644  1903               	skipnz
  5690  0645  0250               	subwf	_Duty,w
  5691  0646  1803               	skipnc
  5692  0647  2E49               	goto	u1731
  5693  0648  2E4A               	goto	u1730
  5694  0649                     u1731:
  5695  0649  2E63               	goto	l3370
  5696  064A                     u1730:
  5697  064A                     l288:	
  5698                           ;main.c: 97: do { LATBbits.LATB4 = 1; } while(0);
  5699                           
  5700  064A  0022               	movlb	2	; select bank2
  5701  064B  160D               	bsf	13,4	;volatile
  5702  064C                     l3364:
  5703                           
  5704                           ;main.c: 98: PWM1_LoadDutyValue(Duty++);
  5705  064C  0020               	movlb	0	; select bank0
  5706  064D  0851               	movf	_Duty+1,w
  5707  064E  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  5708  064F  0850               	movf	_Duty,w
  5709  0650  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  5710  0651  3182  2268  3185   	fcall	_PWM1_LoadDutyValue
  5711  0654                     l3366:
  5712  0654  3001               	movlw	1
  5713  0655  0020               	movlb	0	; select bank0
  5714  0656  07D0               	addwf	_Duty,f
  5715  0657  3000               	movlw	0
  5716  0658  3DD1               	addwfc	_Duty+1,f
  5717  0659                     l3368:
  5718                           
  5719                           ;main.c: 99: _delay((unsigned long)((10)*(32000000/4000.0)));
  5720  0659  3068               	movlw	104
  5721  065A  0020               	movlb	0	; select bank0
  5722  065B  00CE               	movwf	??_main
  5723  065C  30E4               	movlw	228
  5724  065D                     u1777:
  5725  065D  0B89               	decfsz	9,f
  5726  065E  2E5D               	goto	u1777
  5727  065F  0BCE               	decfsz	??_main,f
  5728  0660  2E5D               	goto	u1777
  5729  0661  0000               	nop
  5730                           
  5731                           ;main.c: 100: } else {
  5732  0662  2E16               	goto	l3350
  5733  0663                     l3370:
  5734                           
  5735                           ;main.c: 101: Flag = 0;
  5736  0663  01D2               	clrf	_Flag
  5737  0664  2E16               	goto	l3350
  5738  0665                     l3372:
  5739                           
  5740                           ;main.c: 105: if (Duty > 0) {
  5741  0665  0850               	movf	_Duty,w
  5742  0666  0451               	iorwf	_Duty+1,w
  5743  0667  1903               	btfsc	3,2
  5744  0668  2E6A               	goto	u1741
  5745  0669  2E6B               	goto	u1740
  5746  066A                     u1741:
  5747  066A  2E7B               	goto	l292
  5748  066B                     u1740:
  5749  066B                     l293:	
  5750                           ;main.c: 106: do { LATBbits.LATB4 = 0; } while(0);
  5751                           
  5752  066B  0022               	movlb	2	; select bank2
  5753  066C  120D               	bcf	13,4	;volatile
  5754  066D                     l3374:
  5755                           
  5756                           ;main.c: 107: PWM1_LoadDutyValue(Duty--);
  5757  066D  0020               	movlb	0	; select bank0
  5758  066E  0851               	movf	_Duty+1,w
  5759  066F  00F1               	movwf	PWM1_LoadDutyValue@dutyValue+1
  5760  0670  0850               	movf	_Duty,w
  5761  0671  00F0               	movwf	PWM1_LoadDutyValue@dutyValue
  5762  0672  3182  2268  3185   	fcall	_PWM1_LoadDutyValue
  5763  0675                     l3376:
  5764  0675  3001               	movlw	1
  5765  0676  0020               	movlb	0	; select bank0
  5766  0677  02D0               	subwf	_Duty,f
  5767  0678  3000               	movlw	0
  5768  0679  3BD1               	subwfb	_Duty+1,f
  5769  067A  2E59               	goto	l3368
  5770  067B                     l292:
  5771                           
  5772                           ;main.c: 110: Flag = 1;
  5773  067B  01D2               	clrf	_Flag
  5774  067C  0AD2               	incf	_Flag,f
  5775  067D  2E16               	goto	l3350
  5776  067E  3180  2802         	ljmp	start
  5777  0680                     __end_of_main:
  5778                           
  5779                           	psect	text1
  5780  0680                     __ptext1:	
  5781 ;; *************** function _sprintf *****************
  5782 ;; Defined at:
  5783 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;  sp              1    wreg     PTR unsigned char 
  5786 ;;		 -> Msg2(12), 
  5787 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  5788 ;;		 -> STR_1(11), 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  sp              1   15[BANK0 ] PTR unsigned char 
  5791 ;;		 -> Msg2(12), 
  5792 ;;  tmpval          4    0        struct .
  5793 ;;  width           2   13[BANK0 ] int 
  5794 ;;  val             2   11[BANK0 ] unsigned int 
  5795 ;;  cp              2    0        PTR const unsigned char 
  5796 ;;  len             2    0        unsigned int 
  5797 ;;  c               1   16[BANK0 ] unsigned char 
  5798 ;;  flag            1   10[BANK0 ] unsigned char 
  5799 ;;  prec            1    9[BANK0 ] char 
  5800 ;;  ap              1    8[BANK0 ] PTR void [1]
  5801 ;;		 -> ?_sprintf(2), 
  5802 ;; Return value:  Size  Location     Type
  5803 ;;                  2    0[BANK0 ] int 
  5804 ;; Registers used:
  5805 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5806 ;; Tracked objects:
  5807 ;;		On entry : 0/0
  5808 ;;		On exit  : 0/0
  5809 ;;		Unchanged: 0/0
  5810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  5811 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5812 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5813 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5814 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  5815 ;;Total ram usage:       17 bytes
  5816 ;; Hardware stack levels used:    1
  5817 ;; Hardware stack levels required when called:    1
  5818 ;; This function calls:
  5819 ;;		___lwdiv
  5820 ;;		___lwmod
  5821 ;;		___wmul
  5822 ;;		_isdigit
  5823 ;; This function is called by:
  5824 ;;		_main
  5825 ;; This function uses a non-reentrant model
  5826 ;;
  5827                           
  5828                           
  5829                           ;psect for function _sprintf
  5830  0680                     _sprintf:
  5831                           
  5832                           ;incstack = 0
  5833                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5834                           ;sprintf@sp stored from wreg
  5835  0680  0020               	movlb	0	; select bank0
  5836  0681  00CC               	movwf	sprintf@sp
  5837  0682                     l3246:
  5838                           
  5839                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  5840  0682  303F               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  5841  0683  00C1               	movwf	??_sprintf
  5842  0684  0841               	movf	??_sprintf,w
  5843  0685  00C5               	movwf	sprintf@ap
  5844                           
  5845                           ;doprnt.c: 553: while((c = *f++)) {
  5846  0686  2FC4               	goto	l3328
  5847  0687                     l3248:
  5848                           
  5849                           ;doprnt.c: 555: if(c != '%')
  5850  0687  3025               	movlw	37
  5851  0688  064D               	xorwf	sprintf@c,w
  5852  0689  1903               	btfsc	3,2
  5853  068A  2E8C               	goto	u1571
  5854  068B  2E8D               	goto	u1570
  5855  068C                     u1571:
  5856  068C  2E99               	goto	l3254
  5857  068D                     u1570:
  5858  068D                     l3250:
  5859                           
  5860                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  5861  068D  084D               	movf	sprintf@c,w
  5862  068E  00C1               	movwf	??_sprintf
  5863  068F  084C               	movf	sprintf@sp,w
  5864  0690  0086               	movwf	6
  5865  0691  0187               	clrf	7
  5866  0692  0841               	movf	??_sprintf,w
  5867  0693  0081               	movwf	1
  5868  0694                     l3252:
  5869  0694  3001               	movlw	1
  5870  0695  00C1               	movwf	??_sprintf
  5871  0696  0841               	movf	??_sprintf,w
  5872  0697  07CC               	addwf	sprintf@sp,f
  5873                           
  5874                           ;doprnt.c: 559: continue;
  5875  0698  2FC4               	goto	l3328
  5876  0699                     l3254:
  5877                           
  5878                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  5879  0699  01CA               	clrf	sprintf@width
  5880  069A  01CB               	clrf	sprintf@width+1
  5881                           
  5882                           ;doprnt.c: 565: flag = 0;
  5883  069B  01C7               	clrf	sprintf@flag
  5884  069C                     l3256:
  5885                           
  5886                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  5887  069C  083D               	movf	sprintf@f,w
  5888  069D  0084               	movwf	4
  5889  069E  083E               	movf	sprintf@f+1,w
  5890  069F  0085               	movwf	5
  5891  06A0  0800               	movf	0,w	;code access
  5892  06A1  3182  2256  3186   	fcall	_isdigit
  5893  06A4  1C03               	btfss	3,0
  5894  06A5  2EA7               	goto	u1581
  5895  06A6  2EA8               	goto	u1580
  5896  06A7                     u1581:
  5897  06A7  2EDB               	goto	l3270
  5898  06A8                     u1580:
  5899  06A8                     l3258:
  5900                           
  5901                           ;doprnt.c: 615: width = 0;
  5902  06A8  0020               	movlb	0	; select bank0
  5903  06A9  01CA               	clrf	sprintf@width
  5904  06AA  01CB               	clrf	sprintf@width+1
  5905  06AB                     l3260:
  5906                           
  5907                           ;doprnt.c: 617: width *= 10;
  5908  06AB  300A               	movlw	10
  5909  06AC  00F0               	movwf	___wmul@multiplier
  5910  06AD  3000               	movlw	0
  5911  06AE  00F1               	movwf	___wmul@multiplier+1
  5912  06AF  0020               	movlb	0	; select bank0
  5913  06B0  084B               	movf	sprintf@width+1,w
  5914  06B1  00F3               	movwf	___wmul@multiplicand+1
  5915  06B2  084A               	movf	sprintf@width,w
  5916  06B3  00F2               	movwf	___wmul@multiplicand
  5917  06B4  3182  22FB  3186   	fcall	___wmul
  5918  06B7  0871               	movf	?___wmul+1,w
  5919  06B8  0020               	movlb	0	; select bank0
  5920  06B9  00CB               	movwf	sprintf@width+1
  5921  06BA  0870               	movf	?___wmul,w
  5922  06BB  00CA               	movwf	sprintf@width
  5923  06BC                     l3262:
  5924                           
  5925                           ;doprnt.c: 618: width += *f++ - '0';
  5926  06BC  083D               	movf	sprintf@f,w
  5927  06BD  0084               	movwf	4
  5928  06BE  083E               	movf	sprintf@f+1,w
  5929  06BF  0085               	movwf	5
  5930  06C0  0800               	movf	0,w	;code access
  5931  06C1  3ED0               	addlw	208
  5932  06C2  00C1               	movwf	??_sprintf
  5933  06C3  30FF               	movlw	255
  5934  06C4  1803               	skipnc
  5935  06C5  3000               	movlw	0
  5936  06C6  00C2               	movwf	??_sprintf+1
  5937  06C7  0841               	movf	??_sprintf,w
  5938  06C8  07CA               	addwf	sprintf@width,f
  5939  06C9  0842               	movf	??_sprintf+1,w
  5940  06CA  3DCB               	addwfc	sprintf@width+1,f
  5941  06CB                     l3264:
  5942  06CB  3001               	movlw	1
  5943  06CC  07BD               	addwf	sprintf@f,f
  5944  06CD  3000               	movlw	0
  5945  06CE  3DBE               	addwfc	sprintf@f+1,f
  5946  06CF                     l3266:
  5947                           
  5948                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  5949  06CF  083D               	movf	sprintf@f,w
  5950  06D0  0084               	movwf	4
  5951  06D1  083E               	movf	sprintf@f+1,w
  5952  06D2  0085               	movwf	5
  5953  06D3  0800               	movf	0,w	;code access
  5954  06D4  3182  2256  3186   	fcall	_isdigit
  5955  06D7  1803               	btfsc	3,0
  5956  06D8  2EDA               	goto	u1591
  5957  06D9  2EDB               	goto	u1590
  5958  06DA                     u1591:
  5959  06DA  2EAB               	goto	l3260
  5960  06DB                     u1590:
  5961  06DB                     l3270:
  5962  06DB  0020               	movlb	0	; select bank0
  5963  06DC  083E               	movf	sprintf@f+1,w
  5964  06DD  00C2               	movwf	??_sprintf+1
  5965  06DE  083D               	movf	sprintf@f,w
  5966  06DF  00C1               	movwf	??_sprintf
  5967  06E0  0ABD               	incf	sprintf@f,f
  5968  06E1  1903               	skipnz
  5969  06E2  0ABE               	incf	sprintf@f+1,f
  5970  06E3  0841               	movf	??_sprintf,w
  5971  06E4  0084               	movwf	4
  5972  06E5  0842               	movf	??_sprintf+1,w
  5973  06E6  0085               	movwf	5
  5974  06E7  0800               	movf	0,w	;code access
  5975  06E8  00CD               	movwf	sprintf@c
  5976                           
  5977                           ; Switch size 1, requested type "simple"
  5978                           ; Number of cases is 3, Range of values is 0 to 105
  5979                           ; switch strategies available:
  5980                           ; Name         Instructions Cycles
  5981                           ; simple_byte           10     6 (average)
  5982                           ; direct_byte          218     6 (fixed)
  5983                           ; jumptable            260     6 (fixed)
  5984                           ;	Chosen strategy is simple_byte
  5985  06E9  3A00               	xorlw	0	; case 0
  5986  06EA  1903               	skipnz
  5987  06EB  2FD8               	goto	l3330
  5988  06EC  3A64               	xorlw	100	; case 100
  5989  06ED  1903               	skipnz
  5990  06EE  2EF3               	goto	l3272
  5991  06EF  3A0D               	xorlw	13	; case 105
  5992  06F0  1903               	skipnz
  5993  06F1  2EF3               	goto	l3272
  5994  06F2  2FC4               	goto	l3328
  5995  06F3                     l3272:
  5996                           
  5997                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  5998  06F3  0845               	movf	sprintf@ap,w
  5999  06F4  0086               	movwf	6
  6000  06F5  0187               	clrf	7
  6001  06F6  3F40               	moviw [0]fsr1
  6002  06F7  00C8               	movwf	sprintf@val
  6003  06F8  3F41               	moviw [1]fsr1
  6004  06F9  00C9               	movwf	sprintf@val+1
  6005  06FA                     l3274:
  6006  06FA  3002               	movlw	2
  6007  06FB  00C1               	movwf	??_sprintf
  6008  06FC  0841               	movf	??_sprintf,w
  6009  06FD  07C5               	addwf	sprintf@ap,f
  6010  06FE                     l3276:
  6011                           
  6012                           ;doprnt.c: 1287: if((int)val < 0) {
  6013  06FE  1FC9               	btfss	sprintf@val+1,7
  6014  06FF  2F01               	goto	u1601
  6015  0700  2F02               	goto	u1600
  6016  0701                     u1601:
  6017  0701  2F0B               	goto	l3282
  6018  0702                     u1600:
  6019  0702                     l3278:
  6020                           
  6021                           ;doprnt.c: 1288: flag |= 0x03;
  6022  0702  3003               	movlw	3
  6023  0703  00C1               	movwf	??_sprintf
  6024  0704  0841               	movf	??_sprintf,w
  6025  0705  04C7               	iorwf	sprintf@flag,f
  6026  0706                     l3280:
  6027                           
  6028                           ;doprnt.c: 1289: val = -val;
  6029  0706  09C8               	comf	sprintf@val,f
  6030  0707  09C9               	comf	sprintf@val+1,f
  6031  0708  0AC8               	incf	sprintf@val,f
  6032  0709  1903               	skipnz
  6033  070A  0AC9               	incf	sprintf@val+1,f
  6034  070B                     l3282:
  6035                           
  6036                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  6037  070B  01CD               	clrf	sprintf@c
  6038  070C  0ACD               	incf	sprintf@c,f
  6039  070D                     l3288:
  6040                           
  6041                           ;doprnt.c: 1332: if(val < dpowers[c])
  6042  070D  084D               	movf	sprintf@c,w
  6043  070E  00C1               	movwf	??_sprintf
  6044  070F  01C2               	clrf	??_sprintf+1
  6045  0710  35C1               	lslf	??_sprintf,f
  6046  0711  0DC2               	rlf	??_sprintf+1,f
  6047  0712  3058               	movlw	low (_dpowers| (0+32768))
  6048  0713  0741               	addwf	??_sprintf,w
  6049  0714  0084               	movwf	4
  6050  0715  3088               	movlw	high (_dpowers| (0+32768))
  6051  0716  3D42               	addwfc	??_sprintf+1,w
  6052  0717  0085               	movwf	5
  6053  0718  3F00               	moviw [0]fsr0
  6054  0719  00C3               	movwf	??_sprintf+2
  6055  071A  3F01               	moviw [1]fsr0
  6056  071B  00C4               	movwf	??_sprintf+3
  6057  071C  0844               	movf	??_sprintf+3,w
  6058  071D  0249               	subwf	sprintf@val+1,w
  6059  071E  1D03               	skipz
  6060  071F  2F22               	goto	u1615
  6061  0720  0843               	movf	??_sprintf+2,w
  6062  0721  0248               	subwf	sprintf@val,w
  6063  0722                     u1615:
  6064  0722  1803               	skipnc
  6065  0723  2F25               	goto	u1611
  6066  0724  2F26               	goto	u1610
  6067  0725                     u1611:
  6068  0725  2F27               	goto	l3292
  6069  0726                     u1610:
  6070  0726  2F31               	goto	l3294
  6071  0727                     l3292:
  6072  0727  3001               	movlw	1
  6073  0728  00C1               	movwf	??_sprintf
  6074  0729  0841               	movf	??_sprintf,w
  6075  072A  07CD               	addwf	sprintf@c,f
  6076  072B  3005               	movlw	5
  6077  072C  064D               	xorwf	sprintf@c,w
  6078  072D  1D03               	btfss	3,2
  6079  072E  2F30               	goto	u1621
  6080  072F  2F31               	goto	u1620
  6081  0730                     u1621:
  6082  0730  2F0D               	goto	l3288
  6083  0731                     u1620:
  6084  0731                     l3294:
  6085                           
  6086                           ;doprnt.c: 1371: if(width && flag & 0x03)
  6087  0731  084A               	movf	sprintf@width,w
  6088  0732  044B               	iorwf	sprintf@width+1,w
  6089  0733  1903               	btfsc	3,2
  6090  0734  2F36               	goto	u1631
  6091  0735  2F37               	goto	u1630
  6092  0736                     u1631:
  6093  0736  2F41               	goto	l880
  6094  0737                     u1630:
  6095  0737                     l3296:
  6096  0737  0847               	movf	sprintf@flag,w
  6097  0738  3903               	andlw	3
  6098  0739  1903               	btfsc	3,2
  6099  073A  2F3C               	goto	u1641
  6100  073B  2F3D               	goto	u1640
  6101  073C                     u1641:
  6102  073C  2F41               	goto	l880
  6103  073D                     u1640:
  6104  073D                     l3298:
  6105                           
  6106                           ;doprnt.c: 1372: width--;
  6107  073D  30FF               	movlw	255
  6108  073E  07CA               	addwf	sprintf@width,f
  6109  073F  30FF               	movlw	255
  6110  0740  3DCB               	addwfc	sprintf@width+1,f
  6111  0741                     l880:
  6112                           
  6113                           ;doprnt.c: 1407: if(width > c)
  6114  0741  084B               	movf	sprintf@width+1,w
  6115  0742  3A80               	xorlw	128
  6116  0743  3C80               	sublw	128
  6117  0744  1D03               	skipz
  6118  0745  2F48               	goto	u1655
  6119  0746  084A               	movf	sprintf@width,w
  6120  0747  024D               	subwf	sprintf@c,w
  6121  0748                     u1655:
  6122  0748  1803               	skipnc
  6123  0749  2F4B               	goto	u1651
  6124  074A  2F4C               	goto	u1650
  6125  074B                     u1651:
  6126  074B  2F55               	goto	l3302
  6127  074C                     u1650:
  6128  074C                     l3300:
  6129                           
  6130                           ;doprnt.c: 1408: width -= c;
  6131  074C  0020               	movlb	0	; select bank0
  6132  074D  084D               	movf	sprintf@c,w
  6133  074E  00C1               	movwf	??_sprintf
  6134  074F  01C2               	clrf	??_sprintf+1
  6135  0750  0841               	movf	??_sprintf,w
  6136  0751  02CA               	subwf	sprintf@width,f
  6137  0752  0842               	movf	??_sprintf+1,w
  6138  0753  3BCB               	subwfb	sprintf@width+1,f
  6139  0754  2F58               	goto	l3304
  6140  0755                     l3302:
  6141                           
  6142                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  6143  0755  0020               	movlb	0	; select bank0
  6144  0756  01CA               	clrf	sprintf@width
  6145  0757  01CB               	clrf	sprintf@width+1
  6146  0758                     l3304:
  6147                           
  6148                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  6149  0758  084A               	movf	sprintf@width,w
  6150  0759  044B               	iorwf	sprintf@width+1,w
  6151  075A  1903               	btfsc	3,2
  6152  075B  2F5D               	goto	u1661
  6153  075C  2F5E               	goto	u1660
  6154  075D                     u1661:
  6155  075D  2F73               	goto	l3312
  6156  075E                     u1660:
  6157  075E                     l3306:
  6158                           
  6159                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  6160  075E  3020               	movlw	32
  6161  075F  00C1               	movwf	??_sprintf
  6162  0760  084C               	movf	sprintf@sp,w
  6163  0761  0086               	movwf	6
  6164  0762  0187               	clrf	7
  6165  0763  0841               	movf	??_sprintf,w
  6166  0764  0081               	movwf	1
  6167  0765                     l3308:
  6168  0765  3001               	movlw	1
  6169  0766  00C1               	movwf	??_sprintf
  6170  0767  0841               	movf	??_sprintf,w
  6171  0768  07CC               	addwf	sprintf@sp,f
  6172  0769                     l3310:
  6173                           
  6174                           ;doprnt.c: 1457: while(--width);
  6175  0769  30FF               	movlw	255
  6176  076A  07CA               	addwf	sprintf@width,f
  6177  076B  30FF               	movlw	255
  6178  076C  3DCB               	addwfc	sprintf@width+1,f
  6179  076D  084A               	movf	sprintf@width,w
  6180  076E  044B               	iorwf	sprintf@width+1,w
  6181  076F  1D03               	btfss	3,2
  6182  0770  2F72               	goto	u1671
  6183  0771  2F73               	goto	u1670
  6184  0772                     u1671:
  6185  0772  2F5E               	goto	l3306
  6186  0773                     u1670:
  6187  0773                     l3312:
  6188                           
  6189                           ;doprnt.c: 1464: if(flag & 0x03)
  6190  0773  0847               	movf	sprintf@flag,w
  6191  0774  3903               	andlw	3
  6192  0775  1903               	btfsc	3,2
  6193  0776  2F78               	goto	u1681
  6194  0777  2F79               	goto	u1680
  6195  0778                     u1681:
  6196  0778  2F84               	goto	l3318
  6197  0779                     u1680:
  6198  0779                     l3314:
  6199                           
  6200                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  6201  0779  302D               	movlw	45
  6202  077A  00C1               	movwf	??_sprintf
  6203  077B  084C               	movf	sprintf@sp,w
  6204  077C  0086               	movwf	6
  6205  077D  0187               	clrf	7
  6206  077E  0841               	movf	??_sprintf,w
  6207  077F  0081               	movwf	1
  6208  0780                     l3316:
  6209  0780  3001               	movlw	1
  6210  0781  00C1               	movwf	??_sprintf
  6211  0782  0841               	movf	??_sprintf,w
  6212  0783  07CC               	addwf	sprintf@sp,f
  6213  0784                     l3318:
  6214                           
  6215                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  6216  0784  084D               	movf	sprintf@c,w
  6217  0785  00C1               	movwf	??_sprintf
  6218  0786  0841               	movf	??_sprintf,w
  6219  0787  00C6               	movwf	sprintf@prec
  6220                           
  6221                           ;doprnt.c: 1500: while(prec--) {
  6222  0788  2FBB               	goto	l3326
  6223  0789                     l3320:
  6224                           
  6225                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  6226  0789  300A               	movlw	10
  6227  078A  00F8               	movwf	___lwmod@divisor
  6228  078B  3000               	movlw	0
  6229  078C  00F9               	movwf	___lwmod@divisor+1
  6230  078D  0846               	movf	sprintf@prec,w
  6231  078E  00C1               	movwf	??_sprintf
  6232  078F  01C2               	clrf	??_sprintf+1
  6233  0790  35C1               	lslf	??_sprintf,f
  6234  0791  0DC2               	rlf	??_sprintf+1,f
  6235  0792  3058               	movlw	low (_dpowers| (0+32768))
  6236  0793  0741               	addwf	??_sprintf,w
  6237  0794  0084               	movwf	4
  6238  0795  3088               	movlw	high (_dpowers| (0+32768))
  6239  0796  3D42               	addwfc	??_sprintf+1,w
  6240  0797  0085               	movwf	5
  6241  0798  3F00               	moviw [0]fsr0
  6242  0799  00F0               	movwf	___lwdiv@divisor
  6243  079A  3F01               	moviw [1]fsr0
  6244  079B  00F1               	movwf	___lwdiv@divisor+1
  6245  079C  0849               	movf	sprintf@val+1,w
  6246  079D  00F3               	movwf	___lwdiv@dividend+1
  6247  079E  0848               	movf	sprintf@val,w
  6248  079F  00F2               	movwf	___lwdiv@dividend
  6249  07A0  3184  24A7  3186   	fcall	___lwdiv
  6250  07A3  0871               	movf	?___lwdiv+1,w
  6251  07A4  00FB               	movwf	___lwmod@dividend+1
  6252  07A5  0870               	movf	?___lwdiv,w
  6253  07A6  00FA               	movwf	___lwmod@dividend
  6254  07A7  3183  23FF  3186   	fcall	___lwmod
  6255  07AA  0878               	movf	?___lwmod,w
  6256  07AB  3E30               	addlw	48
  6257  07AC  0020               	movlb	0	; select bank0
  6258  07AD  00C3               	movwf	??_sprintf+2
  6259  07AE  0843               	movf	??_sprintf+2,w
  6260  07AF  00CD               	movwf	sprintf@c
  6261  07B0                     l3322:
  6262                           
  6263                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  6264  07B0  084D               	movf	sprintf@c,w
  6265  07B1  00C1               	movwf	??_sprintf
  6266  07B2  084C               	movf	sprintf@sp,w
  6267  07B3  0086               	movwf	6
  6268  07B4  0187               	clrf	7
  6269  07B5  0841               	movf	??_sprintf,w
  6270  07B6  0081               	movwf	1
  6271  07B7                     l3324:
  6272  07B7  3001               	movlw	1
  6273  07B8  00C1               	movwf	??_sprintf
  6274  07B9  0841               	movf	??_sprintf,w
  6275  07BA  07CC               	addwf	sprintf@sp,f
  6276  07BB                     l3326:
  6277  07BB  30FF               	movlw	255
  6278  07BC  00C1               	movwf	??_sprintf
  6279  07BD  0841               	movf	??_sprintf,w
  6280  07BE  07C6               	addwf	sprintf@prec,f
  6281  07BF  0A46               	incf	sprintf@prec,w
  6282  07C0  1D03               	btfss	3,2
  6283  07C1  2FC3               	goto	u1691
  6284  07C2  2FC4               	goto	u1690
  6285  07C3                     u1691:
  6286  07C3  2F89               	goto	l3320
  6287  07C4                     u1690:
  6288  07C4                     l3328:
  6289  07C4  083E               	movf	sprintf@f+1,w
  6290  07C5  00C2               	movwf	??_sprintf+1
  6291  07C6  083D               	movf	sprintf@f,w
  6292  07C7  00C1               	movwf	??_sprintf
  6293  07C8  0ABD               	incf	sprintf@f,f
  6294  07C9  1903               	skipnz
  6295  07CA  0ABE               	incf	sprintf@f+1,f
  6296  07CB  0841               	movf	??_sprintf,w
  6297  07CC  0084               	movwf	4
  6298  07CD  0842               	movf	??_sprintf+1,w
  6299  07CE  0085               	movwf	5
  6300  07CF  0800               	movf	0,w	;code access
  6301  07D0  00C3               	movwf	??_sprintf+2
  6302  07D1  0843               	movf	??_sprintf+2,w
  6303  07D2  00CD               	movwf	sprintf@c
  6304  07D3  084D               	movf	sprintf@c,w
  6305  07D4  1D03               	btfss	3,2
  6306  07D5  2FD7               	goto	u1701
  6307  07D6  2FD8               	goto	u1700
  6308  07D7                     u1701:
  6309  07D7  2E87               	goto	l3248
  6310  07D8                     u1700:
  6311  07D8                     l3330:
  6312                           
  6313                           ;doprnt.c: 1564: *sp = 0;
  6314  07D8  084C               	movf	sprintf@sp,w
  6315  07D9  0086               	movwf	6
  6316  07DA  0187               	clrf	7
  6317  07DB  0181               	clrf	1
  6318  07DC                     l891:
  6319  07DC  0008               	return
  6320  07DD                     __end_of_sprintf:
  6321                           
  6322                           	psect	text2
  6323  0256                     __ptext2:	
  6324 ;; *************** function _isdigit *****************
  6325 ;; Defined at:
  6326 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\isdigit.c"
  6327 ;; Parameters:    Size  Location     Type
  6328 ;;  c               1    wreg     unsigned char 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;  c               1    1[COMMON] unsigned char 
  6331 ;; Return value:  Size  Location     Type
  6332 ;;		None               void
  6333 ;; Registers used:
  6334 ;;		wreg, status,2, status,0
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6341 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6343 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6344 ;;Total ram usage:        2 bytes
  6345 ;; Hardware stack levels used:    1
  6346 ;; This function calls:
  6347 ;;		Nothing
  6348 ;; This function is called by:
  6349 ;;		_sprintf
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           
  6354                           ;psect for function _isdigit
  6355  0256                     _isdigit:
  6356                           
  6357                           ;incstack = 0
  6358                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  6359                           ;isdigit@c stored from wreg
  6360  0256  00F1               	movwf	isdigit@c
  6361  0257                     l2846:
  6362  0257  01F0               	clrf	_isdigit$1766
  6363  0258                     l2848:
  6364  0258  303A               	movlw	58
  6365  0259  0271               	subwf	isdigit@c,w
  6366  025A  1803               	skipnc
  6367  025B  2A5D               	goto	u1001
  6368  025C  2A5E               	goto	u1000
  6369  025D                     u1001:
  6370  025D  2A66               	goto	l2854
  6371  025E                     u1000:
  6372  025E                     l2850:
  6373  025E  3030               	movlw	48
  6374  025F  0271               	subwf	isdigit@c,w
  6375  0260  1C03               	skipc
  6376  0261  2A63               	goto	u1011
  6377  0262  2A64               	goto	u1010
  6378  0263                     u1011:
  6379  0263  2A66               	goto	l2854
  6380  0264                     u1010:
  6381  0264                     l2852:
  6382  0264  01F0               	clrf	_isdigit$1766
  6383  0265  0AF0               	incf	_isdigit$1766,f
  6384  0266                     l2854:
  6385  0266  0C70               	rrf	_isdigit$1766,w
  6386  0267                     l1348:
  6387  0267  0008               	return
  6388  0268                     __end_of_isdigit:
  6389                           
  6390                           	psect	text3
  6391  02FB                     __ptext3:	
  6392 ;; *************** function ___wmul *****************
  6393 ;; Defined at:
  6394 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;  multiplier      2    0[COMMON] unsigned int 
  6397 ;;  multiplicand    2    2[COMMON] unsigned int 
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;  product         2    4[COMMON] unsigned int 
  6400 ;; Return value:  Size  Location     Type
  6401 ;;                  2    0[COMMON] unsigned int 
  6402 ;; Registers used:
  6403 ;;		wreg, status,2, status,0
  6404 ;; Tracked objects:
  6405 ;;		On entry : 0/0
  6406 ;;		On exit  : 0/0
  6407 ;;		Unchanged: 0/0
  6408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6409 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6410 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6412 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6413 ;;Total ram usage:        6 bytes
  6414 ;; Hardware stack levels used:    1
  6415 ;; This function calls:
  6416 ;;		Nothing
  6417 ;; This function is called by:
  6418 ;;		_sprintf
  6419 ;; This function uses a non-reentrant model
  6420 ;;
  6421                           
  6422                           
  6423                           ;psect for function ___wmul
  6424  02FB                     ___wmul:
  6425  02FB                     l2858:	
  6426                           ;incstack = 0
  6427                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6428                           
  6429  02FB  01F4               	clrf	___wmul@product
  6430  02FC  01F5               	clrf	___wmul@product+1
  6431  02FD                     l2860:
  6432  02FD  1C70               	btfss	___wmul@multiplier,0
  6433  02FE  2B00               	goto	u1021
  6434  02FF  2B01               	goto	u1020
  6435  0300                     u1021:
  6436  0300  2B05               	goto	l895
  6437  0301                     u1020:
  6438  0301                     l2862:
  6439  0301  0872               	movf	___wmul@multiplicand,w
  6440  0302  07F4               	addwf	___wmul@product,f
  6441  0303  0873               	movf	___wmul@multiplicand+1,w
  6442  0304  3DF5               	addwfc	___wmul@product+1,f
  6443  0305                     l895:
  6444  0305  3001               	movlw	1
  6445  0306                     u1035:
  6446  0306  35F2               	lslf	___wmul@multiplicand,f
  6447  0307  0DF3               	rlf	___wmul@multiplicand+1,f
  6448  0308  0B89               	decfsz	9,f
  6449  0309  2B06               	goto	u1035
  6450  030A                     l2864:
  6451  030A  3001               	movlw	1
  6452  030B                     u1045:
  6453  030B  36F1               	lsrf	___wmul@multiplier+1,f
  6454  030C  0CF0               	rrf	___wmul@multiplier,f
  6455  030D  0B89               	decfsz	9,f
  6456  030E  2B0B               	goto	u1045
  6457  030F                     l2866:
  6458  030F  0870               	movf	___wmul@multiplier,w
  6459  0310  0471               	iorwf	___wmul@multiplier+1,w
  6460  0311  1D03               	btfss	3,2
  6461  0312  2B14               	goto	u1051
  6462  0313  2B15               	goto	u1050
  6463  0314                     u1051:
  6464  0314  2AFD               	goto	l2860
  6465  0315                     u1050:
  6466  0315                     l2868:
  6467  0315  0875               	movf	___wmul@product+1,w
  6468  0316  00F1               	movwf	?___wmul+1
  6469  0317  0874               	movf	___wmul@product,w
  6470  0318  00F0               	movwf	?___wmul
  6471  0319                     l897:
  6472  0319  0008               	return
  6473  031A                     __end_of___wmul:
  6474                           
  6475                           	psect	text4
  6476  03FF                     __ptext4:	
  6477 ;; *************** function ___lwmod *****************
  6478 ;; Defined at:
  6479 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;  divisor         2    8[COMMON] unsigned int 
  6482 ;;  dividend        2   10[COMMON] unsigned int 
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  counter         1   13[COMMON] unsigned char 
  6485 ;; Return value:  Size  Location     Type
  6486 ;;                  2    8[COMMON] unsigned int 
  6487 ;; Registers used:
  6488 ;;		wreg, status,2, status,0
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6495 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6496 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6497 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6498 ;;Total ram usage:        6 bytes
  6499 ;; Hardware stack levels used:    1
  6500 ;; This function calls:
  6501 ;;		Nothing
  6502 ;; This function is called by:
  6503 ;;		_sprintf
  6504 ;; This function uses a non-reentrant model
  6505 ;;
  6506                           
  6507                           
  6508                           ;psect for function ___lwmod
  6509  03FF                     ___lwmod:
  6510  03FF                     l2898:	
  6511                           ;incstack = 0
  6512                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6513                           
  6514  03FF  0878               	movf	___lwmod@divisor,w
  6515  0400  0479               	iorwf	___lwmod@divisor+1,w
  6516  0401  1903               	btfsc	3,2
  6517  0402  2C04               	goto	u1131
  6518  0403  2C05               	goto	u1130
  6519  0404                     u1131:
  6520  0404  2C2E               	goto	l2916
  6521  0405                     u1130:
  6522  0405                     l2900:
  6523  0405  01FD               	clrf	___lwmod@counter
  6524  0406  0AFD               	incf	___lwmod@counter,f
  6525  0407  2C11               	goto	l2906
  6526  0408                     l2902:
  6527  0408  3001               	movlw	1
  6528  0409                     u1145:
  6529  0409  35F8               	lslf	___lwmod@divisor,f
  6530  040A  0DF9               	rlf	___lwmod@divisor+1,f
  6531  040B  0B89               	decfsz	9,f
  6532  040C  2C09               	goto	u1145
  6533  040D                     l2904:
  6534  040D  3001               	movlw	1
  6535  040E  00FC               	movwf	??___lwmod
  6536  040F  087C               	movf	??___lwmod,w
  6537  0410  07FD               	addwf	___lwmod@counter,f
  6538  0411                     l2906:
  6539  0411  1FF9               	btfss	___lwmod@divisor+1,7
  6540  0412  2C14               	goto	u1151
  6541  0413  2C15               	goto	u1150
  6542  0414                     u1151:
  6543  0414  2C08               	goto	l2902
  6544  0415                     u1150:
  6545  0415                     l2908:
  6546  0415  0879               	movf	___lwmod@divisor+1,w
  6547  0416  027B               	subwf	___lwmod@dividend+1,w
  6548  0417  1D03               	skipz
  6549  0418  2C1B               	goto	u1165
  6550  0419  0878               	movf	___lwmod@divisor,w
  6551  041A  027A               	subwf	___lwmod@dividend,w
  6552  041B                     u1165:
  6553  041B  1C03               	skipc
  6554  041C  2C1E               	goto	u1161
  6555  041D  2C1F               	goto	u1160
  6556  041E                     u1161:
  6557  041E  2C23               	goto	l2912
  6558  041F                     u1160:
  6559  041F                     l2910:
  6560  041F  0878               	movf	___lwmod@divisor,w
  6561  0420  02FA               	subwf	___lwmod@dividend,f
  6562  0421  0879               	movf	___lwmod@divisor+1,w
  6563  0422  3BFB               	subwfb	___lwmod@dividend+1,f
  6564  0423                     l2912:
  6565  0423  3001               	movlw	1
  6566  0424                     u1175:
  6567  0424  36F9               	lsrf	___lwmod@divisor+1,f
  6568  0425  0CF8               	rrf	___lwmod@divisor,f
  6569  0426  0B89               	decfsz	9,f
  6570  0427  2C24               	goto	u1175
  6571  0428                     l2914:
  6572  0428  3001               	movlw	1
  6573  0429  02FD               	subwf	___lwmod@counter,f
  6574  042A  1D03               	btfss	3,2
  6575  042B  2C2D               	goto	u1181
  6576  042C  2C2E               	goto	u1180
  6577  042D                     u1181:
  6578  042D  2C15               	goto	l2908
  6579  042E                     u1180:
  6580  042E                     l2916:
  6581  042E  087B               	movf	___lwmod@dividend+1,w
  6582  042F  00F9               	movwf	?___lwmod+1
  6583  0430  087A               	movf	___lwmod@dividend,w
  6584  0431  00F8               	movwf	?___lwmod
  6585  0432                     l1177:
  6586  0432  0008               	return
  6587  0433                     __end_of___lwmod:
  6588                           
  6589                           	psect	text5
  6590  04A7                     __ptext5:	
  6591 ;; *************** function ___lwdiv *****************
  6592 ;; Defined at:
  6593 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  6594 ;; Parameters:    Size  Location     Type
  6595 ;;  divisor         2    0[COMMON] unsigned int 
  6596 ;;  dividend        2    2[COMMON] unsigned int 
  6597 ;; Auto vars:     Size  Location     Type
  6598 ;;  quotient        2    5[COMMON] unsigned int 
  6599 ;;  counter         1    7[COMMON] unsigned char 
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  2    0[COMMON] unsigned int 
  6602 ;; Registers used:
  6603 ;;		wreg, status,2, status,0
  6604 ;; Tracked objects:
  6605 ;;		On entry : 0/0
  6606 ;;		On exit  : 0/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6609 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6610 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6611 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6612 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6613 ;;Total ram usage:        8 bytes
  6614 ;; Hardware stack levels used:    1
  6615 ;; This function calls:
  6616 ;;		Nothing
  6617 ;; This function is called by:
  6618 ;;		_sprintf
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           
  6622                           
  6623                           ;psect for function ___lwdiv
  6624  04A7                     ___lwdiv:
  6625  04A7                     l2872:	
  6626                           ;incstack = 0
  6627                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6628                           
  6629  04A7  01F5               	clrf	___lwdiv@quotient
  6630  04A8  01F6               	clrf	___lwdiv@quotient+1
  6631  04A9                     l2874:
  6632  04A9  0870               	movf	___lwdiv@divisor,w
  6633  04AA  0471               	iorwf	___lwdiv@divisor+1,w
  6634  04AB  1903               	btfsc	3,2
  6635  04AC  2CAE               	goto	u1061
  6636  04AD  2CAF               	goto	u1060
  6637  04AE                     u1061:
  6638  04AE  2CDE               	goto	l2894
  6639  04AF                     u1060:
  6640  04AF                     l2876:
  6641  04AF  01F7               	clrf	___lwdiv@counter
  6642  04B0  0AF7               	incf	___lwdiv@counter,f
  6643  04B1  2CBB               	goto	l2882
  6644  04B2                     l2878:
  6645  04B2  3001               	movlw	1
  6646  04B3                     u1075:
  6647  04B3  35F0               	lslf	___lwdiv@divisor,f
  6648  04B4  0DF1               	rlf	___lwdiv@divisor+1,f
  6649  04B5  0B89               	decfsz	9,f
  6650  04B6  2CB3               	goto	u1075
  6651  04B7                     l2880:
  6652  04B7  3001               	movlw	1
  6653  04B8  00F4               	movwf	??___lwdiv
  6654  04B9  0874               	movf	??___lwdiv,w
  6655  04BA  07F7               	addwf	___lwdiv@counter,f
  6656  04BB                     l2882:
  6657  04BB  1FF1               	btfss	___lwdiv@divisor+1,7
  6658  04BC  2CBE               	goto	u1081
  6659  04BD  2CBF               	goto	u1080
  6660  04BE                     u1081:
  6661  04BE  2CB2               	goto	l2878
  6662  04BF                     u1080:
  6663  04BF                     l2884:
  6664  04BF  3001               	movlw	1
  6665  04C0                     u1095:
  6666  04C0  35F5               	lslf	___lwdiv@quotient,f
  6667  04C1  0DF6               	rlf	___lwdiv@quotient+1,f
  6668  04C2  0B89               	decfsz	9,f
  6669  04C3  2CC0               	goto	u1095
  6670  04C4  0871               	movf	___lwdiv@divisor+1,w
  6671  04C5  0273               	subwf	___lwdiv@dividend+1,w
  6672  04C6  1D03               	skipz
  6673  04C7  2CCA               	goto	u1105
  6674  04C8  0870               	movf	___lwdiv@divisor,w
  6675  04C9  0272               	subwf	___lwdiv@dividend,w
  6676  04CA                     u1105:
  6677  04CA  1C03               	skipc
  6678  04CB  2CCD               	goto	u1101
  6679  04CC  2CCE               	goto	u1100
  6680  04CD                     u1101:
  6681  04CD  2CD3               	goto	l2890
  6682  04CE                     u1100:
  6683  04CE                     l2886:
  6684  04CE  0870               	movf	___lwdiv@divisor,w
  6685  04CF  02F2               	subwf	___lwdiv@dividend,f
  6686  04D0  0871               	movf	___lwdiv@divisor+1,w
  6687  04D1  3BF3               	subwfb	___lwdiv@dividend+1,f
  6688  04D2                     l2888:
  6689  04D2  1475               	bsf	___lwdiv@quotient,0
  6690  04D3                     l2890:
  6691  04D3  3001               	movlw	1
  6692  04D4                     u1115:
  6693  04D4  36F1               	lsrf	___lwdiv@divisor+1,f
  6694  04D5  0CF0               	rrf	___lwdiv@divisor,f
  6695  04D6  0B89               	decfsz	9,f
  6696  04D7  2CD4               	goto	u1115
  6697  04D8                     l2892:
  6698  04D8  3001               	movlw	1
  6699  04D9  02F7               	subwf	___lwdiv@counter,f
  6700  04DA  1D03               	btfss	3,2
  6701  04DB  2CDD               	goto	u1121
  6702  04DC  2CDE               	goto	u1120
  6703  04DD                     u1121:
  6704  04DD  2CBF               	goto	l2884
  6705  04DE                     u1120:
  6706  04DE                     l2894:
  6707  04DE  0876               	movf	___lwdiv@quotient+1,w
  6708  04DF  00F1               	movwf	?___lwdiv+1
  6709  04E0  0875               	movf	___lwdiv@quotient,w
  6710  04E1  00F0               	movwf	?___lwdiv
  6711  04E2                     l1167:
  6712  04E2  0008               	return
  6713  04E3                     __end_of___lwdiv:
  6714                           
  6715                           	psect	text6
  6716  02A9                     __ptext6:	
  6717 ;; *************** function _lcd_str *****************
  6718 ;; Defined at:
  6719 ;;		line 83 in file "lcd_lib.c"
  6720 ;; Parameters:    Size  Location     Type
  6721 ;;  ptr             1    wreg     PTR const unsigned char 
  6722 ;;		 -> Msg2(12), Msg1(17), 
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;  ptr             1    1[BANK0 ] PTR const unsigned char 
  6725 ;;		 -> Msg2(12), Msg1(17), 
  6726 ;; Return value:  Size  Location     Type
  6727 ;;                  1    wreg      void 
  6728 ;; Registers used:
  6729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6730 ;; Tracked objects:
  6731 ;;		On entry : 0/0
  6732 ;;		On exit  : 0/0
  6733 ;;		Unchanged: 0/0
  6734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6736 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6737 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6738 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6739 ;;Total ram usage:        2 bytes
  6740 ;; Hardware stack levels used:    1
  6741 ;; Hardware stack levels required when called:    9
  6742 ;; This function calls:
  6743 ;;		_lcd_data
  6744 ;; This function is called by:
  6745 ;;		_main
  6746 ;; This function uses a non-reentrant model
  6747 ;;
  6748                           
  6749                           
  6750                           ;psect for function _lcd_str
  6751  02A9                     _lcd_str:
  6752                           
  6753                           ;incstack = 0
  6754                           ; Regs used in _lcd_str: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6755                           ;lcd_str@ptr stored from wreg
  6756  02A9  0020               	movlb	0	; select bank0
  6757  02AA  00BE               	movwf	lcd_str@ptr
  6758  02AB                     l3238:
  6759                           
  6760                           ;lcd_lib.c: 85: while (*ptr != 0)
  6761  02AB  2AB8               	goto	l3244
  6762  02AC                     l3240:
  6763                           
  6764                           ;lcd_lib.c: 86: lcd_data(*ptr++);
  6765  02AC  083E               	movf	lcd_str@ptr,w
  6766  02AD  0086               	movwf	6
  6767  02AE  0187               	clrf	7
  6768  02AF  0801               	movf	1,w
  6769  02B0  3183  23AB  3182   	fcall	_lcd_data
  6770  02B3                     l3242:
  6771  02B3  3001               	movlw	1
  6772  02B4  0020               	movlb	0	; select bank0
  6773  02B5  00BD               	movwf	??_lcd_str
  6774  02B6  083D               	movf	??_lcd_str,w
  6775  02B7  07BE               	addwf	lcd_str@ptr,f
  6776  02B8                     l3244:
  6777  02B8  083E               	movf	lcd_str@ptr,w
  6778  02B9  0086               	movwf	6
  6779  02BA  0187               	clrf	7
  6780  02BB  0801               	movf	1,w
  6781  02BC  1D03               	btfss	3,2
  6782  02BD  2ABF               	goto	u1561
  6783  02BE  2AC0               	goto	u1560
  6784  02BF                     u1561:
  6785  02BF  2AAC               	goto	l3240
  6786  02C0                     u1560:
  6787  02C0                     l783:
  6788  02C0  0008               	return
  6789  02C1                     __end_of_lcd_str:
  6790                           
  6791                           	psect	text7
  6792  03AB                     __ptext7:	
  6793 ;; *************** function _lcd_data *****************
  6794 ;; Defined at:
  6795 ;;		line 16 in file "lcd_lib.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;  data            1    wreg     unsigned char 
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;  data            1   11[COMMON] unsigned char 
  6800 ;;  tbuf            2   12[COMMON] unsigned char [2]
  6801 ;; Return value:  Size  Location     Type
  6802 ;;                  1    wreg      void 
  6803 ;; Registers used:
  6804 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6805 ;; Tracked objects:
  6806 ;;		On entry : 0/0
  6807 ;;		On exit  : 0/0
  6808 ;;		Unchanged: 0/0
  6809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6811 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6813 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6814 ;;Total ram usage:        4 bytes
  6815 ;; Hardware stack levels used:    1
  6816 ;; Hardware stack levels required when called:    8
  6817 ;; This function calls:
  6818 ;;		_I2C_Close
  6819 ;;		_I2C_MasterWrite
  6820 ;;		_I2C_Open
  6821 ;;		_I2C_SetBuffer
  6822 ;; This function is called by:
  6823 ;;		_lcd_str
  6824 ;;		_lcd_icon
  6825 ;; This function uses a non-reentrant model
  6826 ;;
  6827                           
  6828                           
  6829                           ;psect for function _lcd_data
  6830  03AB                     _lcd_data:
  6831                           
  6832                           ;incstack = 0
  6833                           ; Regs used in _lcd_data: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6834                           ;lcd_data@data stored from wreg
  6835  03AB  00FB               	movwf	lcd_data@data
  6836  03AC                     l2834:
  6837                           
  6838                           ;lcd_lib.c: 18: unsigned char tbuf[2];;lcd_lib.c: 19: tbuf[0] = 0x40;
  6839  03AC  3040               	movlw	64
  6840  03AD  00FA               	movwf	??_lcd_data
  6841  03AE  087A               	movf	??_lcd_data,w
  6842  03AF  00FC               	movwf	lcd_data@tbuf
  6843                           
  6844                           ;lcd_lib.c: 20: tbuf[1] = data;
  6845  03B0  087B               	movf	lcd_data@data,w
  6846  03B1  00FA               	movwf	??_lcd_data
  6847  03B2  087A               	movf	??_lcd_data,w
  6848  03B3  00FD               	movwf	lcd_data@tbuf+1
  6849  03B4                     l2836:	
  6850                           ;lcd_lib.c: 22: while (!I2C_Open(0x3E));
  6851                           
  6852  03B4  303E               	movlw	62
  6853  03B5  3184  2433  3183   	fcall	_I2C_Open
  6854  03B8  3A00               	xorlw	0
  6855  03B9  1903               	skipnz
  6856  03BA  2BBC               	goto	u981
  6857  03BB  2BBD               	goto	u980
  6858  03BC                     u981:
  6859  03BC  2BB4               	goto	l2836
  6860  03BD                     u980:
  6861  03BD                     l2838:
  6862                           
  6863                           ;lcd_lib.c: 23: I2C_SetBuffer(tbuf, 2);
  6864  03BD  3002               	movlw	2
  6865  03BE  00F0               	movwf	I2C_SetBuffer@bufferSize
  6866  03BF  3000               	movlw	0
  6867  03C0  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  6868  03C1  307C               	movlw	(low (lcd_data@tbuf| 0))& (0+255)
  6869  03C2  3181  21F1  3183   	fcall	_I2C_SetBuffer
  6870  03C5                     l2840:
  6871                           
  6872                           ;lcd_lib.c: 24: I2C_MasterWrite();
  6873  03C5  3181  2157  3183   	fcall	_I2C_MasterWrite
  6874  03C8                     l2842:	
  6875                           ;lcd_lib.c: 26: while (I2C_BUSY == I2C_Close());
  6876                           
  6877  03C8  3182  22C1  3183   	fcall	_I2C_Close
  6878  03CB  3A01               	xorlw	1
  6879  03CC  1903               	skipnz
  6880  03CD  2BCF               	goto	u991
  6881  03CE  2BD0               	goto	u990
  6882  03CF                     u991:
  6883  03CF  2BC8               	goto	l2842
  6884  03D0                     u990:
  6885  03D0                     l2844:
  6886                           
  6887                           ;lcd_lib.c: 27: _delay((unsigned long)((30)*(32000000/4000000.0)));
  6888  03D0  3050               	movlw	80
  6889  03D1                     u1787:
  6890  03D1  0B89               	decfsz	9,f
  6891  03D2  2BD1               	goto	u1787
  6892  03D3                     l758:
  6893  03D3  0008               	return
  6894  03D4                     __end_of_lcd_data:
  6895                           
  6896                           	psect	text8
  6897  0521                     __ptext8:	
  6898 ;; *************** function _lcd_init *****************
  6899 ;; Defined at:
  6900 ;;		line 55 in file "lcd_lib.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;		None
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;		None
  6905 ;; Return value:  Size  Location     Type
  6906 ;;                  1    wreg      void 
  6907 ;; Registers used:
  6908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6909 ;; Tracked objects:
  6910 ;;		On entry : 0/0
  6911 ;;		On exit  : 0/0
  6912 ;;		Unchanged: 0/0
  6913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  6914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6916 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6917 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  6918 ;;Total ram usage:        2 bytes
  6919 ;; Hardware stack levels used:    1
  6920 ;; Hardware stack levels required when called:    9
  6921 ;; This function calls:
  6922 ;;		_lcd_cmd
  6923 ;; This function is called by:
  6924 ;;		_main
  6925 ;; This function uses a non-reentrant model
  6926 ;;
  6927                           
  6928                           
  6929                           ;psect for function _lcd_init
  6930  0521                     _lcd_init:
  6931  0521                     l2936:	
  6932                           ;incstack = 0
  6933                           ; Regs used in _lcd_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6934                           
  6935                           
  6936                           ;lcd_lib.c: 57: _delay((unsigned long)((150)*(32000000/4000.0)));
  6937  0521  3007               	movlw	7
  6938  0522  0020               	movlb	0	; select bank0
  6939  0523  00BE               	movwf	??_lcd_init+1
  6940  0524  3017               	movlw	23
  6941  0525  00BD               	movwf	??_lcd_init
  6942  0526  306A               	movlw	106
  6943  0527                     u1797:
  6944  0527  0B89               	decfsz	9,f
  6945  0528  2D27               	goto	u1797
  6946  0529  0BBD               	decfsz	??_lcd_init,f
  6947  052A  2D27               	goto	u1797
  6948  052B  0BBE               	decfsz	??_lcd_init+1,f
  6949  052C  2D27               	goto	u1797
  6950  052D  0000               	nop
  6951  052E                     l2938:
  6952                           
  6953                           ;lcd_lib.c: 58: lcd_cmd(0x38);
  6954  052E  3038               	movlw	56
  6955  052F  3184  246D  3185   	fcall	_lcd_cmd
  6956  0532                     l2940:
  6957                           
  6958                           ;lcd_lib.c: 59: lcd_cmd(0x39);
  6959  0532  3039               	movlw	57
  6960  0533  3184  246D  3185   	fcall	_lcd_cmd
  6961  0536                     l2942:
  6962                           
  6963                           ;lcd_lib.c: 60: lcd_cmd(0x14);
  6964  0536  3014               	movlw	20
  6965  0537  3184  246D  3185   	fcall	_lcd_cmd
  6966  053A                     l2944:
  6967                           
  6968                           ;lcd_lib.c: 62: lcd_cmd(0x70 + (0x18 & 0x0F));
  6969  053A  3078               	movlw	120
  6970  053B  3184  246D  3185   	fcall	_lcd_cmd
  6971  053E                     l2946:
  6972                           
  6973                           ;lcd_lib.c: 63: lcd_cmd(0x5C + (0x18 >> 4));
  6974  053E  305D               	movlw	93
  6975  053F  3184  246D  3185   	fcall	_lcd_cmd
  6976  0542                     l2948:
  6977                           
  6978                           ;lcd_lib.c: 65: lcd_cmd(0x6B);
  6979  0542  306B               	movlw	107
  6980  0543  3184  246D  3185   	fcall	_lcd_cmd
  6981                           
  6982                           ;lcd_lib.c: 66: _delay((unsigned long)((300)*(32000000/4000.0)));
  6983  0546  300D               	movlw	13
  6984  0547  0020               	movlb	0	; select bank0
  6985  0548  00BE               	movwf	??_lcd_init+1
  6986  0549  302D               	movlw	45
  6987  054A  00BD               	movwf	??_lcd_init
  6988  054B  30D7               	movlw	215
  6989  054C                     u1807:
  6990  054C  0B89               	decfsz	9,f
  6991  054D  2D4C               	goto	u1807
  6992  054E  0BBD               	decfsz	??_lcd_init,f
  6993  054F  2D4C               	goto	u1807
  6994  0550  0BBE               	decfsz	??_lcd_init+1,f
  6995  0551  2D4C               	goto	u1807
  6996  0552  3200               	nop2
  6997  0553                     l2950:
  6998                           
  6999                           ;lcd_lib.c: 67: lcd_cmd(0x38);
  7000  0553  3038               	movlw	56
  7001  0554  3184  246D  3185   	fcall	_lcd_cmd
  7002  0557                     l2952:
  7003                           
  7004                           ;lcd_lib.c: 68: lcd_cmd(0x0C);
  7005  0557  300C               	movlw	12
  7006  0558  3184  246D  3185   	fcall	_lcd_cmd
  7007  055B                     l2954:
  7008                           
  7009                           ;lcd_lib.c: 69: lcd_cmd(0x01);
  7010  055B  3001               	movlw	1
  7011  055C  3184  246D  3185   	fcall	_lcd_cmd
  7012  055F                     l774:
  7013  055F  0008               	return
  7014  0560                     __end_of_lcd_init:
  7015                           
  7016                           	psect	text9
  7017  046D                     __ptext9:	
  7018 ;; *************** function _lcd_cmd *****************
  7019 ;; Defined at:
  7020 ;;		line 33 in file "lcd_lib.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;  cmd             1    wreg     unsigned char 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  cmd             1   13[COMMON] unsigned char 
  7025 ;;  tbuf            2   11[COMMON] unsigned char [2]
  7026 ;; Return value:  Size  Location     Type
  7027 ;;                  1    wreg      void 
  7028 ;; Registers used:
  7029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7030 ;; Tracked objects:
  7031 ;;		On entry : 0/0
  7032 ;;		On exit  : 0/0
  7033 ;;		Unchanged: 0/0
  7034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7036 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7037 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7038 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7039 ;;Total ram usage:        4 bytes
  7040 ;; Hardware stack levels used:    1
  7041 ;; Hardware stack levels required when called:    8
  7042 ;; This function calls:
  7043 ;;		_I2C_Close
  7044 ;;		_I2C_MasterWrite
  7045 ;;		_I2C_Open
  7046 ;;		_I2C_SetBuffer
  7047 ;; This function is called by:
  7048 ;;		_main
  7049 ;;		_lcd_init
  7050 ;;		_lcd_clear
  7051 ;;		_lcd_icon
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           
  7056                           ;psect for function _lcd_cmd
  7057  046D                     _lcd_cmd:
  7058                           
  7059                           ;incstack = 0
  7060                           ; Regs used in _lcd_cmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7061                           ;lcd_cmd@cmd stored from wreg
  7062  046D  00FD               	movwf	lcd_cmd@cmd
  7063  046E                     l2814:
  7064                           
  7065                           ;lcd_lib.c: 35: unsigned char tbuf[2];;lcd_lib.c: 36: tbuf[0] = 0x00;
  7066  046E  01FB               	clrf	lcd_cmd@tbuf
  7067  046F                     l2816:
  7068                           
  7069                           ;lcd_lib.c: 37: tbuf[1] = cmd;
  7070  046F  087D               	movf	lcd_cmd@cmd,w
  7071  0470  00FA               	movwf	??_lcd_cmd
  7072  0471  087A               	movf	??_lcd_cmd,w
  7073  0472  00FC               	movwf	lcd_cmd@tbuf+1
  7074  0473                     l2818:	
  7075                           ;lcd_lib.c: 39: while (!I2C_Open(0x3E));
  7076                           
  7077  0473  303E               	movlw	62
  7078  0474  3184  2433  3184   	fcall	_I2C_Open
  7079  0477  3A00               	xorlw	0
  7080  0478  1903               	skipnz
  7081  0479  2C7B               	goto	u941
  7082  047A  2C7C               	goto	u940
  7083  047B                     u941:
  7084  047B  2C73               	goto	l2818
  7085  047C                     u940:
  7086  047C                     l2820:
  7087                           
  7088                           ;lcd_lib.c: 40: I2C_SetBuffer(tbuf, 2);
  7089  047C  3002               	movlw	2
  7090  047D  00F0               	movwf	I2C_SetBuffer@bufferSize
  7091  047E  3000               	movlw	0
  7092  047F  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7093  0480  307B               	movlw	(low (lcd_cmd@tbuf| 0))& (0+255)
  7094  0481  3181  21F1  3184   	fcall	_I2C_SetBuffer
  7095  0484                     l2822:
  7096                           
  7097                           ;lcd_lib.c: 41: I2C_MasterWrite();
  7098  0484  3181  2157  3184   	fcall	_I2C_MasterWrite
  7099  0487                     l2824:	
  7100                           ;lcd_lib.c: 43: while (I2C_BUSY == I2C_Close());
  7101                           
  7102  0487  3182  22C1  3184   	fcall	_I2C_Close
  7103  048A  3A01               	xorlw	1
  7104  048B  1903               	skipnz
  7105  048C  2C8E               	goto	u951
  7106  048D  2C8F               	goto	u950
  7107  048E                     u951:
  7108  048E  2C87               	goto	l2824
  7109  048F                     u950:
  7110  048F                     l2826:
  7111                           
  7112                           ;lcd_lib.c: 46: if ((cmd == 0x01) || (cmd == 0x02))
  7113  048F  037D               	decf	lcd_cmd@cmd,w
  7114  0490  1903               	btfsc	3,2
  7115  0491  2C93               	goto	u961
  7116  0492  2C94               	goto	u960
  7117  0493                     u961:
  7118  0493  2C9A               	goto	l2830
  7119  0494                     u960:
  7120  0494                     l2828:
  7121  0494  3002               	movlw	2
  7122  0495  067D               	xorwf	lcd_cmd@cmd,w
  7123  0496  1D03               	btfss	3,2
  7124  0497  2C99               	goto	u971
  7125  0498  2C9A               	goto	u970
  7126  0499                     u971:
  7127  0499  2CA3               	goto	l2832
  7128  049A                     u970:
  7129  049A                     l2830:
  7130                           
  7131                           ;lcd_lib.c: 47: _delay((unsigned long)((2)*(32000000/4000.0)));
  7132  049A  3015               	movlw	21
  7133  049B  00FA               	movwf	??_lcd_cmd
  7134  049C  30C6               	movlw	198
  7135  049D                     u1817:
  7136  049D  0B89               	decfsz	9,f
  7137  049E  2C9D               	goto	u1817
  7138  049F  0BFA               	decfsz	??_lcd_cmd,f
  7139  04A0  2C9D               	goto	u1817
  7140  04A1  3200               	nop2
  7141  04A2  2CA6               	goto	l771
  7142  04A3                     l2832:
  7143                           
  7144                           ;lcd_lib.c: 48: else;lcd_lib.c: 49: _delay((unsigned long)((30)*(32000000/4000000.0)));
  7145  04A3  3050               	movlw	80
  7146  04A4                     u1827:
  7147  04A4  0B89               	decfsz	9,f
  7148  04A5  2CA4               	goto	u1827
  7149  04A6                     l771:
  7150  04A6  0008               	return
  7151  04A7                     __end_of_lcd_cmd:
  7152                           
  7153                           	psect	text10
  7154  0433                     __ptext10:	
  7155 ;; *************** function _I2C_Open *****************
  7156 ;; Defined at:
  7157 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;  address         1    wreg     unsigned char 
  7160 ;; Auto vars:     Size  Location     Type
  7161 ;;  address         1    1[COMMON] unsigned char 
  7162 ;;  returnValue     1    2[COMMON] enum E92
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  1    wreg      enum E92
  7165 ;; Registers used:
  7166 ;;		wreg, status,2, status,0, pclath, cstack
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7173 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7174 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7175 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7176 ;;Total ram usage:        3 bytes
  7177 ;; Hardware stack levels used:    1
  7178 ;; Hardware stack levels required when called:    1
  7179 ;; This function calls:
  7180 ;;		_I2C_MasterClearIrq
  7181 ;;		_I2C_MasterOpen
  7182 ;; This function is called by:
  7183 ;;		_lcd_data
  7184 ;;		_lcd_cmd
  7185 ;;		_I2C_Read1ByteRegister
  7186 ;;		_I2C_Read2ByteRegister
  7187 ;;		_I2C_Write1ByteRegister
  7188 ;;		_I2C_Write2ByteRegister
  7189 ;;		_I2C_WriteNBytes
  7190 ;;		_I2C_ReadNBytes
  7191 ;;		_I2C_ReadDataBlock
  7192 ;; This function uses a non-reentrant model
  7193 ;;
  7194                           
  7195                           
  7196                           ;psect for function _I2C_Open
  7197  0433                     _I2C_Open:
  7198                           
  7199                           ;incstack = 0
  7200                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  7201                           ;I2C_Open@address stored from wreg
  7202  0433  00F1               	movwf	I2C_Open@address
  7203  0434                     l2670:
  7204                           
  7205                           ;i2c_master.c: 178: i2c_error_t returnValue = I2C_BUSY;
  7206  0434  01F2               	clrf	I2C_Open@returnValue
  7207  0435  0AF2               	incf	I2C_Open@returnValue,f
  7208                           
  7209                           ;i2c_master.c: 180: if(!I2C_Status.inUse)
  7210  0436  0020               	movlb	0	; select bank0
  7211  0437  193C               	btfsc	_I2C_Status+28,2
  7212  0438  2C3A               	goto	u911
  7213  0439  2C3B               	goto	u910
  7214  043A                     u911:
  7215  043A  2C6B               	goto	l408
  7216  043B                     u910:
  7217  043B                     l2672:
  7218                           
  7219                           ;i2c_master.c: 181: {;i2c_master.c: 182: I2C_Status.address = address;
  7220  043B  0871               	movf	I2C_Open@address,w
  7221  043C  00F0               	movwf	??_I2C_Open
  7222  043D  0870               	movf	??_I2C_Open,w
  7223  043E  00B6               	movwf	_I2C_Status+22
  7224  043F                     l2674:
  7225                           
  7226                           ;i2c_master.c: 183: I2C_Status.busy = 0;
  7227  043F  10BC               	bcf	_I2C_Status+28,1
  7228  0440                     l2676:
  7229                           
  7230                           ;i2c_master.c: 184: I2C_Status.inUse = 1;
  7231  0440  153C               	bsf	_I2C_Status+28,2
  7232  0441                     l2678:
  7233                           
  7234                           ;i2c_master.c: 185: I2C_Status.addressNackCheck = 0;
  7235  0441  103C               	bcf	_I2C_Status+28,0
  7236                           
  7237                           ;i2c_master.c: 186: I2C_Status.state = I2C_RESET;
  7238  0442  300E               	movlw	14
  7239  0443  00F0               	movwf	??_I2C_Open
  7240  0444  0870               	movf	??_I2C_Open,w
  7241  0445  00BA               	movwf	_I2C_Status+26
  7242                           
  7243                           ;i2c_master.c: 187: I2C_Status.time_out_value = 500;
  7244  0446  30F4               	movlw	244
  7245  0447  00B4               	movwf	_I2C_Status+20
  7246  0448  3001               	movlw	1
  7247  0449  00B5               	movwf	_I2C_Status+21
  7248  044A                     l2680:
  7249                           
  7250                           ;i2c_master.c: 188: I2C_Status.bufferFree = 1;
  7251  044A  15BC               	bsf	_I2C_Status+28,3
  7252                           
  7253                           ;i2c_master.c: 191: I2C_Status.callbackTable[I2C_DATA_COMPLETE]=I2C_CallbackReturnStop;
  7254  044B  30FA               	movlw	low _I2C_CallbackReturnStop
  7255  044C  00A0               	movwf	_I2C_Status
  7256  044D  3000               	movlw	high _I2C_CallbackReturnStop
  7257  044E  00A1               	movwf	_I2C_Status+1
  7258  044F                     l2682:
  7259                           
  7260                           ;i2c_master.c: 192: I2C_Status.callbackPayload[I2C_DATA_COMPLETE] = (0);
  7261  044F  01AC               	clrf	low ((_I2C_Status| 0+12))
  7262  0450                     l2684:
  7263                           
  7264                           ;i2c_master.c: 193: I2C_Status.callbackTable[I2C_WRITE_COLLISION]=I2C_CallbackReturnStop
      +                          ;
  7265  0450  30FA               	movlw	low _I2C_CallbackReturnStop
  7266  0451  00A2               	movwf	low ((_I2C_Status| 0+2))
  7267  0452  3000               	movlw	high _I2C_CallbackReturnStop
  7268  0453  00A3               	movwf	(low ((_I2C_Status| 0+2))+1)
  7269                           
  7270                           ;i2c_master.c: 194: I2C_Status.callbackPayload[I2C_WRITE_COLLISION] = (0);
  7271  0454  01AD               	clrf	low ((_I2C_Status| 0+13))
  7272  0455                     l2686:
  7273                           
  7274                           ;i2c_master.c: 195: I2C_Status.callbackTable[I2C_ADDR_NACK]=I2C_CallbackReturnStop;
  7275  0455  30FA               	movlw	low _I2C_CallbackReturnStop
  7276  0456  00A4               	movwf	low ((_I2C_Status| 0+4))
  7277  0457  3000               	movlw	high _I2C_CallbackReturnStop
  7278  0458  00A5               	movwf	(low ((_I2C_Status| 0+4))+1)
  7279  0459                     l2688:
  7280                           
  7281                           ;i2c_master.c: 196: I2C_Status.callbackPayload[I2C_ADDR_NACK] = (0);
  7282  0459  01AE               	clrf	low ((_I2C_Status| 0+14))
  7283                           
  7284                           ;i2c_master.c: 197: I2C_Status.callbackTable[I2C_DATA_NACK]=I2C_CallbackReturnStop;
  7285  045A  30FA               	movlw	low _I2C_CallbackReturnStop
  7286  045B  00A6               	movwf	low ((_I2C_Status| 0+6))
  7287  045C  3000               	movlw	high _I2C_CallbackReturnStop
  7288  045D  00A7               	movwf	(low ((_I2C_Status| 0+6))+1)
  7289  045E                     l2690:
  7290                           
  7291                           ;i2c_master.c: 198: I2C_Status.callbackPayload[I2C_DATA_NACK] = (0);
  7292  045E  01AF               	clrf	low ((_I2C_Status| 0+15))
  7293  045F                     l2692:
  7294                           
  7295                           ;i2c_master.c: 199: I2C_Status.callbackTable[I2C_TIMEOUT]=I2C_CallbackReturnReset;
  7296  045F  30FC               	movlw	low _I2C_CallbackReturnReset
  7297  0460  00A8               	movwf	low ((_I2C_Status| 0+8))
  7298  0461  3000               	movlw	high _I2C_CallbackReturnReset
  7299  0462  00A9               	movwf	(low ((_I2C_Status| 0+8))+1)
  7300                           
  7301                           ;i2c_master.c: 200: I2C_Status.callbackPayload[I2C_TIMEOUT] = (0);
  7302  0463  01B0               	clrf	low ((_I2C_Status| 0+16))
  7303  0464                     l2694:
  7304                           
  7305                           ;i2c_master.c: 202: I2C_MasterClearIrq();
  7306  0464  3180  20FE  3184   	fcall	_I2C_MasterClearIrq
  7307  0467                     l2696:
  7308                           
  7309                           ;i2c_master.c: 203: I2C_MasterOpen();
  7310  0467  3181  21D4  3184   	fcall	_I2C_MasterOpen
  7311  046A                     l2698:
  7312                           
  7313                           ;i2c_master.c: 204: returnValue = I2C_NOERR;
  7314  046A  01F2               	clrf	I2C_Open@returnValue
  7315  046B                     l408:
  7316                           
  7317                           ;i2c_master.c: 205: };i2c_master.c: 206: return returnValue;
  7318  046B  0872               	movf	I2C_Open@returnValue,w
  7319  046C                     l409:
  7320  046C  0008               	return
  7321  046D                     __end_of_I2C_Open:
  7322                           
  7323                           	psect	text11
  7324  01D4                     __ptext11:	
  7325 ;; *************** function _I2C_MasterOpen *****************
  7326 ;; Defined at:
  7327 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  7328 ;; Parameters:    Size  Location     Type
  7329 ;;		None
  7330 ;; Auto vars:     Size  Location     Type
  7331 ;;		None
  7332 ;; Return value:  Size  Location     Type
  7333 ;;                  1    wreg      unsigned char 
  7334 ;; Registers used:
  7335 ;;		wreg, status,2
  7336 ;; Tracked objects:
  7337 ;;		On entry : 0/0
  7338 ;;		On exit  : 0/0
  7339 ;;		Unchanged: 0/0
  7340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7345 ;;Total ram usage:        0 bytes
  7346 ;; Hardware stack levels used:    1
  7347 ;; This function calls:
  7348 ;;		Nothing
  7349 ;; This function is called by:
  7350 ;;		_I2C_Open
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354                           
  7355                           ;psect for function _I2C_MasterOpen
  7356  01D4                     _I2C_MasterOpen:
  7357  01D4                     l2634:	
  7358                           ;incstack = 0
  7359                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
  7360                           
  7361                           
  7362                           ;i2c_master.c: 545: if(!SSP1CON1bits.SSPEN)
  7363  01D4  0024               	movlb	4	; select bank4
  7364  01D5  1A95               	btfsc	21,5	;volatile
  7365  01D6  29D8               	goto	u881
  7366  01D7  29D9               	goto	u880
  7367  01D8                     u881:
  7368  01D8  29E1               	goto	l574
  7369  01D9                     u880:
  7370  01D9                     l2636:
  7371                           
  7372                           ;i2c_master.c: 546: {;i2c_master.c: 547: SSP1STAT = 0x80;
  7373  01D9  3080               	movlw	128
  7374  01DA  0094               	movwf	20	;volatile
  7375                           
  7376                           ;i2c_master.c: 548: SSP1CON1 = 0x08;
  7377  01DB  3008               	movlw	8
  7378  01DC  0095               	movwf	21	;volatile
  7379  01DD                     l2638:
  7380                           
  7381                           ;i2c_master.c: 549: SSP1CON2 = 0x00;
  7382  01DD  0196               	clrf	22	;volatile
  7383  01DE                     l2640:
  7384                           
  7385                           ;i2c_master.c: 550: SSP1ADD = 0x4F;
  7386  01DE  304F               	movlw	79
  7387  01DF  0092               	movwf	18	;volatile
  7388  01E0                     l2642:
  7389                           
  7390                           ;i2c_master.c: 551: SSP1CON1bits.SSPEN = 1;
  7391  01E0  1695               	bsf	21,5	;volatile
  7392  01E1                     l574:
  7393  01E1  0008               	return
  7394  01E2                     __end_of_I2C_MasterOpen:
  7395                           
  7396                           	psect	text12
  7397  0157                     __ptext12:	
  7398 ;; *************** function _I2C_MasterWrite *****************
  7399 ;; Defined at:
  7400 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  7401 ;; Parameters:    Size  Location     Type
  7402 ;;		None
  7403 ;; Auto vars:     Size  Location     Type
  7404 ;;		None
  7405 ;; Return value:  Size  Location     Type
  7406 ;;                  1    wreg      enum E92
  7407 ;; Registers used:
  7408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7409 ;; Tracked objects:
  7410 ;;		On entry : 0/0
  7411 ;;		On exit  : 0/0
  7412 ;;		Unchanged: 0/0
  7413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7415 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7417 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7418 ;;Total ram usage:        0 bytes
  7419 ;; Hardware stack levels used:    1
  7420 ;; Hardware stack levels required when called:    7
  7421 ;; This function calls:
  7422 ;;		_I2C_MasterOperation
  7423 ;; This function is called by:
  7424 ;;		_lcd_data
  7425 ;;		_lcd_cmd
  7426 ;;		_I2C_Read1ByteRegister
  7427 ;;		_I2C_Read2ByteRegister
  7428 ;;		_I2C_Write1ByteRegister
  7429 ;;		_I2C_Write2ByteRegister
  7430 ;;		_I2C_WriteNBytes
  7431 ;;		_I2C_ReadDataBlock
  7432 ;; This function uses a non-reentrant model
  7433 ;;
  7434                           
  7435                           
  7436                           ;psect for function _I2C_MasterWrite
  7437  0157                     _I2C_MasterWrite:
  7438  0157                     l2720:	
  7439                           ;incstack = 0
  7440                           ; Regs used in _I2C_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7441                           
  7442                           
  7443                           ;i2c_master.c: 253: return I2C_MasterOperation(0);;	Return value of _I2C_MasterWrite is 
      +                          never used
  7444  0157  3000               	movlw	0
  7445  0158  3182  22DD  3181   	fcall	_I2C_MasterOperation
  7446  015B                     l425:
  7447  015B  0008               	return
  7448  015C                     __end_of_I2C_MasterWrite:
  7449                           
  7450                           	psect	text13
  7451  02DD                     __ptext13:	
  7452 ;; *************** function _I2C_MasterOperation *****************
  7453 ;; Defined at:
  7454 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;  read            1    wreg     unsigned char 
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;  read            1    8[COMMON] unsigned char 
  7459 ;;  returnValue     1    9[COMMON] enum E92
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  1    wreg      enum E92
  7462 ;; Registers used:
  7463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7470 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7471 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7472 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7473 ;;Total ram usage:        3 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; Hardware stack levels required when called:    6
  7476 ;; This function calls:
  7477 ;;		_I2C_MasterStart
  7478 ;;		_I2C_Poller
  7479 ;; This function is called by:
  7480 ;;		_I2C_MasterWrite
  7481 ;;		_I2C_MasterRead
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485                           
  7486                           ;psect for function _I2C_MasterOperation
  7487  02DD                     _I2C_MasterOperation:
  7488                           
  7489                           ;incstack = 0
  7490                           ; Regs used in _I2C_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7491                           ;I2C_MasterOperation@read stored from wreg
  7492  02DD  00F8               	movwf	I2C_MasterOperation@read
  7493  02DE                     l2650:
  7494                           
  7495                           ;i2c_master.c: 226: i2c_error_t returnValue = I2C_BUSY;
  7496  02DE  01F9               	clrf	I2C_MasterOperation@returnValue
  7497  02DF  0AF9               	incf	I2C_MasterOperation@returnValue,f
  7498                           
  7499                           ;i2c_master.c: 227: if(!I2C_Status.busy)
  7500  02E0  0020               	movlb	0	; select bank0
  7501  02E1  18BC               	btfsc	_I2C_Status+28,1
  7502  02E2  2AE4               	goto	u891
  7503  02E3  2AE5               	goto	u890
  7504  02E4                     u891:
  7505  02E4  2AF9               	goto	l2666
  7506  02E5                     u890:
  7507  02E5                     l2652:
  7508                           
  7509                           ;i2c_master.c: 228: {;i2c_master.c: 229: I2C_Status.busy = 1;
  7510  02E5  14BC               	bsf	_I2C_Status+28,1
  7511  02E6                     l2654:
  7512                           
  7513                           ;i2c_master.c: 230: returnValue = I2C_NOERR;
  7514  02E6  01F9               	clrf	I2C_MasterOperation@returnValue
  7515  02E7                     l2656:
  7516                           
  7517                           ;i2c_master.c: 232: if(read)
  7518  02E7  0878               	movf	I2C_MasterOperation@read,w
  7519  02E8  1903               	btfsc	3,2
  7520  02E9  2AEB               	goto	u901
  7521  02EA  2AEC               	goto	u900
  7522  02EB                     u901:
  7523  02EB  2AEF               	goto	l2660
  7524  02EC                     u900:
  7525  02EC                     l2658:
  7526                           
  7527                           ;i2c_master.c: 233: {;i2c_master.c: 234: I2C_Status.state = I2C_SEND_ADR_READ;
  7528  02EC  01BA               	clrf	_I2C_Status+26
  7529  02ED  0ABA               	incf	_I2C_Status+26,f
  7530                           
  7531                           ;i2c_master.c: 235: }
  7532  02EE  2AF3               	goto	l2662
  7533  02EF                     l2660:
  7534                           
  7535                           ;i2c_master.c: 236: else;i2c_master.c: 237: {;i2c_master.c: 238: I2C_Status.state = I2C_
      +                          SEND_ADR_WRITE;
  7536  02EF  3002               	movlw	2
  7537  02F0  00F7               	movwf	??_I2C_MasterOperation
  7538  02F1  0877               	movf	??_I2C_MasterOperation,w
  7539  02F2  00BA               	movwf	_I2C_Status+26
  7540  02F3                     l2662:
  7541                           
  7542                           ;i2c_master.c: 239: };i2c_master.c: 240: I2C_MasterStart();
  7543  02F3  3181  2107  3182   	fcall	_I2C_MasterStart
  7544  02F6                     l2664:
  7545                           
  7546                           ;i2c_master.c: 241: I2C_Poller();
  7547  02F6  3181  21B9  3182   	fcall	_I2C_Poller
  7548  02F9                     l2666:
  7549                           
  7550                           ;i2c_master.c: 242: };i2c_master.c: 243: return returnValue;
  7551  02F9  0879               	movf	I2C_MasterOperation@returnValue,w
  7552  02FA                     l419:
  7553  02FA  0008               	return
  7554  02FB                     __end_of_I2C_MasterOperation:
  7555                           
  7556                           	psect	text14
  7557  01B9                     __ptext14:	
  7558 ;; *************** function _I2C_Poller *****************
  7559 ;; Defined at:
  7560 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;		None
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;		None
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  1    wreg      void 
  7567 ;; Registers used:
  7568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7578 ;;Total ram usage:        0 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; Hardware stack levels required when called:    5
  7581 ;; This function calls:
  7582 ;;		_I2C_MasterFsm
  7583 ;;		_I2C_MasterWaitForEvent
  7584 ;; This function is called by:
  7585 ;;		_I2C_MasterOperation
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           
  7590                           ;psect for function _I2C_Poller
  7591  01B9                     _I2C_Poller:
  7592  01B9                     l2626:	
  7593                           ;incstack = 0
  7594                           ; Regs used in _I2C_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7595                           
  7596                           
  7597                           ;i2c_master.c: 314: while(I2C_Status.busy)
  7598  01B9  29C0               	goto	l2632
  7599  01BA                     l2628:
  7600                           
  7601                           ;i2c_master.c: 315: {;i2c_master.c: 316: I2C_MasterWaitForEvent();
  7602  01BA  3181  2162  3181   	fcall	_I2C_MasterWaitForEvent
  7603  01BD                     l2630:
  7604                           
  7605                           ;i2c_master.c: 317: I2C_MasterFsm();
  7606  01BD  3183  23D4  3181   	fcall	_I2C_MasterFsm
  7607  01C0                     l2632:
  7608  01C0  0020               	movlb	0	; select bank0
  7609  01C1  18BC               	btfsc	_I2C_Status+28,1
  7610  01C2  29C4               	goto	u871
  7611  01C3  29C5               	goto	u870
  7612  01C4                     u871:
  7613  01C4  29BA               	goto	l2628
  7614  01C5                     u870:
  7615  01C5                     l458:
  7616  01C5  0008               	return
  7617  01C6                     __end_of_I2C_Poller:
  7618                           
  7619                           	psect	text15
  7620  0162                     __ptext15:	
  7621 ;; *************** function _I2C_MasterWaitForEvent *****************
  7622 ;; Defined at:
  7623 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;		None
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;		None
  7628 ;; Return value:  Size  Location     Type
  7629 ;;                  1    wreg      void 
  7630 ;; Registers used:
  7631 ;;		None
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7641 ;;Total ram usage:        0 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; This function calls:
  7644 ;;		Nothing
  7645 ;; This function is called by:
  7646 ;;		_I2C_Poller
  7647 ;; This function uses a non-reentrant model
  7648 ;;
  7649                           
  7650                           
  7651                           ;psect for function _I2C_MasterWaitForEvent
  7652  0162                     _I2C_MasterWaitForEvent:
  7653  0162                     l631:	
  7654                           ;incstack = 0
  7655                           ; Regs used in _I2C_MasterWaitForEvent: []
  7656                           ;i2c_master.c: 652: while(1)
  7657                           
  7658                           
  7659                           ;i2c_master.c: 653: {;i2c_master.c: 654: if(PIR1bits.SSP1IF)
  7660  0162  0020               	movlb	0	; select bank0
  7661  0163  1D91               	btfss	17,3	;volatile
  7662  0164  2966               	goto	u841
  7663  0165  2967               	goto	u840
  7664  0166                     u841:
  7665  0166  2962               	goto	l631
  7666  0167                     u840:
  7667  0167                     l635:
  7668  0167  0008               	return
  7669  0168                     __end_of_I2C_MasterWaitForEvent:
  7670                           
  7671                           	psect	text16
  7672  03D4                     __ptext16:	
  7673 ;; *************** function _I2C_MasterFsm *****************
  7674 ;; Defined at:
  7675 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  7676 ;; Parameters:    Size  Location     Type
  7677 ;;		None
  7678 ;; Auto vars:     Size  Location     Type
  7679 ;;		None
  7680 ;; Return value:  Size  Location     Type
  7681 ;;                  1    wreg      void 
  7682 ;; Registers used:
  7683 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7684 ;; Tracked objects:
  7685 ;;		On entry : 0/0
  7686 ;;		On exit  : 0/0
  7687 ;;		Unchanged: 0/0
  7688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7691 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7692 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7693 ;;Total ram usage:        3 bytes
  7694 ;; Hardware stack levels used:    1
  7695 ;; Hardware stack levels required when called:    4
  7696 ;; This function calls:
  7697 ;;		_I2C_DO_ADDRESS_NACK
  7698 ;;		_I2C_DO_IDLE
  7699 ;;		_I2C_DO_RCEN
  7700 ;;		_I2C_DO_RESET
  7701 ;;		_I2C_DO_RX
  7702 ;;		_I2C_DO_RX_ACK
  7703 ;;		_I2C_DO_RX_NACK_RESTART
  7704 ;;		_I2C_DO_RX_NACK_STOP
  7705 ;;		_I2C_DO_SEND_ADR_READ
  7706 ;;		_I2C_DO_SEND_ADR_WRITE
  7707 ;;		_I2C_DO_SEND_RESTART
  7708 ;;		_I2C_DO_SEND_RESTART_READ
  7709 ;;		_I2C_DO_SEND_RESTART_WRITE
  7710 ;;		_I2C_DO_SEND_STOP
  7711 ;;		_I2C_DO_TX
  7712 ;;		_I2C_DO_TX_EMPTY
  7713 ;;		_I2C_MasterClearIrq
  7714 ;;		_I2C_MasterIsNack
  7715 ;; This function is called by:
  7716 ;;		_I2C_Poller
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           
  7721                           ;psect for function _I2C_MasterFsm
  7722  03D4                     _I2C_MasterFsm:
  7723  03D4                     l2614:	
  7724                           ;incstack = 0
  7725                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7726                           
  7727                           
  7728                           ;i2c_master.c: 323: I2C_MasterClearIrq();
  7729  03D4  3180  20FE  3183   	fcall	_I2C_MasterClearIrq
  7730  03D7                     l2616:
  7731                           
  7732                           ;i2c_master.c: 325: if(I2C_Status.addressNackCheck && I2C_MasterIsNack())
  7733  03D7  0020               	movlb	0	; select bank0
  7734  03D8  1C3C               	btfss	_I2C_Status+28,0
  7735  03D9  2BDB               	goto	u851
  7736  03DA  2BDC               	goto	u850
  7737  03DB                     u851:
  7738  03DB  2BE9               	goto	l2622
  7739  03DC                     u850:
  7740  03DC                     l2618:
  7741  03DC  3181  215C  3183   	fcall	_I2C_MasterIsNack
  7742  03DF  3A00               	xorlw	0
  7743  03E0  1903               	skipnz
  7744  03E1  2BE3               	goto	u861
  7745  03E2  2BE4               	goto	u860
  7746  03E3                     u861:
  7747  03E3  2BE9               	goto	l2622
  7748  03E4                     u860:
  7749  03E4                     l2620:
  7750                           
  7751                           ;i2c_master.c: 326: {;i2c_master.c: 327: I2C_Status.state = I2C_ADDRESS_NACK;
  7752  03E4  300F               	movlw	15
  7753  03E5  00F4               	movwf	??_I2C_MasterFsm
  7754  03E6  0874               	movf	??_I2C_MasterFsm,w
  7755  03E7  0020               	movlb	0	; select bank0
  7756  03E8  00BA               	movwf	_I2C_Status+26
  7757  03E9                     l2622:
  7758                           
  7759                           ;i2c_master.c: 328: };i2c_master.c: 329: I2C_Status.state = i2c_fsmStateTable[I2C_Status
      +                          .state]();
  7760  03E9  0020               	movlb	0	; select bank0
  7761  03EA  083A               	movf	_I2C_Status+26,w
  7762  03EB  00F4               	movwf	??_I2C_MasterFsm
  7763  03EC  01F5               	clrf	??_I2C_MasterFsm+1
  7764  03ED  35F4               	lslf	??_I2C_MasterFsm,f
  7765  03EE  0DF5               	rlf	??_I2C_MasterFsm+1,f
  7766  03EF  3038               	movlw	low (_i2c_fsmStateTable| (0+32768))
  7767  03F0  0774               	addwf	??_I2C_MasterFsm,w
  7768  03F1  0084               	movwf	4
  7769  03F2  3088               	movlw	high (_i2c_fsmStateTable| (0+32768))
  7770  03F3  3D75               	addwfc	??_I2C_MasterFsm+1,w
  7771  03F4  0085               	movwf	5
  7772  03F5  3F01               	moviw [1]fsr0
  7773  03F6  008A               	movwf	10
  7774  03F7  3F00               	moviw [0]fsr0
  7775  03F8  000A               	callw
  7776  03F9  3183               	pagesel	$
  7777  03FA  00F6               	movwf	??_I2C_MasterFsm+2
  7778  03FB  0876               	movf	??_I2C_MasterFsm+2,w
  7779  03FC  0020               	movlb	0	; select bank0
  7780  03FD  00BA               	movwf	_I2C_Status+26
  7781  03FE                     l462:
  7782  03FE  0008               	return
  7783  03FF                     __end_of_I2C_MasterFsm:
  7784                           
  7785                           	psect	text17
  7786  033A                     __ptext17:	
  7787 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  7788 ;; Defined at:
  7789 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;		None
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;		None
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  1    wreg      enum E11990
  7796 ;; Registers used:
  7797 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7798 ;; Tracked objects:
  7799 ;;		On entry : 0/0
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7803 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7805 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7806 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7807 ;;Total ram usage:        1 bytes
  7808 ;; Hardware stack levels used:    1
  7809 ;; Hardware stack levels required when called:    3
  7810 ;; This function calls:
  7811 ;;		Absolute function
  7812 ;;		_I2C_CallbackReturnReset
  7813 ;;		_I2C_CallbackReturnStop
  7814 ;;		_I2C_DO_SEND_RESTART
  7815 ;;		_I2C_DO_SEND_STOP
  7816 ;;		_rd1RegCompleteHandler
  7817 ;;		_rd2RegCompleteHandler
  7818 ;;		_rdBlkRegCompleteHandler
  7819 ;;		_wr1RegCompleteHandler
  7820 ;;		_wr2RegCompleteHandler
  7821 ;; This function is called by:
  7822 ;;		_I2C_MasterFsm
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           
  7827                           ;psect for function _I2C_DO_ADDRESS_NACK
  7828  033A                     _I2C_DO_ADDRESS_NACK:
  7829  033A                     l2596:	
  7830                           ;incstack = 0
  7831                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7832                           
  7833                           
  7834                           ;i2c_master.c: 502: I2C_Status.addressNackCheck = 0;
  7835  033A  0020               	movlb	0	; select bank0
  7836  033B  103C               	bcf	_I2C_Status+28,0
  7837  033C                     l2598:
  7838                           
  7839                           ;i2c_master.c: 503: I2C_Status.error = I2C_FAIL;
  7840  033C  3002               	movlw	2
  7841  033D  00F0               	movwf	??_I2C_DO_ADDRESS_NACK
  7842  033E  0870               	movf	??_I2C_DO_ADDRESS_NACK,w
  7843  033F  00BB               	movwf	_I2C_Status+27
  7844                           
  7845                           ;i2c_master.c: 504: switch(I2C_Status.callbackTable[I2C_ADDR_NACK](I2C_Status.callbackPa
      +                          yload[I2C_ADDR_NACK]))
  7846  0340  2B49               	goto	l2610
  7847  0341                     l2600:
  7848                           
  7849                           ;i2c_master.c: 507: case I2C_RESTART_WRITE:;i2c_master.c: 508: return I2C_DO_SEND_RESTAR
      +                          T();
  7850  0341  3181  2139  3183   	fcall	_I2C_DO_SEND_RESTART
  7851  0344  2B5D               	goto	l553
  7852  0345                     l2604:
  7853                           
  7854                           ;i2c_master.c: 510: return I2C_DO_SEND_STOP();
  7855  0345  3181  213E  3183   	fcall	_I2C_DO_SEND_STOP
  7856  0348  2B5D               	goto	l553
  7857  0349                     l2610:
  7858  0349  082E               	movf	low ((_I2C_Status| 0+14)),w
  7859  034A  00F0               	movwf	??_I2C_DO_ADDRESS_NACK
  7860  034B  0870               	movf	??_I2C_DO_ADDRESS_NACK,w
  7861  034C  00F9               	movwf	rdBlkRegCompleteHandler@ptr
  7862  034D  3004               	movlw	4
  7863  034E  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  7864  034F  0086               	movwf	6
  7865  0350  0187               	clrf	7
  7866  0351  3F41               	moviw [1]fsr1
  7867  0352  008A               	movwf	10
  7868  0353  3F40               	moviw [0]fsr1
  7869  0354  000A               	callw
  7870  0355  3183               	pagesel	$
  7871                           
  7872                           ; Switch size 1, requested type "simple"
  7873                           ; Number of cases is 2, Range of values is 2 to 3
  7874                           ; switch strategies available:
  7875                           ; Name         Instructions Cycles
  7876                           ; simple_byte            7     4 (average)
  7877                           ; direct_byte           13     9 (fixed)
  7878                           ; jumptable            263     9 (fixed)
  7879                           ;	Chosen strategy is simple_byte
  7880  0356  3A02               	xorlw	2	; case 2
  7881  0357  1903               	skipnz
  7882  0358  2B41               	goto	l2600
  7883  0359  3A01               	xorlw	1	; case 3
  7884  035A  1903               	skipnz
  7885  035B  2B41               	goto	l2600
  7886  035C  2B45               	goto	l2604
  7887  035D                     l553:
  7888  035D  0008               	return
  7889  035E                     __end_of_I2C_DO_ADDRESS_NACK:
  7890                           
  7891                           	psect	text18
  7892  0152                     __ptext18:	
  7893 ;; *************** function _I2C_DO_RESET *****************
  7894 ;; Defined at:
  7895 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;		None
  7898 ;; Auto vars:     Size  Location     Type
  7899 ;;		None
  7900 ;; Return value:  Size  Location     Type
  7901 ;;                  1    wreg      enum E11990
  7902 ;; Registers used:
  7903 ;;		wreg, status,2
  7904 ;; Tracked objects:
  7905 ;;		On entry : 0/0
  7906 ;;		On exit  : 0/0
  7907 ;;		Unchanged: 0/0
  7908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7913 ;;Total ram usage:        0 bytes
  7914 ;; Hardware stack levels used:    1
  7915 ;; This function calls:
  7916 ;;		Nothing
  7917 ;; This function is called by:
  7918 ;;		_I2C_MasterFsm
  7919 ;; This function uses a non-reentrant model
  7920 ;;
  7921                           
  7922                           
  7923                           ;psect for function _I2C_DO_RESET
  7924  0152                     _I2C_DO_RESET:
  7925  0152                     l2588:	
  7926                           ;incstack = 0
  7927                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  7928                           
  7929                           
  7930                           ;i2c_master.c: 496: I2C_Status.busy = 0;
  7931  0152  0020               	movlb	0	; select bank0
  7932  0153  10BC               	bcf	_I2C_Status+28,1
  7933  0154                     l2590:
  7934                           
  7935                           ;i2c_master.c: 497: I2C_Status.error = I2C_NOERR;
  7936  0154  01BB               	clrf	_I2C_Status+27
  7937  0155                     l2592:
  7938                           
  7939                           ;i2c_master.c: 498: return I2C_RESET;
  7940  0155  300E               	movlw	14
  7941  0156                     l547:
  7942  0156  0008               	return
  7943  0157                     __end_of_I2C_DO_RESET:
  7944                           
  7945                           	psect	text19
  7946  014D                     __ptext19:	
  7947 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  7948 ;; Defined at:
  7949 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;		None
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;		None
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      enum E11990
  7956 ;; Registers used:
  7957 ;;		wreg, status,2, status,0, pclath, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  7963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  7967 ;;Total ram usage:        0 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:    1
  7970 ;; This function calls:
  7971 ;;		_I2C_MasterSendNack
  7972 ;; This function is called by:
  7973 ;;		_I2C_DO_RX
  7974 ;;		_I2C_MasterFsm
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           
  7979                           ;psect for function _I2C_DO_RX_NACK_RESTART
  7980  014D                     _I2C_DO_RX_NACK_RESTART:
  7981  014D                     l2404:	
  7982                           ;incstack = 0
  7983                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  7984                           
  7985                           
  7986                           ;i2c_master.c: 490: I2C_MasterSendNack();
  7987  014D  3181  211D  3181   	fcall	_I2C_MasterSendNack
  7988  0150                     l2406:
  7989                           
  7990                           ;i2c_master.c: 491: return I2C_SEND_RESTART;
  7991  0150  3009               	movlw	9
  7992  0151                     l544:
  7993  0151  0008               	return
  7994  0152                     __end_of_I2C_DO_RX_NACK_RESTART:
  7995                           
  7996                           	psect	text20
  7997  0148                     __ptext20:	
  7998 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  7999 ;; Defined at:
  8000 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  8001 ;; Parameters:    Size  Location     Type
  8002 ;;		None
  8003 ;; Auto vars:     Size  Location     Type
  8004 ;;		None
  8005 ;; Return value:  Size  Location     Type
  8006 ;;                  1    wreg      enum E11990
  8007 ;; Registers used:
  8008 ;;		wreg, status,2, status,0, pclath, cstack
  8009 ;; Tracked objects:
  8010 ;;		On entry : 0/0
  8011 ;;		On exit  : 0/0
  8012 ;;		Unchanged: 0/0
  8013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8017 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8018 ;;Total ram usage:        0 bytes
  8019 ;; Hardware stack levels used:    1
  8020 ;; Hardware stack levels required when called:    1
  8021 ;; This function calls:
  8022 ;;		_I2C_MasterSendNack
  8023 ;; This function is called by:
  8024 ;;		_I2C_DO_RX
  8025 ;;		_I2C_MasterFsm
  8026 ;; This function uses a non-reentrant model
  8027 ;;
  8028                           
  8029                           
  8030                           ;psect for function _I2C_DO_RX_NACK_STOP
  8031  0148                     _I2C_DO_RX_NACK_STOP:
  8032  0148                     l2410:	
  8033                           ;incstack = 0
  8034                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  8035                           
  8036                           
  8037                           ;i2c_master.c: 484: I2C_MasterSendNack();
  8038  0148  3181  211D  3181   	fcall	_I2C_MasterSendNack
  8039  014B                     l2412:
  8040                           
  8041                           ;i2c_master.c: 485: return I2C_SEND_STOP;
  8042  014B  300A               	movlw	10
  8043  014C                     l541:
  8044  014C  0008               	return
  8045  014D                     __end_of_I2C_DO_RX_NACK_STOP:
  8046                           
  8047                           	psect	text21
  8048  0143                     __ptext21:	
  8049 ;; *************** function _I2C_DO_RX_ACK *****************
  8050 ;; Defined at:
  8051 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;		None
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;		None
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  1    wreg      enum E11990
  8058 ;; Registers used:
  8059 ;;		wreg, status,2, status,0, pclath, cstack
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8069 ;;Total ram usage:        0 bytes
  8070 ;; Hardware stack levels used:    1
  8071 ;; Hardware stack levels required when called:    1
  8072 ;; This function calls:
  8073 ;;		_I2C_MasterSendAck
  8074 ;; This function is called by:
  8075 ;;		_I2C_MasterFsm
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           
  8080                           ;psect for function _I2C_DO_RX_ACK
  8081  0143                     _I2C_DO_RX_ACK:
  8082  0143                     l2582:	
  8083                           ;incstack = 0
  8084                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  8085                           
  8086                           
  8087                           ;i2c_master.c: 477: I2C_MasterSendAck();
  8088  0143  3181  2121  3181   	fcall	_I2C_MasterSendAck
  8089  0146                     l2584:
  8090                           
  8091                           ;i2c_master.c: 478: return I2C_RCEN;
  8092  0146  3005               	movlw	5
  8093  0147                     l538:
  8094  0147  0008               	return
  8095  0148                     __end_of_I2C_DO_RX_ACK:
  8096                           
  8097                           	psect	text22
  8098  013E                     __ptext22:	
  8099 ;; *************** function _I2C_DO_SEND_STOP *****************
  8100 ;; Defined at:
  8101 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  8102 ;; Parameters:    Size  Location     Type
  8103 ;;		None
  8104 ;; Auto vars:     Size  Location     Type
  8105 ;;		None
  8106 ;; Return value:  Size  Location     Type
  8107 ;;                  1    wreg      enum E11990
  8108 ;; Registers used:
  8109 ;;		wreg, status,2, status,0, pclath, cstack
  8110 ;; Tracked objects:
  8111 ;;		On entry : 0/0
  8112 ;;		On exit  : 0/0
  8113 ;;		Unchanged: 0/0
  8114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8119 ;;Total ram usage:        0 bytes
  8120 ;; Hardware stack levels used:    1
  8121 ;; Hardware stack levels required when called:    1
  8122 ;; This function calls:
  8123 ;;		_I2C_MasterStop
  8124 ;; This function is called by:
  8125 ;;		_I2C_DO_TX
  8126 ;;		_I2C_DO_TX_EMPTY
  8127 ;;		_I2C_DO_ADDRESS_NACK
  8128 ;;		_I2C_MasterFsm
  8129 ;; This function uses a non-reentrant model
  8130 ;;
  8131                           
  8132                           
  8133                           ;psect for function _I2C_DO_SEND_STOP
  8134  013E                     _I2C_DO_SEND_STOP:
  8135  013E                     l2392:	
  8136                           ;incstack = 0
  8137                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  8138                           
  8139                           
  8140                           ;i2c_master.c: 471: I2C_MasterStop();
  8141  013E  3181  210D  3181   	fcall	_I2C_MasterStop
  8142  0141                     l2394:
  8143                           
  8144                           ;i2c_master.c: 472: return I2C_IDLE;
  8145  0141  3000               	movlw	0
  8146  0142                     l535:
  8147  0142  0008               	return
  8148  0143                     __end_of_I2C_DO_SEND_STOP:
  8149                           
  8150                           	psect	text23
  8151  0139                     __ptext23:	
  8152 ;; *************** function _I2C_DO_SEND_RESTART *****************
  8153 ;; Defined at:
  8154 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  8155 ;; Parameters:    Size  Location     Type
  8156 ;;		None
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;		None
  8159 ;; Return value:  Size  Location     Type
  8160 ;;                  1    wreg      enum E11990
  8161 ;; Registers used:
  8162 ;;		wreg, status,2, status,0, pclath, cstack
  8163 ;; Tracked objects:
  8164 ;;		On entry : 0/0
  8165 ;;		On exit  : 0/0
  8166 ;;		Unchanged: 0/0
  8167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8172 ;;Total ram usage:        0 bytes
  8173 ;; Hardware stack levels used:    1
  8174 ;; Hardware stack levels required when called:    1
  8175 ;; This function calls:
  8176 ;;		_I2C_MasterEnableRestart
  8177 ;; This function is called by:
  8178 ;;		_I2C_DO_TX_EMPTY
  8179 ;;		_I2C_DO_ADDRESS_NACK
  8180 ;;		_I2C_MasterFsm
  8181 ;; This function uses a non-reentrant model
  8182 ;;
  8183                           
  8184                           
  8185                           ;psect for function _I2C_DO_SEND_RESTART
  8186  0139                     _I2C_DO_SEND_RESTART:
  8187  0139                     l2418:	
  8188                           ;incstack = 0
  8189                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  8190                           
  8191                           
  8192                           ;i2c_master.c: 465: I2C_MasterEnableRestart();
  8193  0139  3181  210A  3181   	fcall	_I2C_MasterEnableRestart
  8194  013C                     l2420:
  8195                           
  8196                           ;i2c_master.c: 466: return I2C_SEND_ADR_READ;
  8197  013C  3001               	movlw	1
  8198  013D                     l532:
  8199  013D  0008               	return
  8200  013E                     __end_of_I2C_DO_SEND_RESTART:
  8201                           
  8202                           	psect	text24
  8203  0134                     __ptext24:	
  8204 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  8205 ;; Defined at:
  8206 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  8207 ;; Parameters:    Size  Location     Type
  8208 ;;		None
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;		None
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  1    wreg      enum E11990
  8213 ;; Registers used:
  8214 ;;		wreg, status,2, status,0, pclath, cstack
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8224 ;;Total ram usage:        0 bytes
  8225 ;; Hardware stack levels used:    1
  8226 ;; Hardware stack levels required when called:    1
  8227 ;; This function calls:
  8228 ;;		_I2C_MasterEnableRestart
  8229 ;; This function is called by:
  8230 ;;		_I2C_DO_TX
  8231 ;;		_I2C_MasterFsm
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           
  8235                           
  8236                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  8237  0134                     _I2C_DO_SEND_RESTART_WRITE:
  8238  0134                     l2386:	
  8239                           ;incstack = 0
  8240                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  8241                           
  8242                           
  8243                           ;i2c_master.c: 458: I2C_MasterEnableRestart();
  8244  0134  3181  210A  3181   	fcall	_I2C_MasterEnableRestart
  8245  0137                     l2388:
  8246                           
  8247                           ;i2c_master.c: 459: return I2C_SEND_ADR_WRITE;
  8248  0137  3002               	movlw	2
  8249  0138                     l529:
  8250  0138  0008               	return
  8251  0139                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  8252                           
  8253                           	psect	text25
  8254  012F                     __ptext25:	
  8255 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  8256 ;; Defined at:
  8257 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  8258 ;; Parameters:    Size  Location     Type
  8259 ;;		None
  8260 ;; Auto vars:     Size  Location     Type
  8261 ;;		None
  8262 ;; Return value:  Size  Location     Type
  8263 ;;                  1    wreg      enum E11990
  8264 ;; Registers used:
  8265 ;;		wreg, status,2, status,0, pclath, cstack
  8266 ;; Tracked objects:
  8267 ;;		On entry : 0/0
  8268 ;;		On exit  : 0/0
  8269 ;;		Unchanged: 0/0
  8270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8275 ;;Total ram usage:        0 bytes
  8276 ;; Hardware stack levels used:    1
  8277 ;; Hardware stack levels required when called:    1
  8278 ;; This function calls:
  8279 ;;		_I2C_MasterEnableRestart
  8280 ;; This function is called by:
  8281 ;;		_I2C_DO_TX
  8282 ;;		_I2C_MasterFsm
  8283 ;; This function uses a non-reentrant model
  8284 ;;
  8285                           
  8286                           
  8287                           ;psect for function _I2C_DO_SEND_RESTART_READ
  8288  012F                     _I2C_DO_SEND_RESTART_READ:
  8289  012F                     l2380:	
  8290                           ;incstack = 0
  8291                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  8292                           
  8293                           
  8294                           ;i2c_master.c: 452: I2C_MasterEnableRestart();
  8295  012F  3181  210A  3181   	fcall	_I2C_MasterEnableRestart
  8296  0132                     l2382:
  8297                           
  8298                           ;i2c_master.c: 453: return I2C_SEND_ADR_READ;
  8299  0132  3001               	movlw	1
  8300  0133                     l526:
  8301  0133  0008               	return
  8302  0134                     __end_of_I2C_DO_SEND_RESTART_READ:
  8303                           
  8304                           	psect	text26
  8305  0174                     __ptext26:	
  8306 ;; *************** function _I2C_DO_RCEN *****************
  8307 ;; Defined at:
  8308 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;		None
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;		None
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      enum E11990
  8315 ;; Registers used:
  8316 ;;		wreg, status,2, status,0, pclath, cstack
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8326 ;;Total ram usage:        0 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; Hardware stack levels required when called:    1
  8329 ;; This function calls:
  8330 ;;		_I2C_MasterStartRx
  8331 ;; This function is called by:
  8332 ;;		_I2C_MasterFsm
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           
  8337                           ;psect for function _I2C_DO_RCEN
  8338  0174                     _I2C_DO_RCEN:
  8339  0174                     l2554:	
  8340                           ;incstack = 0
  8341                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  8342                           
  8343                           
  8344                           ;i2c_master.c: 404: I2C_Status.addressNackCheck = 0;
  8345  0174  0020               	movlb	0	; select bank0
  8346  0175  103C               	bcf	_I2C_Status+28,0
  8347  0176                     l2556:
  8348                           
  8349                           ;i2c_master.c: 405: I2C_MasterStartRx();
  8350  0176  3181  2110  3181   	fcall	_I2C_MasterStartRx
  8351  0179                     l2558:
  8352                           
  8353                           ;i2c_master.c: 406: return I2C_RX;
  8354  0179  3004               	movlw	4
  8355  017A                     l502:
  8356  017A  0008               	return
  8357  017B                     __end_of_I2C_DO_RCEN:
  8358                           
  8359                           	psect	text27
  8360  04E3                     __ptext27:	
  8361 ;; *************** function _I2C_DO_RX *****************
  8362 ;; Defined at:
  8363 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;		None
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;		None
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  1    wreg      enum E11990
  8370 ;; Registers used:
  8371 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8379 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8380 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8381 ;;Total ram usage:        1 bytes
  8382 ;; Hardware stack levels used:    1
  8383 ;; Hardware stack levels required when called:    3
  8384 ;; This function calls:
  8385 ;;		Absolute function
  8386 ;;		_I2C_CallbackReturnReset
  8387 ;;		_I2C_CallbackReturnStop
  8388 ;;		_I2C_DO_RX_NACK_RESTART
  8389 ;;		_I2C_DO_RX_NACK_STOP
  8390 ;;		_I2C_MasterGetRxData
  8391 ;;		_I2C_MasterSendAck
  8392 ;;		_rd1RegCompleteHandler
  8393 ;;		_rd2RegCompleteHandler
  8394 ;;		_rdBlkRegCompleteHandler
  8395 ;;		_wr1RegCompleteHandler
  8396 ;;		_wr2RegCompleteHandler
  8397 ;; This function is called by:
  8398 ;;		_I2C_MasterFsm
  8399 ;; This function uses a non-reentrant model
  8400 ;;
  8401                           
  8402                           
  8403                           ;psect for function _I2C_DO_RX
  8404  04E3                     _I2C_DO_RX:
  8405  04E3                     l2528:	
  8406                           ;incstack = 0
  8407                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8408                           
  8409                           
  8410                           ;i2c_master.c: 380: *I2C_Status.data_ptr++ = I2C_MasterGetRxData();
  8411  04E3  3181  2113  3184   	fcall	_I2C_MasterGetRxData
  8412  04E6  00F0               	movwf	??_I2C_DO_RX
  8413  04E7  0020               	movlb	0	; select bank0
  8414  04E8  0837               	movf	low ((_I2C_Status| 0+23)),w
  8415  04E9  0086               	movwf	6
  8416  04EA  0187               	clrf	7
  8417  04EB  0870               	movf	??_I2C_DO_RX,w
  8418  04EC  0081               	movwf	1
  8419  04ED                     l2530:
  8420  04ED  3001               	movlw	1
  8421  04EE  00F0               	movwf	??_I2C_DO_RX
  8422  04EF  0870               	movf	??_I2C_DO_RX,w
  8423  04F0  07B7               	addwf	low ((_I2C_Status| 0+23)),f
  8424  04F1                     l2532:
  8425                           
  8426                           ;i2c_master.c: 381: if(--I2C_Status.data_length)
  8427  04F1  3001               	movlw	1
  8428  04F2  02B8               	subwf	_I2C_Status+24,f
  8429  04F3  3000               	movlw	0
  8430  04F4  3BB9               	subwfb	_I2C_Status+25,f
  8431  04F5  0838               	movf	_I2C_Status+24,w
  8432  04F6  0439               	iorwf	_I2C_Status+25,w
  8433  04F7  1903               	btfsc	3,2
  8434  04F8  2CFA               	goto	u831
  8435  04F9  2CFB               	goto	u830
  8436  04FA                     u831:
  8437  04FA  2D00               	goto	l490
  8438  04FB                     u830:
  8439  04FB                     l2534:
  8440                           
  8441                           ;i2c_master.c: 382: {;i2c_master.c: 383: I2C_MasterSendAck();
  8442  04FB  3181  2121  3184   	fcall	_I2C_MasterSendAck
  8443  04FE                     l2536:
  8444                           
  8445                           ;i2c_master.c: 384: return I2C_RCEN;
  8446  04FE  3005               	movlw	5
  8447  04FF  2D20               	goto	l491
  8448  0500                     l490:
  8449                           
  8450                           ;i2c_master.c: 386: else;i2c_master.c: 387: {;i2c_master.c: 388: I2C_Status.bufferFree =
      +                           1;
  8451  0500  15BC               	bsf	_I2C_Status+28,3
  8452                           
  8453                           ;i2c_master.c: 389: switch(I2C_Status.callbackTable[I2C_DATA_COMPLETE](I2C_Status.callba
      +                          ckPayload[I2C_DATA_COMPLETE]))
  8454  0501  2D0A               	goto	l2552
  8455  0502                     l2542:
  8456                           
  8457                           ;i2c_master.c: 392: case I2C_RESTART_READ:;i2c_master.c: 393: return I2C_DO_RX_NACK_REST
      +                          ART();
  8458  0502  3181  214D  3184   	fcall	_I2C_DO_RX_NACK_RESTART
  8459  0505  2D20               	goto	l491
  8460  0506                     l2546:
  8461                           
  8462                           ;i2c_master.c: 396: case I2C_STOP:;i2c_master.c: 397: return I2C_DO_RX_NACK_STOP();
  8463  0506  3181  2148  3184   	fcall	_I2C_DO_RX_NACK_STOP
  8464  0509  2D20               	goto	l491
  8465  050A                     l2552:
  8466  050A  082C               	movf	low ((_I2C_Status| 0+12)),w
  8467  050B  00F0               	movwf	??_I2C_DO_RX
  8468  050C  0870               	movf	??_I2C_DO_RX,w
  8469  050D  00F9               	movwf	rdBlkRegCompleteHandler@ptr
  8470  050E  0821               	movf	_I2C_Status+1,w
  8471  050F  008A               	movwf	10
  8472  0510  0820               	movf	_I2C_Status,w
  8473  0511  000A               	callw
  8474  0512  3184               	pagesel	$
  8475                           
  8476                           ; Switch size 1, requested type "simple"
  8477                           ; Number of cases is 4, Range of values is 1 to 4
  8478                           ; switch strategies available:
  8479                           ; Name         Instructions Cycles
  8480                           ; simple_byte           13     7 (average)
  8481                           ; direct_byte           17     9 (fixed)
  8482                           ; jumptable            263     9 (fixed)
  8483                           ;	Chosen strategy is simple_byte
  8484  0513  3A01               	xorlw	1	; case 1
  8485  0514  1903               	skipnz
  8486  0515  2D06               	goto	l2546
  8487  0516  3A03               	xorlw	3	; case 2
  8488  0517  1903               	skipnz
  8489  0518  2D02               	goto	l2542
  8490  0519  3A01               	xorlw	1	; case 3
  8491  051A  1903               	skipnz
  8492  051B  2D02               	goto	l2542
  8493  051C  3A07               	xorlw	7	; case 4
  8494  051D  1903               	skipnz
  8495  051E  2D06               	goto	l2546
  8496  051F  2D06               	goto	l2546
  8497  0520                     l491:
  8498  0520  0008               	return
  8499  0521                     __end_of_I2C_DO_RX:
  8500                           
  8501                           	psect	text28
  8502  05A2                     __ptext28:	
  8503 ;; *************** function _I2C_DO_TX *****************
  8504 ;; Defined at:
  8505 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
  8506 ;; Parameters:    Size  Location     Type
  8507 ;;		None
  8508 ;; Auto vars:     Size  Location     Type
  8509 ;;		None
  8510 ;; Return value:  Size  Location     Type
  8511 ;;                  1    wreg      enum E11990
  8512 ;; Registers used:
  8513 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8514 ;; Tracked objects:
  8515 ;;		On entry : 0/0
  8516 ;;		On exit  : 0/0
  8517 ;;		Unchanged: 0/0
  8518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8520 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8521 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8522 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8523 ;;Total ram usage:        3 bytes
  8524 ;; Hardware stack levels used:    1
  8525 ;; Hardware stack levels required when called:    3
  8526 ;; This function calls:
  8527 ;;		Absolute function
  8528 ;;		_I2C_CallbackReturnReset
  8529 ;;		_I2C_CallbackReturnStop
  8530 ;;		_I2C_DO_SEND_RESTART_READ
  8531 ;;		_I2C_DO_SEND_RESTART_WRITE
  8532 ;;		_I2C_DO_SEND_STOP
  8533 ;;		_I2C_MasterIsNack
  8534 ;;		_I2C_MasterSendTxData
  8535 ;;		_rd1RegCompleteHandler
  8536 ;;		_rd2RegCompleteHandler
  8537 ;;		_rdBlkRegCompleteHandler
  8538 ;;		_wr1RegCompleteHandler
  8539 ;;		_wr2RegCompleteHandler
  8540 ;; This function is called by:
  8541 ;;		_I2C_MasterFsm
  8542 ;; This function uses a non-reentrant model
  8543 ;;
  8544                           
  8545                           
  8546                           ;psect for function _I2C_DO_TX
  8547  05A2                     _I2C_DO_TX:
  8548  05A2                     l2498:	
  8549                           ;incstack = 0
  8550                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8551                           
  8552                           
  8553                           ;i2c_master.c: 356: if(I2C_MasterIsNack())
  8554  05A2  3181  215C  3185   	fcall	_I2C_MasterIsNack
  8555  05A5  3A00               	xorlw	0
  8556  05A6  1903               	skipnz
  8557  05A7  2DA9               	goto	u811
  8558  05A8  2DAA               	goto	u810
  8559  05A9                     u811:
  8560  05A9  2DD2               	goto	l474
  8561  05AA                     u810:
  8562  05AA  2DB7               	goto	l2516
  8563  05AB                     l2502:
  8564                           
  8565                           ;i2c_master.c: 361: return I2C_DO_SEND_RESTART_READ();
  8566  05AB  3181  212F  3185   	fcall	_I2C_DO_SEND_RESTART_READ
  8567  05AE  2DF5               	goto	l477
  8568  05AF                     l2506:
  8569                           
  8570                           ;i2c_master.c: 363: return I2C_DO_SEND_RESTART_WRITE();
  8571  05AF  3181  2134  3185   	fcall	_I2C_DO_SEND_RESTART_WRITE
  8572  05B2  2DF5               	goto	l477
  8573  05B3                     l2510:
  8574                           
  8575                           ;i2c_master.c: 366: case I2C_STOP:;i2c_master.c: 367: return I2C_DO_SEND_STOP();
  8576  05B3  3181  213E  3185   	fcall	_I2C_DO_SEND_STOP
  8577  05B6  2DF5               	goto	l477
  8578  05B7                     l2516:
  8579  05B7  0020               	movlb	0	; select bank0
  8580  05B8  082F               	movf	low ((_I2C_Status| 0+15)),w
  8581  05B9  00F1               	movwf	??_I2C_DO_TX
  8582  05BA  0871               	movf	??_I2C_DO_TX,w
  8583  05BB  00F9               	movwf	rdBlkRegCompleteHandler@ptr
  8584  05BC  3006               	movlw	6
  8585  05BD  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  8586  05BE  0086               	movwf	6
  8587  05BF  0187               	clrf	7
  8588  05C0  3F41               	moviw [1]fsr1
  8589  05C1  008A               	movwf	10
  8590  05C2  3F40               	moviw [0]fsr1
  8591  05C3  000A               	callw
  8592  05C4  3185               	pagesel	$
  8593                           
  8594                           ; Switch size 1, requested type "simple"
  8595                           ; Number of cases is 4, Range of values is 1 to 4
  8596                           ; switch strategies available:
  8597                           ; Name         Instructions Cycles
  8598                           ; simple_byte           13     7 (average)
  8599                           ; direct_byte           17     9 (fixed)
  8600                           ; jumptable            263     9 (fixed)
  8601                           ;	Chosen strategy is simple_byte
  8602  05C5  3A01               	xorlw	1	; case 1
  8603  05C6  1903               	skipnz
  8604  05C7  2DB3               	goto	l2510
  8605  05C8  3A03               	xorlw	3	; case 2
  8606  05C9  1903               	skipnz
  8607  05CA  2DAB               	goto	l2502
  8608  05CB  3A01               	xorlw	1	; case 3
  8609  05CC  1903               	skipnz
  8610  05CD  2DAF               	goto	l2506
  8611  05CE  3A07               	xorlw	7	; case 4
  8612  05CF  1903               	skipnz
  8613  05D0  2DB3               	goto	l2510
  8614  05D1  2DB3               	goto	l2510
  8615  05D2                     l474:
  8616                           
  8617                           ;i2c_master.c: 370: else;i2c_master.c: 371: {;i2c_master.c: 372: I2C_Status.addressNackC
      +                          heck = 0;
  8618  05D2  0020               	movlb	0	; select bank0
  8619  05D3  103C               	bcf	_I2C_Status+28,0
  8620  05D4                     l2518:
  8621                           
  8622                           ;i2c_master.c: 373: I2C_MasterSendTxData(*I2C_Status.data_ptr++);
  8623  05D4  3017               	movlw	23
  8624  05D5  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  8625  05D6  0086               	movwf	6
  8626  05D7  0187               	clrf	7
  8627  05D8  3F40               	moviw [0]fsr1
  8628  05D9  0084               	movwf	4
  8629  05DA  0185               	clrf	5
  8630  05DB  0A81               	incf	1,f
  8631  05DC  0800               	movf	0,w
  8632  05DD  3181  2125  3185   	fcall	_I2C_MasterSendTxData
  8633  05E0                     l2520:
  8634                           
  8635                           ;i2c_master.c: 374: return (--I2C_Status.data_length)?I2C_TX:I2C_TX_EMPTY;
  8636  05E0  3001               	movlw	1
  8637  05E1  0020               	movlb	0	; select bank0
  8638  05E2  02B8               	subwf	_I2C_Status+24,f
  8639  05E3  3000               	movlw	0
  8640  05E4  3BB9               	subwfb	_I2C_Status+25,f
  8641  05E5  0838               	movf	_I2C_Status+24,w
  8642  05E6  0439               	iorwf	_I2C_Status+25,w
  8643  05E7  1D03               	btfss	3,2
  8644  05E8  2DEA               	goto	u821
  8645  05E9  2DEB               	goto	u820
  8646  05EA                     u821:
  8647  05EA  2DF0               	goto	l2524
  8648  05EB                     u820:
  8649  05EB                     l2522:
  8650  05EB  3006               	movlw	6
  8651  05EC  00F2               	movwf	_I2C_DO_TX$1219
  8652  05ED  3000               	movlw	0
  8653  05EE  00F3               	movwf	_I2C_DO_TX$1219+1
  8654  05EF  2DF4               	goto	l487
  8655  05F0                     l2524:
  8656  05F0  3003               	movlw	3
  8657  05F1  00F2               	movwf	_I2C_DO_TX$1219
  8658  05F2  3000               	movlw	0
  8659  05F3  00F3               	movwf	_I2C_DO_TX$1219+1
  8660  05F4                     l487:
  8661  05F4  0872               	movf	_I2C_DO_TX$1219,w
  8662  05F5                     l477:
  8663  05F5  0008               	return
  8664  05F6                     __end_of_I2C_DO_TX:
  8665                           
  8666                           	psect	text29
  8667  017B                     __ptext29:	
  8668 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  8669 ;; Defined at:
  8670 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
  8671 ;; Parameters:    Size  Location     Type
  8672 ;;		None
  8673 ;; Auto vars:     Size  Location     Type
  8674 ;;		None
  8675 ;; Return value:  Size  Location     Type
  8676 ;;                  1    wreg      enum E11990
  8677 ;; Registers used:
  8678 ;;		wreg, status,2, status,0, pclath, cstack
  8679 ;; Tracked objects:
  8680 ;;		On entry : 0/0
  8681 ;;		On exit  : 0/0
  8682 ;;		Unchanged: 0/0
  8683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8688 ;;Total ram usage:        0 bytes
  8689 ;; Hardware stack levels used:    1
  8690 ;; Hardware stack levels required when called:    1
  8691 ;; This function calls:
  8692 ;;		_I2C_MasterSendTxData
  8693 ;; This function is called by:
  8694 ;;		_I2C_MasterFsm
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           
  8698                           
  8699                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  8700  017B                     _I2C_DO_SEND_ADR_WRITE:
  8701  017B                     l2490:	
  8702                           ;incstack = 0
  8703                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  8704                           
  8705                           
  8706                           ;i2c_master.c: 349: I2C_Status.addressNackCheck = 1;
  8707  017B  0020               	movlb	0	; select bank0
  8708  017C  143C               	bsf	_I2C_Status+28,0
  8709  017D                     l2492:
  8710                           
  8711                           ;i2c_master.c: 350: I2C_MasterSendTxData((uint8_t) (I2C_Status.address << 1));
  8712  017D  3536               	lslf	_I2C_Status+22,w
  8713  017E  3181  2125  3181   	fcall	_I2C_MasterSendTxData
  8714  0181                     l2494:
  8715                           
  8716                           ;i2c_master.c: 351: return I2C_TX;
  8717  0181  3003               	movlw	3
  8718  0182                     l471:
  8719  0182  0008               	return
  8720  0183                     __end_of_I2C_DO_SEND_ADR_WRITE:
  8721                           
  8722                           	psect	text30
  8723  0183                     __ptext30:	
  8724 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  8725 ;; Defined at:
  8726 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
  8727 ;; Parameters:    Size  Location     Type
  8728 ;;		None
  8729 ;; Auto vars:     Size  Location     Type
  8730 ;;		None
  8731 ;; Return value:  Size  Location     Type
  8732 ;;                  1    wreg      enum E11990
  8733 ;; Registers used:
  8734 ;;		wreg, status,2, status,0, pclath, cstack
  8735 ;; Tracked objects:
  8736 ;;		On entry : 0/0
  8737 ;;		On exit  : 0/0
  8738 ;;		Unchanged: 0/0
  8739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8743 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8744 ;;Total ram usage:        0 bytes
  8745 ;; Hardware stack levels used:    1
  8746 ;; Hardware stack levels required when called:    1
  8747 ;; This function calls:
  8748 ;;		_I2C_MasterSendTxData
  8749 ;; This function is called by:
  8750 ;;		_I2C_MasterFsm
  8751 ;; This function uses a non-reentrant model
  8752 ;;
  8753                           
  8754                           
  8755                           ;psect for function _I2C_DO_SEND_ADR_READ
  8756  0183                     _I2C_DO_SEND_ADR_READ:
  8757  0183                     l2482:	
  8758                           ;incstack = 0
  8759                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  8760                           
  8761                           
  8762                           ;i2c_master.c: 342: I2C_Status.addressNackCheck = 1;
  8763  0183  0020               	movlb	0	; select bank0
  8764  0184  143C               	bsf	_I2C_Status+28,0
  8765  0185                     l2484:
  8766                           
  8767                           ;i2c_master.c: 343: I2C_MasterSendTxData((uint8_t) (I2C_Status.address << 1 | 1));
  8768  0185  1403               	setc
  8769  0186  0D36               	rlf	_I2C_Status+22,w
  8770  0187  3181  2125  3181   	fcall	_I2C_MasterSendTxData
  8771  018A                     l2486:
  8772                           
  8773                           ;i2c_master.c: 344: return I2C_RCEN;
  8774  018A  3005               	movlw	5
  8775  018B                     l468:
  8776  018B  0008               	return
  8777  018C                     __end_of_I2C_DO_SEND_ADR_READ:
  8778                           
  8779                           	psect	text31
  8780  012A                     __ptext31:	
  8781 ;; *************** function _I2C_DO_IDLE *****************
  8782 ;; Defined at:
  8783 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;		None
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;		None
  8788 ;; Return value:  Size  Location     Type
  8789 ;;                  1    wreg      enum E11990
  8790 ;; Registers used:
  8791 ;;		wreg, status,2
  8792 ;; Tracked objects:
  8793 ;;		On entry : 0/0
  8794 ;;		On exit  : 0/0
  8795 ;;		Unchanged: 0/0
  8796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8801 ;;Total ram usage:        0 bytes
  8802 ;; Hardware stack levels used:    1
  8803 ;; This function calls:
  8804 ;;		Nothing
  8805 ;; This function is called by:
  8806 ;;		_I2C_MasterFsm
  8807 ;; This function uses a non-reentrant model
  8808 ;;
  8809                           
  8810                           
  8811                           ;psect for function _I2C_DO_IDLE
  8812  012A                     _I2C_DO_IDLE:
  8813  012A                     l2474:	
  8814                           ;incstack = 0
  8815                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  8816                           
  8817                           
  8818                           ;i2c_master.c: 335: I2C_Status.busy = 0;
  8819  012A  0020               	movlb	0	; select bank0
  8820  012B  10BC               	bcf	_I2C_Status+28,1
  8821  012C                     l2476:
  8822                           
  8823                           ;i2c_master.c: 336: I2C_Status.error = I2C_NOERR;
  8824  012C  01BB               	clrf	_I2C_Status+27
  8825  012D                     l2478:
  8826                           
  8827                           ;i2c_master.c: 337: return I2C_RESET;
  8828  012D  300E               	movlw	14
  8829  012E                     l465:
  8830  012E  0008               	return
  8831  012F                     __end_of_I2C_DO_IDLE:
  8832                           
  8833                           	psect	text32
  8834  0384                     __ptext32:	
  8835 ;; *************** function _I2C_DO_TX_EMPTY *****************
  8836 ;; Defined at:
  8837 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
  8838 ;; Parameters:    Size  Location     Type
  8839 ;;		None
  8840 ;; Auto vars:     Size  Location     Type
  8841 ;;		None
  8842 ;; Return value:  Size  Location     Type
  8843 ;;                  1    wreg      enum E11990
  8844 ;; Registers used:
  8845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8846 ;; Tracked objects:
  8847 ;;		On entry : 0/0
  8848 ;;		On exit  : 0/0
  8849 ;;		Unchanged: 0/0
  8850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8853 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8854 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8855 ;;Total ram usage:        1 bytes
  8856 ;; Hardware stack levels used:    1
  8857 ;; Hardware stack levels required when called:    3
  8858 ;; This function calls:
  8859 ;;		Absolute function
  8860 ;;		_I2C_CallbackReturnReset
  8861 ;;		_I2C_CallbackReturnStop
  8862 ;;		_I2C_DO_SEND_RESTART
  8863 ;;		_I2C_DO_SEND_STOP
  8864 ;;		_I2C_MasterSetIrq
  8865 ;;		_rd1RegCompleteHandler
  8866 ;;		_rd2RegCompleteHandler
  8867 ;;		_rdBlkRegCompleteHandler
  8868 ;;		_wr1RegCompleteHandler
  8869 ;;		_wr2RegCompleteHandler
  8870 ;; This function is called by:
  8871 ;;		_I2C_MasterFsm
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875                           
  8876                           ;psect for function _I2C_DO_TX_EMPTY
  8877  0384                     _I2C_DO_TX_EMPTY:
  8878  0384                     l2562:	
  8879                           ;incstack = 0
  8880                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8881                           
  8882                           
  8883                           ;i2c_master.c: 411: I2C_Status.bufferFree = 1;
  8884  0384  0020               	movlb	0	; select bank0
  8885  0385  15BC               	bsf	_I2C_Status+28,3
  8886                           
  8887                           ;i2c_master.c: 412: switch(I2C_Status.callbackTable[I2C_DATA_COMPLETE](I2C_Status.callba
      +                          ckPayload[I2C_DATA_COMPLETE]))
  8888  0386  2B94               	goto	l2580
  8889  0387                     l2564:
  8890                           
  8891                           ;i2c_master.c: 415: case I2C_RESTART_WRITE:;i2c_master.c: 416: return I2C_DO_SEND_RESTAR
      +                          T();
  8892  0387  3181  2139  3183   	fcall	_I2C_DO_SEND_RESTART
  8893  038A  2BAA               	goto	l508
  8894  038B                     l2568:
  8895                           
  8896                           ;i2c_master.c: 418: I2C_MasterSetIrq();
  8897  038B  3181  2116  3183   	fcall	_I2C_MasterSetIrq
  8898  038E                     l2570:
  8899                           
  8900                           ;i2c_master.c: 419: return I2C_TX;
  8901  038E  3003               	movlw	3
  8902  038F  2BAA               	goto	l508
  8903  0390                     l2574:
  8904                           
  8905                           ;i2c_master.c: 422: return I2C_DO_SEND_STOP();
  8906  0390  3181  213E  3183   	fcall	_I2C_DO_SEND_STOP
  8907  0393  2BAA               	goto	l508
  8908  0394                     l2580:
  8909  0394  082C               	movf	low ((_I2C_Status| 0+12)),w
  8910  0395  00F0               	movwf	??_I2C_DO_TX_EMPTY
  8911  0396  0870               	movf	??_I2C_DO_TX_EMPTY,w
  8912  0397  00F9               	movwf	rdBlkRegCompleteHandler@ptr
  8913  0398  0821               	movf	_I2C_Status+1,w
  8914  0399  008A               	movwf	10
  8915  039A  0820               	movf	_I2C_Status,w
  8916  039B  000A               	callw
  8917  039C  3183               	pagesel	$
  8918                           
  8919                           ; Switch size 1, requested type "simple"
  8920                           ; Number of cases is 4, Range of values is 1 to 4
  8921                           ; switch strategies available:
  8922                           ; Name         Instructions Cycles
  8923                           ; simple_byte           13     7 (average)
  8924                           ; direct_byte           17     9 (fixed)
  8925                           ; jumptable            263     9 (fixed)
  8926                           ;	Chosen strategy is simple_byte
  8927  039D  3A01               	xorlw	1	; case 1
  8928  039E  1903               	skipnz
  8929  039F  2B90               	goto	l2574
  8930  03A0  3A03               	xorlw	3	; case 2
  8931  03A1  1903               	skipnz
  8932  03A2  2B87               	goto	l2564
  8933  03A3  3A01               	xorlw	1	; case 3
  8934  03A4  1903               	skipnz
  8935  03A5  2B87               	goto	l2564
  8936  03A6  3A07               	xorlw	7	; case 4
  8937  03A7  1903               	skipnz
  8938  03A8  2B8B               	goto	l2568
  8939  03A9  2B90               	goto	l2574
  8940  03AA                     l508:
  8941  03AA  0008               	return
  8942  03AB                     __end_of_I2C_DO_TX_EMPTY:
  8943                           
  8944                           	psect	text33
  8945  0116                     __ptext33:	
  8946 ;; *************** function _I2C_MasterSetIrq *****************
  8947 ;; Defined at:
  8948 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
  8949 ;; Parameters:    Size  Location     Type
  8950 ;;		None
  8951 ;; Auto vars:     Size  Location     Type
  8952 ;;		None
  8953 ;; Return value:  Size  Location     Type
  8954 ;;                  1    wreg      void 
  8955 ;; Registers used:
  8956 ;;		None
  8957 ;; Tracked objects:
  8958 ;;		On entry : 0/0
  8959 ;;		On exit  : 0/0
  8960 ;;		Unchanged: 0/0
  8961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  8962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  8966 ;;Total ram usage:        0 bytes
  8967 ;; Hardware stack levels used:    1
  8968 ;; This function calls:
  8969 ;;		Nothing
  8970 ;; This function is called by:
  8971 ;;		_I2C_DO_TX_EMPTY
  8972 ;; This function uses a non-reentrant model
  8973 ;;
  8974                           
  8975                           
  8976                           ;psect for function _I2C_MasterSetIrq
  8977  0116                     _I2C_MasterSetIrq:
  8978  0116                     l2424:	
  8979                           ;incstack = 0
  8980                           ; Regs used in _I2C_MasterSetIrq: []
  8981                           
  8982                           
  8983                           ;i2c_master.c: 647: PIR1bits.SSP1IF = 1;
  8984  0116  0020               	movlb	0	; select bank0
  8985  0117  1591               	bsf	17,3	;volatile
  8986  0118                     l628:
  8987  0118  0008               	return
  8988  0119                     __end_of_I2C_MasterSetIrq:
  8989                           
  8990                           	psect	text34
  8991  015C                     __ptext34:	
  8992 ;; *************** function _I2C_MasterIsNack *****************
  8993 ;; Defined at:
  8994 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
  8995 ;; Parameters:    Size  Location     Type
  8996 ;;		None
  8997 ;; Auto vars:     Size  Location     Type
  8998 ;;		None
  8999 ;; Return value:  Size  Location     Type
  9000 ;;                  1    wreg      unsigned char 
  9001 ;; Registers used:
  9002 ;;		wreg, status,2, status,0
  9003 ;; Tracked objects:
  9004 ;;		On entry : 0/0
  9005 ;;		On exit  : 0/0
  9006 ;;		Unchanged: 0/0
  9007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9012 ;;Total ram usage:        0 bytes
  9013 ;; Hardware stack levels used:    1
  9014 ;; This function calls:
  9015 ;;		Nothing
  9016 ;; This function is called by:
  9017 ;;		_I2C_MasterFsm
  9018 ;;		_I2C_DO_TX
  9019 ;; This function uses a non-reentrant model
  9020 ;;
  9021                           
  9022                           
  9023                           ;psect for function _I2C_MasterIsNack
  9024  015C                     _I2C_MasterIsNack:
  9025  015C                     l2374:	
  9026                           ;incstack = 0
  9027                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  9028                           
  9029                           
  9030                           ;i2c_master.c: 600: return SSP1CON2bits.ACKSTAT;
  9031  015C  0024               	movlb	4	; select bank4
  9032  015D  0E16               	swapf	22,w	;volatile
  9033  015E  0C89               	rrf	9,f
  9034  015F  0C89               	rrf	9,f
  9035  0160  3901               	andlw	1
  9036  0161                     l601:
  9037  0161  0008               	return
  9038  0162                     __end_of_I2C_MasterIsNack:
  9039                           
  9040                           	psect	text35
  9041  0125                     __ptext35:	
  9042 ;; *************** function _I2C_MasterSendTxData *****************
  9043 ;; Defined at:
  9044 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;  data            1    wreg     unsigned char 
  9047 ;; Auto vars:     Size  Location     Type
  9048 ;;  data            1    0[COMMON] unsigned char 
  9049 ;; Return value:  Size  Location     Type
  9050 ;;                  1    wreg      void 
  9051 ;; Registers used:
  9052 ;;		wreg
  9053 ;; Tracked objects:
  9054 ;;		On entry : 0/0
  9055 ;;		On exit  : 0/0
  9056 ;;		Unchanged: 0/0
  9057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9059 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9061 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9062 ;;Total ram usage:        1 bytes
  9063 ;; Hardware stack levels used:    1
  9064 ;; This function calls:
  9065 ;;		Nothing
  9066 ;; This function is called by:
  9067 ;;		_I2C_DO_SEND_ADR_READ
  9068 ;;		_I2C_DO_SEND_ADR_WRITE
  9069 ;;		_I2C_DO_TX
  9070 ;; This function uses a non-reentrant model
  9071 ;;
  9072                           
  9073                           
  9074                           ;psect for function _I2C_MasterSendTxData
  9075  0125                     _I2C_MasterSendTxData:
  9076                           
  9077                           ;incstack = 0
  9078                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  9079                           ;I2C_MasterSendTxData@data stored from wreg
  9080  0125  00F0               	movwf	I2C_MasterSendTxData@data
  9081  0126                     l2378:
  9082                           
  9083                           ;i2c_master.c: 570: SSP1BUF = data;
  9084  0126  0870               	movf	I2C_MasterSendTxData@data,w
  9085  0127  0024               	movlb	4	; select bank4
  9086  0128  0091               	movwf	17	;volatile
  9087  0129                     l583:
  9088  0129  0008               	return
  9089  012A                     __end_of_I2C_MasterSendTxData:
  9090                           
  9091                           	psect	text36
  9092  0121                     __ptext36:	
  9093 ;; *************** function _I2C_MasterSendAck *****************
  9094 ;; Defined at:
  9095 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;		None
  9098 ;; Auto vars:     Size  Location     Type
  9099 ;;		None
  9100 ;; Return value:  Size  Location     Type
  9101 ;;                  1    wreg      void 
  9102 ;; Registers used:
  9103 ;;		None
  9104 ;; Tracked objects:
  9105 ;;		On entry : 0/0
  9106 ;;		On exit  : 0/0
  9107 ;;		Unchanged: 0/0
  9108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9113 ;;Total ram usage:        0 bytes
  9114 ;; Hardware stack levels used:    1
  9115 ;; This function calls:
  9116 ;;		Nothing
  9117 ;; This function is called by:
  9118 ;;		_I2C_DO_RX
  9119 ;;		_I2C_DO_RX_ACK
  9120 ;; This function uses a non-reentrant model
  9121 ;;
  9122                           
  9123                           
  9124                           ;psect for function _I2C_MasterSendAck
  9125  0121                     _I2C_MasterSendAck:
  9126  0121                     l2402:	
  9127                           ;incstack = 0
  9128                           ; Regs used in _I2C_MasterSendAck: []
  9129                           
  9130                           
  9131                           ;i2c_master.c: 605: SSP1CON2bits.ACKDT = 0;
  9132  0121  0024               	movlb	4	; select bank4
  9133  0122  1296               	bcf	22,5	;volatile
  9134                           
  9135                           ;i2c_master.c: 606: SSP1CON2bits.ACKEN = 1;
  9136  0123  1616               	bsf	22,4	;volatile
  9137  0124                     l604:
  9138  0124  0008               	return
  9139  0125                     __end_of_I2C_MasterSendAck:
  9140                           
  9141                           	psect	text37
  9142  0113                     __ptext37:	
  9143 ;; *************** function _I2C_MasterGetRxData *****************
  9144 ;; Defined at:
  9145 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
  9146 ;; Parameters:    Size  Location     Type
  9147 ;;		None
  9148 ;; Auto vars:     Size  Location     Type
  9149 ;;		None
  9150 ;; Return value:  Size  Location     Type
  9151 ;;                  1    wreg      unsigned char 
  9152 ;; Registers used:
  9153 ;;		wreg
  9154 ;; Tracked objects:
  9155 ;;		On entry : 0/0
  9156 ;;		On exit  : 0/0
  9157 ;;		Unchanged: 0/0
  9158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9163 ;;Total ram usage:        0 bytes
  9164 ;; Hardware stack levels used:    1
  9165 ;; This function calls:
  9166 ;;		Nothing
  9167 ;; This function is called by:
  9168 ;;		_I2C_DO_RX
  9169 ;; This function uses a non-reentrant model
  9170 ;;
  9171                           
  9172                           
  9173                           ;psect for function _I2C_MasterGetRxData
  9174  0113                     _I2C_MasterGetRxData:
  9175  0113                     l2398:	
  9176                           ;incstack = 0
  9177                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  9178                           
  9179                           
  9180                           ;i2c_master.c: 565: return SSP1BUF;
  9181  0113  0024               	movlb	4	; select bank4
  9182  0114  0811               	movf	17,w	;volatile
  9183  0115                     l580:
  9184  0115  0008               	return
  9185  0116                     __end_of_I2C_MasterGetRxData:
  9186                           
  9187                           	psect	text38
  9188  011D                     __ptext38:	
  9189 ;; *************** function _I2C_MasterSendNack *****************
  9190 ;; Defined at:
  9191 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
  9192 ;; Parameters:    Size  Location     Type
  9193 ;;		None
  9194 ;; Auto vars:     Size  Location     Type
  9195 ;;		None
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  1    wreg      void 
  9198 ;; Registers used:
  9199 ;;		None
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9209 ;;Total ram usage:        0 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; This function calls:
  9212 ;;		Nothing
  9213 ;; This function is called by:
  9214 ;;		_I2C_DO_RX_NACK_STOP
  9215 ;;		_I2C_DO_RX_NACK_RESTART
  9216 ;; This function uses a non-reentrant model
  9217 ;;
  9218                           
  9219                           
  9220                           ;psect for function _I2C_MasterSendNack
  9221  011D                     _I2C_MasterSendNack:
  9222  011D                     l2372:	
  9223                           ;incstack = 0
  9224                           ; Regs used in _I2C_MasterSendNack: []
  9225                           
  9226                           
  9227                           ;i2c_master.c: 611: SSP1CON2bits.ACKDT = 1;
  9228  011D  0024               	movlb	4	; select bank4
  9229  011E  1696               	bsf	22,5	;volatile
  9230                           
  9231                           ;i2c_master.c: 612: SSP1CON2bits.ACKEN = 1;
  9232  011F  1616               	bsf	22,4	;volatile
  9233  0120                     l607:
  9234  0120  0008               	return
  9235  0121                     __end_of_I2C_MasterSendNack:
  9236                           
  9237                           	psect	text39
  9238  0110                     __ptext39:	
  9239 ;; *************** function _I2C_MasterStartRx *****************
  9240 ;; Defined at:
  9241 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;		None
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;		None
  9246 ;; Return value:  Size  Location     Type
  9247 ;;                  1    wreg      void 
  9248 ;; Registers used:
  9249 ;;		None
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9259 ;;Total ram usage:        0 bytes
  9260 ;; Hardware stack levels used:    1
  9261 ;; This function calls:
  9262 ;;		Nothing
  9263 ;; This function is called by:
  9264 ;;		_I2C_DO_RCEN
  9265 ;; This function uses a non-reentrant model
  9266 ;;
  9267                           
  9268                           
  9269                           ;psect for function _I2C_MasterStartRx
  9270  0110                     _I2C_MasterStartRx:
  9271  0110                     l2416:	
  9272                           ;incstack = 0
  9273                           ; Regs used in _I2C_MasterStartRx: []
  9274                           
  9275                           
  9276                           ;i2c_master.c: 585: SSP1CON2bits.RCEN = 1;
  9277  0110  0024               	movlb	4	; select bank4
  9278  0111  1596               	bsf	22,3	;volatile
  9279  0112                     l592:
  9280  0112  0008               	return
  9281  0113                     __end_of_I2C_MasterStartRx:
  9282                           
  9283                           	psect	text40
  9284  0291                     __ptext40:	
  9285 ;; *************** function _rdBlkRegCompleteHandler *****************
  9286 ;; Defined at:
  9287 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  9288 ;; Parameters:    Size  Location     Type
  9289 ;;  ptr             1    9[COMMON] PTR void 
  9290 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9291 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;		None
  9294 ;; Return value:  Size  Location     Type
  9295 ;;                  1    wreg      enum E97
  9296 ;; Registers used:
  9297 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9298 ;; Tracked objects:
  9299 ;;		On entry : 0/0
  9300 ;;		On exit  : 0/0
  9301 ;;		Unchanged: 0/0
  9302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9303 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9306 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9307 ;;Total ram usage:        1 bytes
  9308 ;; Hardware stack levels used:    1
  9309 ;; Hardware stack levels required when called:    2
  9310 ;; This function calls:
  9311 ;;		_I2C_SetBuffer
  9312 ;;		_I2C_SetDataCompleteCallback
  9313 ;; This function is called by:
  9314 ;;		_I2C_ReadDataBlock
  9315 ;;		_I2C_DO_TX
  9316 ;;		_I2C_DO_RX
  9317 ;;		_I2C_DO_TX_EMPTY
  9318 ;;		_I2C_DO_ADDRESS_NACK
  9319 ;;		_I2C_DO_RX_EMPTY
  9320 ;; This function uses a non-reentrant model
  9321 ;;
  9322                           
  9323                           
  9324                           ;psect for function _rdBlkRegCompleteHandler
  9325  0291                     _rdBlkRegCompleteHandler:
  9326  0291                     l2466:	
  9327                           ;incstack = 0
  9328                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  9329                           
  9330                           
  9331                           ;i2c_master_example.c: 172: I2C_SetBuffer(((i2c_buffer_t *)ptr)->data,((i2c_buffer_t*)pt
      +                          r)->len);
  9332  0291  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  9333  0292  0086               	movwf	6
  9334  0293  0187               	clrf	7
  9335  0294  3F40               	moviw [0]fsr1
  9336  0295  00F0               	movwf	I2C_SetBuffer@bufferSize
  9337  0296  3F41               	moviw [1]fsr1
  9338  0297  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  9339  0298  0879               	movf	rdBlkRegCompleteHandler@ptr,w
  9340  0299  3E02               	addlw	2
  9341  029A  0086               	movwf	6
  9342  029B  0187               	clrf	7
  9343  029C  0801               	movf	1,w
  9344  029D  3181  21F1  3182   	fcall	_I2C_SetBuffer
  9345                           
  9346                           ;i2c_master_example.c: 173: I2C_SetDataCompleteCallback((0),(0));
  9347  02A0  3000               	movlw	0
  9348  02A1  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  9349  02A2  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  9350  02A3  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  9351  02A4  3181  21AC  3182   	fcall	_I2C_SetDataCompleteCallback
  9352  02A7                     l2468:
  9353                           
  9354                           ;i2c_master_example.c: 174: return I2C_RESTART_READ;
  9355  02A7  3002               	movlw	2
  9356  02A8                     l737:
  9357  02A8  0008               	return
  9358  02A9                     __end_of_rdBlkRegCompleteHandler:
  9359                           
  9360                           	psect	text41
  9361  0234                     __ptext41:	
  9362 ;; *************** function _wr1RegCompleteHandler *****************
  9363 ;; Defined at:
  9364 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  9365 ;; Parameters:    Size  Location     Type
  9366 ;;  ptr             1    9[COMMON] PTR void 
  9367 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9368 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  9369 ;; Auto vars:     Size  Location     Type
  9370 ;;		None
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  1    wreg      enum E97
  9373 ;; Registers used:
  9374 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9375 ;; Tracked objects:
  9376 ;;		On entry : 0/0
  9377 ;;		On exit  : 0/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9380 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9383 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9384 ;;Total ram usage:        1 bytes
  9385 ;; Hardware stack levels used:    1
  9386 ;; Hardware stack levels required when called:    2
  9387 ;; This function calls:
  9388 ;;		_I2C_SetBuffer
  9389 ;;		_I2C_SetDataCompleteCallback
  9390 ;; This function is called by:
  9391 ;;		_I2C_Write1ByteRegister
  9392 ;;		_I2C_DO_TX
  9393 ;;		_I2C_DO_RX
  9394 ;;		_I2C_DO_TX_EMPTY
  9395 ;;		_I2C_DO_ADDRESS_NACK
  9396 ;;		_I2C_DO_RX_EMPTY
  9397 ;; This function uses a non-reentrant model
  9398 ;;
  9399                           
  9400                           
  9401                           ;psect for function _wr1RegCompleteHandler
  9402  0234                     _wr1RegCompleteHandler:
  9403  0234                     l2450:	
  9404                           ;incstack = 0
  9405                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9406                           
  9407                           
  9408                           ;i2c_master_example.c: 158: I2C_SetBuffer(ptr,1);
  9409  0234  3001               	movlw	1
  9410  0235  00F0               	movwf	I2C_SetBuffer@bufferSize
  9411  0236  3000               	movlw	0
  9412  0237  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  9413  0238  0879               	movf	wr1RegCompleteHandler@ptr,w
  9414  0239  3181  21F1  3182   	fcall	_I2C_SetBuffer
  9415  023C                     l2452:
  9416                           
  9417                           ;i2c_master_example.c: 159: I2C_SetDataCompleteCallback((0),(0));
  9418  023C  3000               	movlw	0
  9419  023D  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  9420  023E  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  9421  023F  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  9422  0240  3181  21AC  3182   	fcall	_I2C_SetDataCompleteCallback
  9423  0243                     l2454:
  9424                           
  9425                           ;i2c_master_example.c: 160: return I2C_CONTINUE;
  9426  0243  3004               	movlw	4
  9427  0244                     l731:
  9428  0244  0008               	return
  9429  0245                     __end_of_wr1RegCompleteHandler:
  9430                           
  9431                           	psect	text42
  9432  0223                     __ptext42:	
  9433 ;; *************** function _rd2RegCompleteHandler *****************
  9434 ;; Defined at:
  9435 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  9436 ;; Parameters:    Size  Location     Type
  9437 ;;  ptr             1    9[COMMON] PTR void 
  9438 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9439 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  9440 ;; Auto vars:     Size  Location     Type
  9441 ;;		None
  9442 ;; Return value:  Size  Location     Type
  9443 ;;                  1    wreg      enum E97
  9444 ;; Registers used:
  9445 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9446 ;; Tracked objects:
  9447 ;;		On entry : 0/0
  9448 ;;		On exit  : 0/0
  9449 ;;		Unchanged: 0/0
  9450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9451 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9454 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9455 ;;Total ram usage:        1 bytes
  9456 ;; Hardware stack levels used:    1
  9457 ;; Hardware stack levels required when called:    2
  9458 ;; This function calls:
  9459 ;;		_I2C_SetBuffer
  9460 ;;		_I2C_SetDataCompleteCallback
  9461 ;; This function is called by:
  9462 ;;		_I2C_Read2ByteRegister
  9463 ;;		_I2C_DO_TX
  9464 ;;		_I2C_DO_RX
  9465 ;;		_I2C_DO_TX_EMPTY
  9466 ;;		_I2C_DO_ADDRESS_NACK
  9467 ;;		_I2C_DO_RX_EMPTY
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471                           
  9472                           ;psect for function _rd2RegCompleteHandler
  9473  0223                     _rd2RegCompleteHandler:
  9474  0223                     l2442:	
  9475                           ;incstack = 0
  9476                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9477                           
  9478                           
  9479                           ;i2c_master_example.c: 151: I2C_SetBuffer(ptr,2);
  9480  0223  3002               	movlw	2
  9481  0224  00F0               	movwf	I2C_SetBuffer@bufferSize
  9482  0225  3000               	movlw	0
  9483  0226  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  9484  0227  0879               	movf	rd2RegCompleteHandler@ptr,w
  9485  0228  3181  21F1  3182   	fcall	_I2C_SetBuffer
  9486  022B                     l2444:
  9487                           
  9488                           ;i2c_master_example.c: 152: I2C_SetDataCompleteCallback((0),(0));
  9489  022B  3000               	movlw	0
  9490  022C  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  9491  022D  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  9492  022E  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  9493  022F  3181  21AC  3182   	fcall	_I2C_SetDataCompleteCallback
  9494  0232                     l2446:
  9495                           
  9496                           ;i2c_master_example.c: 153: return I2C_RESTART_READ;
  9497  0232  3002               	movlw	2
  9498  0233                     l728:
  9499  0233  0008               	return
  9500  0234                     __end_of_rd2RegCompleteHandler:
  9501                           
  9502                           	psect	text43
  9503  0212                     __ptext43:	
  9504 ;; *************** function _rd1RegCompleteHandler *****************
  9505 ;; Defined at:
  9506 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  9507 ;; Parameters:    Size  Location     Type
  9508 ;;  ptr             1    9[COMMON] PTR void 
  9509 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9510 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;		None
  9513 ;; Return value:  Size  Location     Type
  9514 ;;                  1    wreg      enum E97
  9515 ;; Registers used:
  9516 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9522 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9525 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9526 ;;Total ram usage:        1 bytes
  9527 ;; Hardware stack levels used:    1
  9528 ;; Hardware stack levels required when called:    2
  9529 ;; This function calls:
  9530 ;;		_I2C_SetBuffer
  9531 ;;		_I2C_SetDataCompleteCallback
  9532 ;; This function is called by:
  9533 ;;		_I2C_Read1ByteRegister
  9534 ;;		_I2C_DO_TX
  9535 ;;		_I2C_DO_RX
  9536 ;;		_I2C_DO_TX_EMPTY
  9537 ;;		_I2C_DO_ADDRESS_NACK
  9538 ;;		_I2C_DO_RX_EMPTY
  9539 ;; This function uses a non-reentrant model
  9540 ;;
  9541                           
  9542                           
  9543                           ;psect for function _rd1RegCompleteHandler
  9544  0212                     _rd1RegCompleteHandler:
  9545  0212                     l2434:	
  9546                           ;incstack = 0
  9547                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9548                           
  9549                           
  9550                           ;i2c_master_example.c: 144: I2C_SetBuffer(ptr,1);
  9551  0212  3001               	movlw	1
  9552  0213  00F0               	movwf	I2C_SetBuffer@bufferSize
  9553  0214  3000               	movlw	0
  9554  0215  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  9555  0216  0879               	movf	rd1RegCompleteHandler@ptr,w
  9556  0217  3181  21F1  3182   	fcall	_I2C_SetBuffer
  9557  021A                     l2436:
  9558                           
  9559                           ;i2c_master_example.c: 145: I2C_SetDataCompleteCallback((0),(0));
  9560  021A  3000               	movlw	0
  9561  021B  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  9562  021C  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  9563  021D  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  9564  021E  3181  21AC  3182   	fcall	_I2C_SetDataCompleteCallback
  9565  0221                     l2438:
  9566                           
  9567                           ;i2c_master_example.c: 146: return I2C_RESTART_READ;
  9568  0221  3002               	movlw	2
  9569  0222                     l725:
  9570  0222  0008               	return
  9571  0223                     __end_of_rd1RegCompleteHandler:
  9572                           
  9573                           	psect	text44
  9574  00FC                     __ptext44:	
  9575 ;; *************** function _I2C_CallbackReturnReset *****************
  9576 ;; Defined at:
  9577 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;  funPtr          1    9[COMMON] PTR void 
  9580 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9581 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  9582 ;; Auto vars:     Size  Location     Type
  9583 ;;		None
  9584 ;; Return value:  Size  Location     Type
  9585 ;;                  1    wreg      enum E97
  9586 ;; Registers used:
  9587 ;;		wreg
  9588 ;; Tracked objects:
  9589 ;;		On entry : 0/0
  9590 ;;		On exit  : 0/0
  9591 ;;		Unchanged: 0/0
  9592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9593 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9596 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9597 ;;Total ram usage:        1 bytes
  9598 ;; Hardware stack levels used:    1
  9599 ;; This function calls:
  9600 ;;		Nothing
  9601 ;; This function is called by:
  9602 ;;		_I2C_Open
  9603 ;;		_I2C_DO_TX
  9604 ;;		_I2C_DO_RX
  9605 ;;		_I2C_DO_TX_EMPTY
  9606 ;;		_I2C_DO_ADDRESS_NACK
  9607 ;;		_I2C_DO_RX_EMPTY
  9608 ;; This function uses a non-reentrant model
  9609 ;;
  9610                           
  9611                           
  9612                           ;psect for function _I2C_CallbackReturnReset
  9613  00FC                     _I2C_CallbackReturnReset:
  9614  00FC                     l2430:	
  9615                           ;incstack = 0
  9616                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  9617                           
  9618                           
  9619                           ;i2c_master.c: 527: return I2C_RESET_LINK;
  9620  00FC  3005               	movlw	5
  9621  00FD                     l564:
  9622  00FD  0008               	return
  9623  00FE                     __end_of_I2C_CallbackReturnReset:
  9624                           
  9625                           	psect	text45
  9626  00FA                     __ptext45:	
  9627 ;; *************** function _I2C_CallbackReturnStop *****************
  9628 ;; Defined at:
  9629 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
  9630 ;; Parameters:    Size  Location     Type
  9631 ;;  funPtr          1    9[COMMON] PTR void 
  9632 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9633 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  9634 ;; Auto vars:     Size  Location     Type
  9635 ;;		None
  9636 ;; Return value:  Size  Location     Type
  9637 ;;                  1    wreg      enum E97
  9638 ;; Registers used:
  9639 ;;		wreg
  9640 ;; Tracked objects:
  9641 ;;		On entry : 0/0
  9642 ;;		On exit  : 0/0
  9643 ;;		Unchanged: 0/0
  9644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9645 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9648 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9649 ;;Total ram usage:        1 bytes
  9650 ;; Hardware stack levels used:    1
  9651 ;; This function calls:
  9652 ;;		Nothing
  9653 ;; This function is called by:
  9654 ;;		_I2C_Open
  9655 ;;		_I2C_SetCallback
  9656 ;;		_I2C_DO_TX
  9657 ;;		_I2C_DO_RX
  9658 ;;		_I2C_DO_TX_EMPTY
  9659 ;;		_I2C_DO_ADDRESS_NACK
  9660 ;;		_I2C_DO_RX_EMPTY
  9661 ;; This function uses a non-reentrant model
  9662 ;;
  9663                           
  9664                           
  9665                           ;psect for function _I2C_CallbackReturnStop
  9666  00FA                     _I2C_CallbackReturnStop:
  9667  00FA                     l2426:	
  9668                           ;incstack = 0
  9669                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  9670                           
  9671                           
  9672                           ;i2c_master.c: 522: return I2C_STOP;
  9673  00FA  3001               	movlw	1
  9674  00FB                     l561:
  9675  00FB  0008               	return
  9676  00FC                     __end_of_I2C_CallbackReturnStop:
  9677                           
  9678                           	psect	text46
  9679  0201                     __ptext46:	
  9680 ;; *************** function _wr2RegCompleteHandler *****************
  9681 ;; Defined at:
  9682 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  9683 ;; Parameters:    Size  Location     Type
  9684 ;;  ptr             1    9[COMMON] PTR void 
  9685 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9686 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  9687 ;; Auto vars:     Size  Location     Type
  9688 ;;		None
  9689 ;; Return value:  Size  Location     Type
  9690 ;;                  1    wreg      enum E97
  9691 ;; Registers used:
  9692 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9693 ;; Tracked objects:
  9694 ;;		On entry : 0/0
  9695 ;;		On exit  : 0/0
  9696 ;;		Unchanged: 0/0
  9697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9698 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9701 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9702 ;;Total ram usage:        1 bytes
  9703 ;; Hardware stack levels used:    1
  9704 ;; Hardware stack levels required when called:    2
  9705 ;; This function calls:
  9706 ;;		_I2C_SetBuffer
  9707 ;;		_I2C_SetDataCompleteCallback
  9708 ;; This function is called by:
  9709 ;;		_I2C_Write2ByteRegister
  9710 ;;		_I2C_DO_TX
  9711 ;;		_I2C_DO_RX
  9712 ;;		_I2C_DO_TX_EMPTY
  9713 ;;		_I2C_DO_ADDRESS_NACK
  9714 ;;		_I2C_DO_RX_EMPTY
  9715 ;; This function uses a non-reentrant model
  9716 ;;
  9717                           
  9718                           
  9719                           ;psect for function _wr2RegCompleteHandler
  9720  0201                     _wr2RegCompleteHandler:
  9721  0201                     l2458:	
  9722                           ;incstack = 0
  9723                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  9724                           
  9725                           
  9726                           ;i2c_master_example.c: 165: I2C_SetBuffer(ptr,2);
  9727  0201  3002               	movlw	2
  9728  0202  00F0               	movwf	I2C_SetBuffer@bufferSize
  9729  0203  3000               	movlw	0
  9730  0204  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  9731  0205  0879               	movf	wr2RegCompleteHandler@ptr,w
  9732  0206  3181  21F1  3182   	fcall	_I2C_SetBuffer
  9733  0209                     l2460:
  9734                           
  9735                           ;i2c_master_example.c: 166: I2C_SetDataCompleteCallback((0),(0));
  9736  0209  3000               	movlw	0
  9737  020A  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  9738  020B  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  9739  020C  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  9740  020D  3181  21AC  3182   	fcall	_I2C_SetDataCompleteCallback
  9741  0210                     l2462:
  9742                           
  9743                           ;i2c_master_example.c: 167: return I2C_CONTINUE;
  9744  0210  3004               	movlw	4
  9745  0211                     l734:
  9746  0211  0008               	return
  9747  0212                     __end_of_wr2RegCompleteHandler:
  9748                           
  9749                           	psect	text47
  9750  01AC                     __ptext47:	
  9751 ;; *************** function _I2C_SetDataCompleteCallback *****************
  9752 ;; Defined at:
  9753 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
  9754 ;; Parameters:    Size  Location     Type
  9755 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
  9756 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  9757 ;;		 -> rd1RegCompleteHandler(1), Absolute function(1), 
  9758 ;;  ptr             1    7[COMMON] PTR void 
  9759 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9760 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  9761 ;; Auto vars:     Size  Location     Type
  9762 ;;		None
  9763 ;; Return value:  Size  Location     Type
  9764 ;;                  1    wreg      void 
  9765 ;; Registers used:
  9766 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9767 ;; Tracked objects:
  9768 ;;		On entry : 0/0
  9769 ;;		On exit  : 0/0
  9770 ;;		Unchanged: 0/0
  9771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9772 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9774 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9775 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9776 ;;Total ram usage:        4 bytes
  9777 ;; Hardware stack levels used:    1
  9778 ;; Hardware stack levels required when called:    1
  9779 ;; This function calls:
  9780 ;;		_I2C_SetCallback
  9781 ;; This function is called by:
  9782 ;;		_rd1RegCompleteHandler
  9783 ;;		_rd2RegCompleteHandler
  9784 ;;		_wr1RegCompleteHandler
  9785 ;;		_wr2RegCompleteHandler
  9786 ;;		_rdBlkRegCompleteHandler
  9787 ;;		_I2C_Read1ByteRegister
  9788 ;;		_I2C_Read2ByteRegister
  9789 ;;		_I2C_Write1ByteRegister
  9790 ;;		_I2C_Write2ByteRegister
  9791 ;;		_I2C_ReadDataBlock
  9792 ;; This function uses a non-reentrant model
  9793 ;;
  9794                           
  9795                           
  9796                           ;psect for function _I2C_SetDataCompleteCallback
  9797  01AC                     _I2C_SetDataCompleteCallback:
  9798  01AC                     l2366:	
  9799                           ;incstack = 0
  9800                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  9801                           
  9802                           
  9803                           ;i2c_master.c: 275: I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  9804  01AC  0876               	movf	I2C_SetDataCompleteCallback@cb+1,w
  9805  01AD  00F1               	movwf	I2C_SetCallback@cb+1
  9806  01AE  0875               	movf	I2C_SetDataCompleteCallback@cb,w
  9807  01AF  00F0               	movwf	I2C_SetCallback@cb
  9808  01B0  0877               	movf	I2C_SetDataCompleteCallback@ptr,w
  9809  01B1  00F8               	movwf	??_I2C_SetDataCompleteCallback
  9810  01B2  0878               	movf	??_I2C_SetDataCompleteCallback,w
  9811  01B3  00F2               	movwf	I2C_SetCallback@ptr
  9812  01B4  3000               	movlw	0
  9813  01B5  3183  235E  3181   	fcall	_I2C_SetCallback
  9814  01B8                     l435:
  9815  01B8  0008               	return
  9816  01B9                     __end_of_I2C_SetDataCompleteCallback:
  9817                           
  9818                           	psect	text48
  9819  035E                     __ptext48:	
  9820 ;; *************** function _I2C_SetCallback *****************
  9821 ;; Defined at:
  9822 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  9823 ;; Parameters:    Size  Location     Type
  9824 ;;  idx             1    wreg     enum E12008
  9825 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  9826 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
  9827 ;;		 -> rd1RegCompleteHandler(1), Absolute function(1), 
  9828 ;;  ptr             1    2[COMMON] PTR void 
  9829 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  9830 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;  idx             1    4[COMMON] enum E12008
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  1    wreg      void 
  9835 ;; Registers used:
  9836 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9837 ;; Tracked objects:
  9838 ;;		On entry : 0/0
  9839 ;;		On exit  : 0/0
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9842 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9844 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9845 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9846 ;;Total ram usage:        5 bytes
  9847 ;; Hardware stack levels used:    1
  9848 ;; This function calls:
  9849 ;;		Nothing
  9850 ;; This function is called by:
  9851 ;;		_I2C_SetDataCompleteCallback
  9852 ;;		_I2C_SetWriteCollisionCallback
  9853 ;;		_I2C_SetAddressNackCallback
  9854 ;;		_I2C_SetDataNackCallback
  9855 ;;		_I2C_SetTimeoutCallback
  9856 ;; This function uses a non-reentrant model
  9857 ;;
  9858                           
  9859                           
  9860                           ;psect for function _I2C_SetCallback
  9861  035E                     _I2C_SetCallback:
  9862                           
  9863                           ;incstack = 0
  9864                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  9865                           ;I2C_SetCallback@idx stored from wreg
  9866  035E  00F4               	movwf	I2C_SetCallback@idx
  9867  035F                     l2354:
  9868                           
  9869                           ;i2c_master.c: 300: if(cb)
  9870  035F  0870               	movf	I2C_SetCallback@cb,w
  9871  0360  0471               	iorwf	I2C_SetCallback@cb+1,w
  9872  0361  1903               	btfsc	3,2
  9873  0362  2B64               	goto	u791
  9874  0363  2B65               	goto	u790
  9875  0364                     u791:
  9876  0364  2B76               	goto	l2358
  9877  0365                     u790:
  9878  0365                     l2356:
  9879                           
  9880                           ;i2c_master.c: 301: {;i2c_master.c: 302: I2C_Status.callbackTable[idx] = cb;
  9881  0365  3574               	lslf	I2C_SetCallback@idx,w
  9882  0366  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  9883  0367  0086               	movwf	6
  9884  0368  0187               	clrf	7
  9885  0369  0870               	movf	I2C_SetCallback@cb,w
  9886  036A  3FC0               	movwi [0]fsr1
  9887  036B  0871               	movf	I2C_SetCallback@cb+1,w
  9888  036C  3FC1               	movwi [1]fsr1
  9889                           
  9890                           ;i2c_master.c: 303: I2C_Status.callbackPayload[idx] = ptr;
  9891  036D  0872               	movf	I2C_SetCallback@ptr,w
  9892  036E  00F3               	movwf	??_I2C_SetCallback
  9893  036F  0874               	movf	I2C_SetCallback@idx,w
  9894  0370  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  9895  0371  0086               	movwf	6
  9896  0372  0187               	clrf	7
  9897  0373  0873               	movf	??_I2C_SetCallback,w
  9898  0374  0081               	movwf	1
  9899                           
  9900                           ;i2c_master.c: 304: }
  9901  0375  2B83               	goto	l452
  9902  0376                     l2358:
  9903                           
  9904                           ;i2c_master.c: 305: else;i2c_master.c: 306: {;i2c_master.c: 307: I2C_Status.callbackTabl
      +                          e[idx] = I2C_CallbackReturnStop;
  9905  0376  3574               	lslf	I2C_SetCallback@idx,w
  9906  0377  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  9907  0378  0086               	movwf	6
  9908  0379  0187               	clrf	7
  9909  037A  30FA               	movlw	low _I2C_CallbackReturnStop
  9910  037B  3FC0               	movwi [0]fsr1
  9911  037C  3000               	movlw	high _I2C_CallbackReturnStop
  9912  037D  3FC1               	movwi [1]fsr1
  9913                           
  9914                           ;i2c_master.c: 308: I2C_Status.callbackPayload[idx] = (0);
  9915  037E  0874               	movf	I2C_SetCallback@idx,w
  9916  037F  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  9917  0380  0086               	movwf	6
  9918  0381  0187               	clrf	7
  9919  0382  0181               	clrf	1
  9920  0383                     l452:
  9921  0383  0008               	return
  9922  0384                     __end_of_I2C_SetCallback:
  9923                           
  9924                           	psect	text49
  9925  01F1                     __ptext49:	
  9926 ;; *************** function _I2C_SetBuffer *****************
  9927 ;; Defined at:
  9928 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
  9929 ;; Parameters:    Size  Location     Type
  9930 ;;  buffer          1    wreg     PTR void 
  9931 ;;		 -> lcd_cmd@tbuf(2), lcd_data@tbuf(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), 
  9932 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
  9933 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteR
      +egister@returnValue(1), 
  9934 ;;		 -> NULL(0), 
  9935 ;;  bufferSize      2    0[COMMON] unsigned int 
  9936 ;; Auto vars:     Size  Location     Type
  9937 ;;  buffer          1    3[COMMON] PTR void 
  9938 ;;		 -> lcd_cmd@tbuf(2), lcd_data@tbuf(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), 
  9939 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
  9940 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteR
      +egister@returnValue(1), 
  9941 ;;		 -> NULL(0), 
  9942 ;; Return value:  Size  Location     Type
  9943 ;;                  1    wreg      void 
  9944 ;; Registers used:
  9945 ;;		wreg
  9946 ;; Tracked objects:
  9947 ;;		On entry : 0/0
  9948 ;;		On exit  : 0/0
  9949 ;;		Unchanged: 0/0
  9950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  9951 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9952 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9953 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9954 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  9955 ;;Total ram usage:        4 bytes
  9956 ;; Hardware stack levels used:    1
  9957 ;; This function calls:
  9958 ;;		Nothing
  9959 ;; This function is called by:
  9960 ;;		_rd1RegCompleteHandler
  9961 ;;		_rd2RegCompleteHandler
  9962 ;;		_wr1RegCompleteHandler
  9963 ;;		_wr2RegCompleteHandler
  9964 ;;		_rdBlkRegCompleteHandler
  9965 ;;		_lcd_data
  9966 ;;		_lcd_cmd
  9967 ;;		_I2C_Read1ByteRegister
  9968 ;;		_I2C_Read2ByteRegister
  9969 ;;		_I2C_Write1ByteRegister
  9970 ;;		_I2C_Write2ByteRegister
  9971 ;;		_I2C_WriteNBytes
  9972 ;;		_I2C_ReadNBytes
  9973 ;;		_I2C_ReadDataBlock
  9974 ;; This function uses a non-reentrant model
  9975 ;;
  9976                           
  9977                           
  9978                           ;psect for function _I2C_SetBuffer
  9979  01F1                     _I2C_SetBuffer:
  9980                           
  9981                           ;incstack = 0
  9982                           ; Regs used in _I2C_SetBuffer: [wreg]
  9983                           ;I2C_SetBuffer@buffer stored from wreg
  9984  01F1  00F3               	movwf	I2C_SetBuffer@buffer
  9985  01F2                     l2360:
  9986                           
  9987                           ;i2c_master.c: 265: if(I2C_Status.bufferFree)
  9988  01F2  0020               	movlb	0	; select bank0
  9989  01F3  1DBC               	btfss	_I2C_Status+28,3
  9990  01F4  29F6               	goto	u801
  9991  01F5  29F7               	goto	u800
  9992  01F6                     u801:
  9993  01F6  2A00               	goto	l432
  9994  01F7                     u800:
  9995  01F7                     l2362:
  9996                           
  9997                           ;i2c_master.c: 266: {;i2c_master.c: 267: I2C_Status.data_ptr = buffer;
  9998  01F7  0873               	movf	I2C_SetBuffer@buffer,w
  9999  01F8  00F2               	movwf	??_I2C_SetBuffer
 10000  01F9  0872               	movf	??_I2C_SetBuffer,w
 10001  01FA  00B7               	movwf	low ((_I2C_Status| 0+23))
 10002                           
 10003                           ;i2c_master.c: 268: I2C_Status.data_length = bufferSize;
 10004  01FB  0871               	movf	I2C_SetBuffer@bufferSize+1,w
 10005  01FC  00B9               	movwf	_I2C_Status+25
 10006  01FD  0870               	movf	I2C_SetBuffer@bufferSize,w
 10007  01FE  00B8               	movwf	_I2C_Status+24
 10008  01FF                     l2364:
 10009                           
 10010                           ;i2c_master.c: 269: I2C_Status.bufferFree = 0;
 10011  01FF  11BC               	bcf	_I2C_Status+28,3
 10012  0200                     l432:
 10013  0200  0008               	return
 10014  0201                     __end_of_I2C_SetBuffer:
 10015                           
 10016                           	psect	text50
 10017  010D                     __ptext50:	
 10018 ;; *************** function _I2C_MasterStop *****************
 10019 ;; Defined at:
 10020 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 10021 ;; Parameters:    Size  Location     Type
 10022 ;;		None
 10023 ;; Auto vars:     Size  Location     Type
 10024 ;;		None
 10025 ;; Return value:  Size  Location     Type
 10026 ;;                  1    wreg      void 
 10027 ;; Registers used:
 10028 ;;		None
 10029 ;; Tracked objects:
 10030 ;;		On entry : 0/0
 10031 ;;		On exit  : 0/0
 10032 ;;		Unchanged: 0/0
 10033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10038 ;;Total ram usage:        0 bytes
 10039 ;; Hardware stack levels used:    1
 10040 ;; This function calls:
 10041 ;;		Nothing
 10042 ;; This function is called by:
 10043 ;;		_I2C_DO_SEND_STOP
 10044 ;; This function uses a non-reentrant model
 10045 ;;
 10046                           
 10047                           
 10048                           ;psect for function _I2C_MasterStop
 10049  010D                     _I2C_MasterStop:
 10050  010D                     l2370:	
 10051                           ;incstack = 0
 10052                           ; Regs used in _I2C_MasterStop: []
 10053                           
 10054                           
 10055                           ;i2c_master.c: 595: SSP1CON2bits.PEN = 1;
 10056  010D  0024               	movlb	4	; select bank4
 10057  010E  1516               	bsf	22,2	;volatile
 10058  010F                     l598:
 10059  010F  0008               	return
 10060  0110                     __end_of_I2C_MasterStop:
 10061                           
 10062                           	psect	text51
 10063  010A                     __ptext51:	
 10064 ;; *************** function _I2C_MasterEnableRestart *****************
 10065 ;; Defined at:
 10066 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 10067 ;; Parameters:    Size  Location     Type
 10068 ;;		None
 10069 ;; Auto vars:     Size  Location     Type
 10070 ;;		None
 10071 ;; Return value:  Size  Location     Type
 10072 ;;                  1    wreg      void 
 10073 ;; Registers used:
 10074 ;;		None
 10075 ;; Tracked objects:
 10076 ;;		On entry : 0/0
 10077 ;;		On exit  : 0/0
 10078 ;;		Unchanged: 0/0
 10079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10084 ;;Total ram usage:        0 bytes
 10085 ;; Hardware stack levels used:    1
 10086 ;; This function calls:
 10087 ;;		Nothing
 10088 ;; This function is called by:
 10089 ;;		_I2C_DO_SEND_RESTART_READ
 10090 ;;		_I2C_DO_SEND_RESTART_WRITE
 10091 ;;		_I2C_DO_SEND_RESTART
 10092 ;;		_I2C_DO_RX_EMPTY
 10093 ;; This function uses a non-reentrant model
 10094 ;;
 10095                           
 10096                           
 10097                           ;psect for function _I2C_MasterEnableRestart
 10098  010A                     _I2C_MasterEnableRestart:
 10099  010A                     l2368:	
 10100                           ;incstack = 0
 10101                           ; Regs used in _I2C_MasterEnableRestart: []
 10102                           
 10103                           
 10104                           ;i2c_master.c: 575: SSP1CON2bits.RSEN = 1;
 10105  010A  0024               	movlb	4	; select bank4
 10106  010B  1496               	bsf	22,1	;volatile
 10107  010C                     l586:
 10108  010C  0008               	return
 10109  010D                     __end_of_I2C_MasterEnableRestart:
 10110                           
 10111                           	psect	text52
 10112  0107                     __ptext52:	
 10113 ;; *************** function _I2C_MasterStart *****************
 10114 ;; Defined at:
 10115 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 10116 ;; Parameters:    Size  Location     Type
 10117 ;;		None
 10118 ;; Auto vars:     Size  Location     Type
 10119 ;;		None
 10120 ;; Return value:  Size  Location     Type
 10121 ;;                  1    wreg      void 
 10122 ;; Registers used:
 10123 ;;		None
 10124 ;; Tracked objects:
 10125 ;;		On entry : 0/0
 10126 ;;		On exit  : 0/0
 10127 ;;		Unchanged: 0/0
 10128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10133 ;;Total ram usage:        0 bytes
 10134 ;; Hardware stack levels used:    1
 10135 ;; This function calls:
 10136 ;;		Nothing
 10137 ;; This function is called by:
 10138 ;;		_I2C_MasterOperation
 10139 ;; This function uses a non-reentrant model
 10140 ;;
 10141                           
 10142                           
 10143                           ;psect for function _I2C_MasterStart
 10144  0107                     _I2C_MasterStart:
 10145  0107                     l2624:	
 10146                           ;incstack = 0
 10147                           ; Regs used in _I2C_MasterStart: []
 10148                           
 10149                           
 10150                           ;i2c_master.c: 590: SSP1CON2bits.SEN = 1;
 10151  0107  0024               	movlb	4	; select bank4
 10152  0108  1416               	bsf	22,0	;volatile
 10153  0109                     l595:
 10154  0109  0008               	return
 10155  010A                     __end_of_I2C_MasterStart:
 10156                           
 10157                           	psect	text53
 10158  02C1                     __ptext53:	
 10159 ;; *************** function _I2C_Close *****************
 10160 ;; Defined at:
 10161 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 10162 ;; Parameters:    Size  Location     Type
 10163 ;;		None
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;  returnValue     1    1[COMMON] enum E92
 10166 ;; Return value:  Size  Location     Type
 10167 ;;                  1    wreg      enum E92
 10168 ;; Registers used:
 10169 ;;		wreg, status,2, status,0, pclath, cstack
 10170 ;; Tracked objects:
 10171 ;;		On entry : 0/0
 10172 ;;		On exit  : 0/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10176 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10177 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10178 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10179 ;;Total ram usage:        2 bytes
 10180 ;; Hardware stack levels used:    1
 10181 ;; Hardware stack levels required when called:    1
 10182 ;; This function calls:
 10183 ;;		_I2C_MasterClearIrq
 10184 ;;		_I2C_MasterClose
 10185 ;;		_I2C_MasterDisableIrq
 10186 ;; This function is called by:
 10187 ;;		_lcd_data
 10188 ;;		_lcd_cmd
 10189 ;;		_I2C_Read1ByteRegister
 10190 ;;		_I2C_Read2ByteRegister
 10191 ;;		_I2C_Write1ByteRegister
 10192 ;;		_I2C_Write2ByteRegister
 10193 ;;		_I2C_WriteNBytes
 10194 ;;		_I2C_ReadNBytes
 10195 ;;		_I2C_ReadDataBlock
 10196 ;; This function uses a non-reentrant model
 10197 ;;
 10198                           
 10199                           
 10200                           ;psect for function _I2C_Close
 10201  02C1                     _I2C_Close:
 10202  02C1                     l2702:	
 10203                           ;incstack = 0
 10204                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
 10205                           
 10206                           
 10207                           ;i2c_master.c: 211: i2c_error_t returnValue = I2C_BUSY;
 10208  02C1  01F1               	clrf	I2C_Close@returnValue
 10209  02C2  0AF1               	incf	I2C_Close@returnValue,f
 10210                           
 10211                           ;i2c_master.c: 212: if(!I2C_Status.busy)
 10212  02C3  0020               	movlb	0	; select bank0
 10213  02C4  18BC               	btfsc	_I2C_Status+28,1
 10214  02C5  2AC7               	goto	u921
 10215  02C6  2AC8               	goto	u920
 10216  02C7                     u921:
 10217  02C7  2ADB               	goto	l2716
 10218  02C8                     u920:
 10219  02C8                     l2704:
 10220                           
 10221                           ;i2c_master.c: 213: {;i2c_master.c: 214: I2C_Status.inUse = 0;
 10222  02C8  113C               	bcf	_I2C_Status+28,2
 10223  02C9                     l2706:
 10224                           
 10225                           ;i2c_master.c: 215: I2C_Status.address = 0xff;
 10226  02C9  30FF               	movlw	255
 10227  02CA  00F0               	movwf	??_I2C_Close
 10228  02CB  0870               	movf	??_I2C_Close,w
 10229  02CC  00B6               	movwf	_I2C_Status+22
 10230  02CD                     l2708:
 10231                           
 10232                           ;i2c_master.c: 216: I2C_MasterClearIrq();
 10233  02CD  3180  20FE  3182   	fcall	_I2C_MasterClearIrq
 10234  02D0                     l2710:
 10235                           
 10236                           ;i2c_master.c: 217: I2C_MasterDisableIrq();
 10237  02D0  3181  2104  3182   	fcall	_I2C_MasterDisableIrq
 10238  02D3                     l2712:
 10239                           
 10240                           ;i2c_master.c: 218: I2C_MasterClose();
 10241  02D3  3181  2101  3182   	fcall	_I2C_MasterClose
 10242  02D6                     l2714:
 10243                           
 10244                           ;i2c_master.c: 219: returnValue = I2C_Status.error;
 10245  02D6  0020               	movlb	0	; select bank0
 10246  02D7  083B               	movf	_I2C_Status+27,w
 10247  02D8  00F0               	movwf	??_I2C_Close
 10248  02D9  0870               	movf	??_I2C_Close,w
 10249  02DA  00F1               	movwf	I2C_Close@returnValue
 10250  02DB                     l2716:
 10251                           
 10252                           ;i2c_master.c: 220: };i2c_master.c: 221: return returnValue;
 10253  02DB  0871               	movf	I2C_Close@returnValue,w
 10254  02DC                     l413:
 10255  02DC  0008               	return
 10256  02DD                     __end_of_I2C_Close:
 10257                           
 10258                           	psect	text54
 10259  0104                     __ptext54:	
 10260 ;; *************** function _I2C_MasterDisableIrq *****************
 10261 ;; Defined at:
 10262 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;		None
 10265 ;; Auto vars:     Size  Location     Type
 10266 ;;		None
 10267 ;; Return value:  Size  Location     Type
 10268 ;;                  1    wreg      void 
 10269 ;; Registers used:
 10270 ;;		None
 10271 ;; Tracked objects:
 10272 ;;		On entry : 0/0
 10273 ;;		On exit  : 0/0
 10274 ;;		Unchanged: 0/0
 10275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10280 ;;Total ram usage:        0 bytes
 10281 ;; Hardware stack levels used:    1
 10282 ;; This function calls:
 10283 ;;		Nothing
 10284 ;; This function is called by:
 10285 ;;		_I2C_Close
 10286 ;;		_I2C_SetTimeOut
 10287 ;; This function uses a non-reentrant model
 10288 ;;
 10289                           
 10290                           
 10291                           ;psect for function _I2C_MasterDisableIrq
 10292  0104                     _I2C_MasterDisableIrq:
 10293  0104                     l2646:	
 10294                           ;incstack = 0
 10295                           ; Regs used in _I2C_MasterDisableIrq: []
 10296                           
 10297                           
 10298                           ;i2c_master.c: 637: PIE1bits.SSP1IE = 0;
 10299  0104  0021               	movlb	1	; select bank1
 10300  0105  1191               	bcf	17,3	;volatile
 10301  0106                     l622:
 10302  0106  0008               	return
 10303  0107                     __end_of_I2C_MasterDisableIrq:
 10304                           
 10305                           	psect	text55
 10306  0101                     __ptext55:	
 10307 ;; *************** function _I2C_MasterClose *****************
 10308 ;; Defined at:
 10309 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;		None
 10312 ;; Auto vars:     Size  Location     Type
 10313 ;;		None
 10314 ;; Return value:  Size  Location     Type
 10315 ;;                  1    wreg      void 
 10316 ;; Registers used:
 10317 ;;		None
 10318 ;; Tracked objects:
 10319 ;;		On entry : 0/0
 10320 ;;		On exit  : 0/0
 10321 ;;		Unchanged: 0/0
 10322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10327 ;;Total ram usage:        0 bytes
 10328 ;; Hardware stack levels used:    1
 10329 ;; This function calls:
 10330 ;;		Nothing
 10331 ;; This function is called by:
 10332 ;;		_I2C_Close
 10333 ;; This function uses a non-reentrant model
 10334 ;;
 10335                           
 10336                           
 10337                           ;psect for function _I2C_MasterClose
 10338  0101                     _I2C_MasterClose:
 10339  0101                     l2648:	
 10340                           ;incstack = 0
 10341                           ; Regs used in _I2C_MasterClose: []
 10342                           
 10343                           
 10344                           ;i2c_master.c: 560: SSP1CON1bits.SSPEN = 0;
 10345  0101  0024               	movlb	4	; select bank4
 10346  0102  1295               	bcf	21,5	;volatile
 10347  0103                     l577:
 10348  0103  0008               	return
 10349  0104                     __end_of_I2C_MasterClose:
 10350                           
 10351                           	psect	text56
 10352  00FE                     __ptext56:	
 10353 ;; *************** function _I2C_MasterClearIrq *****************
 10354 ;; Defined at:
 10355 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 10356 ;; Parameters:    Size  Location     Type
 10357 ;;		None
 10358 ;; Auto vars:     Size  Location     Type
 10359 ;;		None
 10360 ;; Return value:  Size  Location     Type
 10361 ;;                  1    wreg      void 
 10362 ;; Registers used:
 10363 ;;		None
 10364 ;; Tracked objects:
 10365 ;;		On entry : 0/0
 10366 ;;		On exit  : 0/0
 10367 ;;		Unchanged: 0/0
 10368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10373 ;;Total ram usage:        0 bytes
 10374 ;; Hardware stack levels used:    1
 10375 ;; This function calls:
 10376 ;;		Nothing
 10377 ;; This function is called by:
 10378 ;;		_I2C_Open
 10379 ;;		_I2C_Close
 10380 ;;		_I2C_MasterFsm
 10381 ;; This function uses a non-reentrant model
 10382 ;;
 10383                           
 10384                           
 10385                           ;psect for function _I2C_MasterClearIrq
 10386  00FE                     _I2C_MasterClearIrq:
 10387  00FE                     l2472:	
 10388                           ;incstack = 0
 10389                           ; Regs used in _I2C_MasterClearIrq: []
 10390                           
 10391                           
 10392                           ;i2c_master.c: 642: PIR1bits.SSP1IF = 0;
 10393  00FE  0020               	movlb	0	; select bank0
 10394  00FF  1191               	bcf	17,3	;volatile
 10395  0100                     l625:
 10396  0100  0008               	return
 10397  0101                     __end_of_I2C_MasterClearIrq:
 10398                           
 10399                           	psect	text57
 10400  027B                     __ptext57:	
 10401 ;; *************** function _SYSTEM_Initialize *****************
 10402 ;; Defined at:
 10403 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10404 ;; Parameters:    Size  Location     Type
 10405 ;;		None
 10406 ;; Auto vars:     Size  Location     Type
 10407 ;;		None
 10408 ;; Return value:  Size  Location     Type
 10409 ;;                  1    wreg      void 
 10410 ;; Registers used:
 10411 ;;		wreg, status,2, status,0, pclath, cstack
 10412 ;; Tracked objects:
 10413 ;;		On entry : 0/0
 10414 ;;		On exit  : 0/0
 10415 ;;		Unchanged: 0/0
 10416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10421 ;;Total ram usage:        0 bytes
 10422 ;; Hardware stack levels used:    1
 10423 ;; Hardware stack levels required when called:    1
 10424 ;; This function calls:
 10425 ;;		_COG3_Initialize
 10426 ;;		_I2C_Initialize
 10427 ;;		_OSCILLATOR_Initialize
 10428 ;;		_PIN_MANAGER_Initialize
 10429 ;;		_PWM1_Initialize
 10430 ;;		_TMR2_Initialize
 10431 ;;		_WDT_Initialize
 10432 ;; This function is called by:
 10433 ;;		_main
 10434 ;; This function uses a non-reentrant model
 10435 ;;
 10436                           
 10437                           
 10438                           ;psect for function _SYSTEM_Initialize
 10439  027B                     _SYSTEM_Initialize:
 10440  027B                     l2934:	
 10441                           ;incstack = 0
 10442                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10443                           
 10444                           
 10445                           ;mcc.c: 53: I2C_Initialize();
 10446  027B  3181  218C  3182   	fcall	_I2C_Initialize
 10447                           
 10448                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 10449  027E  3185  2560  3182   	fcall	_PIN_MANAGER_Initialize
 10450                           
 10451                           ;mcc.c: 55: OSCILLATOR_Initialize();
 10452  0281  3181  21A0  3182   	fcall	_OSCILLATOR_Initialize
 10453                           
 10454                           ;mcc.c: 56: WDT_Initialize();
 10455  0284  3181  2119  3182   	fcall	_WDT_Initialize
 10456                           
 10457                           ;mcc.c: 57: PWM1_Initialize();
 10458  0287  3181  2196  3182   	fcall	_PWM1_Initialize
 10459                           
 10460                           ;mcc.c: 58: COG3_Initialize();
 10461  028A  3183  231A  3182   	fcall	_COG3_Initialize
 10462                           
 10463                           ;mcc.c: 59: TMR2_Initialize();
 10464  028D  3181  21C6  3182   	fcall	_TMR2_Initialize
 10465  0290                     l117:
 10466  0290  0008               	return
 10467  0291                     __end_of_SYSTEM_Initialize:
 10468                           
 10469                           	psect	text58
 10470  0119                     __ptext58:	
 10471 ;; *************** function _WDT_Initialize *****************
 10472 ;; Defined at:
 10473 ;;		line 78 in file "mcc_generated_files/mcc.c"
 10474 ;; Parameters:    Size  Location     Type
 10475 ;;		None
 10476 ;; Auto vars:     Size  Location     Type
 10477 ;;		None
 10478 ;; Return value:  Size  Location     Type
 10479 ;;                  1    wreg      void 
 10480 ;; Registers used:
 10481 ;;		wreg
 10482 ;; Tracked objects:
 10483 ;;		On entry : 0/0
 10484 ;;		On exit  : 0/0
 10485 ;;		Unchanged: 0/0
 10486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10491 ;;Total ram usage:        0 bytes
 10492 ;; Hardware stack levels used:    1
 10493 ;; This function calls:
 10494 ;;		Nothing
 10495 ;; This function is called by:
 10496 ;;		_SYSTEM_Initialize
 10497 ;; This function uses a non-reentrant model
 10498 ;;
 10499                           
 10500                           
 10501                           ;psect for function _WDT_Initialize
 10502  0119                     _WDT_Initialize:
 10503  0119                     l2786:	
 10504                           ;incstack = 0
 10505                           ; Regs used in _WDT_Initialize: [wreg]
 10506                           
 10507                           
 10508                           ;mcc.c: 81: WDTCON = 0x16;
 10509  0119  3016               	movlw	22
 10510  011A  0021               	movlb	1	; select bank1
 10511  011B  0099               	movwf	25	;volatile
 10512  011C                     l126:
 10513  011C  0008               	return
 10514  011D                     __end_of_WDT_Initialize:
 10515                           
 10516                           	psect	text59
 10517  01C6                     __ptext59:	
 10518 ;; *************** function _TMR2_Initialize *****************
 10519 ;; Defined at:
 10520 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 10521 ;; Parameters:    Size  Location     Type
 10522 ;;		None
 10523 ;; Auto vars:     Size  Location     Type
 10524 ;;		None
 10525 ;; Return value:  Size  Location     Type
 10526 ;;                  1    wreg      void 
 10527 ;; Registers used:
 10528 ;;		wreg, status,2
 10529 ;; Tracked objects:
 10530 ;;		On entry : 0/0
 10531 ;;		On exit  : 0/0
 10532 ;;		Unchanged: 0/0
 10533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10538 ;;Total ram usage:        0 bytes
 10539 ;; Hardware stack levels used:    1
 10540 ;; This function calls:
 10541 ;;		Nothing
 10542 ;; This function is called by:
 10543 ;;		_SYSTEM_Initialize
 10544 ;; This function uses a non-reentrant model
 10545 ;;
 10546                           
 10547                           
 10548                           ;psect for function _TMR2_Initialize
 10549  01C6                     _TMR2_Initialize:
 10550  01C6                     l2728:	
 10551                           ;incstack = 0
 10552                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 10553                           
 10554                           
 10555                           ;tmr2.c: 67: T2CLKCON = 0x01;
 10556  01C6  3001               	movlw	1
 10557  01C7  0029               	movlb	9	; select bank9
 10558  01C8  0097               	movwf	23	;volatile
 10559  01C9                     l2730:
 10560                           
 10561                           ;tmr2.c: 70: T2HLT = 0x00;
 10562  01C9  0196               	clrf	22	;volatile
 10563  01CA                     l2732:
 10564                           
 10565                           ;tmr2.c: 73: T2RST = 0x00;
 10566  01CA  0198               	clrf	24	;volatile
 10567                           
 10568                           ;tmr2.c: 76: T2PR = 0xFF;
 10569  01CB  30FF               	movlw	255
 10570  01CC  0094               	movwf	20	;volatile
 10571  01CD                     l2734:
 10572                           
 10573                           ;tmr2.c: 79: T2TMR = 0x00;
 10574  01CD  0193               	clrf	19	;volatile
 10575  01CE                     l2736:
 10576                           
 10577                           ;tmr2.c: 82: PIR1bits.TMR2IF = 0;
 10578  01CE  0020               	movlb	0	; select bank0
 10579  01CF  1091               	bcf	17,1	;volatile
 10580  01D0                     l2738:
 10581                           
 10582                           ;tmr2.c: 85: T2CON = 0xB0;
 10583  01D0  30B0               	movlw	176
 10584  01D1  0029               	movlb	9	; select bank9
 10585  01D2  0095               	movwf	21	;volatile
 10586  01D3                     l48:
 10587  01D3  0008               	return
 10588  01D4                     __end_of_TMR2_Initialize:
 10589                           
 10590                           	psect	text60
 10591  0196                     __ptext60:	
 10592 ;; *************** function _PWM1_Initialize *****************
 10593 ;; Defined at:
 10594 ;;		line 64 in file "mcc_generated_files/pwm1.c"
 10595 ;; Parameters:    Size  Location     Type
 10596 ;;		None
 10597 ;; Auto vars:     Size  Location     Type
 10598 ;;		None
 10599 ;; Return value:  Size  Location     Type
 10600 ;;                  1    wreg      void 
 10601 ;; Registers used:
 10602 ;;		wreg, status,2, status,0
 10603 ;; Tracked objects:
 10604 ;;		On entry : 0/0
 10605 ;;		On exit  : 0/0
 10606 ;;		Unchanged: 0/0
 10607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10612 ;;Total ram usage:        0 bytes
 10613 ;; Hardware stack levels used:    1
 10614 ;; This function calls:
 10615 ;;		Nothing
 10616 ;; This function is called by:
 10617 ;;		_SYSTEM_Initialize
 10618 ;; This function uses a non-reentrant model
 10619 ;;
 10620                           
 10621                           
 10622                           ;psect for function _PWM1_Initialize
 10623  0196                     _PWM1_Initialize:
 10624  0196                     l2724:	
 10625                           ;incstack = 0
 10626                           ; Regs used in _PWM1_Initialize: [wreg+status,2+status,0]
 10627                           
 10628                           
 10629                           ;pwm1.c: 69: CCP1CON = 0x8F;
 10630  0196  308F               	movlw	143
 10631  0197  0025               	movlb	5	; select bank5
 10632  0198  0093               	movwf	19	;volatile
 10633                           
 10634                           ;pwm1.c: 72: CCPR1H = 0x01;
 10635  0199  3001               	movlw	1
 10636  019A  0092               	movwf	18	;volatile
 10637                           
 10638                           ;pwm1.c: 75: CCPR1L = 0xFF;
 10639  019B  30FF               	movlw	255
 10640  019C  0091               	movwf	17	;volatile
 10641  019D                     l2726:
 10642                           
 10643                           ;pwm1.c: 78: CCPTMRS1bits.C1TSEL = 0x0;
 10644  019D  30FC               	movlw	-4
 10645  019E  059E               	andwf	30,f	;volatile
 10646  019F                     l13:
 10647  019F  0008               	return
 10648  01A0                     __end_of_PWM1_Initialize:
 10649                           
 10650                           	psect	text61
 10651  0560                     __ptext61:	
 10652 ;; *************** function _PIN_MANAGER_Initialize *****************
 10653 ;; Defined at:
 10654 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 10655 ;; Parameters:    Size  Location     Type
 10656 ;;		None
 10657 ;; Auto vars:     Size  Location     Type
 10658 ;;		None
 10659 ;; Return value:  Size  Location     Type
 10660 ;;                  1    wreg      void 
 10661 ;; Registers used:
 10662 ;;		wreg, status,2
 10663 ;; Tracked objects:
 10664 ;;		On entry : 0/0
 10665 ;;		On exit  : 0/0
 10666 ;;		Unchanged: 0/0
 10667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10672 ;;Total ram usage:        0 bytes
 10673 ;; Hardware stack levels used:    1
 10674 ;; This function calls:
 10675 ;;		Nothing
 10676 ;; This function is called by:
 10677 ;;		_SYSTEM_Initialize
 10678 ;; This function uses a non-reentrant model
 10679 ;;
 10680                           
 10681                           
 10682                           ;psect for function _PIN_MANAGER_Initialize
 10683  0560                     _PIN_MANAGER_Initialize:
 10684  0560                     l2748:	
 10685                           ;incstack = 0
 10686                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 10687                           
 10688                           
 10689                           ;pin_manager.c: 60: LATA = 0x00;
 10690  0560  0022               	movlb	2	; select bank2
 10691  0561  018C               	clrf	12	;volatile
 10692                           
 10693                           ;pin_manager.c: 61: LATB = 0x00;
 10694  0562  018D               	clrf	13	;volatile
 10695                           
 10696                           ;pin_manager.c: 62: LATC = 0x00;
 10697  0563  018E               	clrf	14	;volatile
 10698  0564                     l2750:
 10699                           
 10700                           ;pin_manager.c: 67: TRISE = 0x08;
 10701  0564  3008               	movlw	8
 10702  0565  0021               	movlb	1	; select bank1
 10703  0566  0090               	movwf	16	;volatile
 10704  0567                     l2752:
 10705                           
 10706                           ;pin_manager.c: 68: TRISA = 0x3F;
 10707  0567  303F               	movlw	63
 10708  0568  008C               	movwf	12	;volatile
 10709  0569                     l2754:
 10710                           
 10711                           ;pin_manager.c: 69: TRISB = 0xED;
 10712  0569  30ED               	movlw	237
 10713  056A  008D               	movwf	13	;volatile
 10714  056B                     l2756:
 10715                           
 10716                           ;pin_manager.c: 70: TRISC = 0xFC;
 10717  056B  30FC               	movlw	252
 10718  056C  008E               	movwf	14	;volatile
 10719  056D                     l2758:
 10720                           
 10721                           ;pin_manager.c: 75: ANSELC = 0xE4;
 10722  056D  30E4               	movlw	228
 10723  056E  0023               	movlb	3	; select bank3
 10724  056F  008E               	movwf	14	;volatile
 10725  0570                     l2760:
 10726                           
 10727                           ;pin_manager.c: 76: ANSELB = 0x0D;
 10728  0570  300D               	movlw	13
 10729  0571  008D               	movwf	13	;volatile
 10730  0572                     l2762:
 10731                           
 10732                           ;pin_manager.c: 77: ANSELA = 0x3F;
 10733  0572  303F               	movlw	63
 10734  0573  008C               	movwf	12	;volatile
 10735  0574                     l2764:
 10736                           
 10737                           ;pin_manager.c: 82: WPUE = 0x00;
 10738  0574  0024               	movlb	4	; select bank4
 10739  0575  0190               	clrf	16	;volatile
 10740  0576                     l2766:
 10741                           
 10742                           ;pin_manager.c: 83: WPUB = 0x00;
 10743  0576  018D               	clrf	13	;volatile
 10744  0577                     l2768:
 10745                           
 10746                           ;pin_manager.c: 84: WPUA = 0x00;
 10747  0577  018C               	clrf	12	;volatile
 10748  0578                     l2770:
 10749                           
 10750                           ;pin_manager.c: 85: WPUC = 0x00;
 10751  0578  018E               	clrf	14	;volatile
 10752  0579                     l2772:
 10753                           
 10754                           ;pin_manager.c: 86: OPTION_REGbits.nWPUEN = 1;
 10755  0579  0021               	movlb	1	; select bank1
 10756  057A  1797               	bsf	23,7	;volatile
 10757  057B                     l2774:
 10758                           
 10759                           ;pin_manager.c: 91: ODCONA = 0x00;
 10760  057B  0025               	movlb	5	; select bank5
 10761  057C  018C               	clrf	12	;volatile
 10762  057D                     l2776:
 10763                           
 10764                           ;pin_manager.c: 92: ODCONB = 0x00;
 10765  057D  018D               	clrf	13	;volatile
 10766  057E                     l2778:
 10767                           
 10768                           ;pin_manager.c: 93: ODCONC = 0x00;
 10769  057E  018E               	clrf	14	;volatile
 10770                           
 10771                           ;pin_manager.c: 98: SLRCONA = 0xFF;
 10772  057F  30FF               	movlw	255
 10773  0580  0026               	movlb	6	; select bank6
 10774  0581  008C               	movwf	12	;volatile
 10775                           
 10776                           ;pin_manager.c: 99: SLRCONB = 0xFF;
 10777  0582  30FF               	movlw	255
 10778  0583  008D               	movwf	13	;volatile
 10779                           
 10780                           ;pin_manager.c: 100: SLRCONC = 0xFF;
 10781  0584  30FF               	movlw	255
 10782  0585  008E               	movwf	14	;volatile
 10783                           
 10784                           ;pin_manager.c: 105: INLVLA = 0x3F;
 10785  0586  303F               	movlw	63
 10786  0587  0027               	movlb	7	; select bank7
 10787  0588  008C               	movwf	12	;volatile
 10788                           
 10789                           ;pin_manager.c: 106: INLVLB = 0xF0;
 10790  0589  30F0               	movlw	240
 10791  058A  008D               	movwf	13	;volatile
 10792                           
 10793                           ;pin_manager.c: 107: INLVLC = 0xFF;
 10794  058B  30FF               	movlw	255
 10795  058C  008E               	movwf	14	;volatile
 10796                           
 10797                           ;pin_manager.c: 116: RA7PPS = 0x0E;
 10798  058D  300E               	movlw	14
 10799  058E  003D               	movlb	29	; select bank29
 10800  058F  0097               	movwf	23	;volatile
 10801                           
 10802                           ;pin_manager.c: 117: RC0PPS = 0x10;
 10803  0590  3010               	movlw	16
 10804  0591  00A0               	movwf	32	;volatile
 10805                           
 10806                           ;pin_manager.c: 118: SSPDATPPS = 0x14;
 10807  0592  3014               	movlw	20
 10808  0593  003C               	movlb	28	; select bank28
 10809  0594  00BB               	movwf	59	;volatile
 10810                           
 10811                           ;pin_manager.c: 119: RC3PPS = 0x21;
 10812  0595  3021               	movlw	33
 10813  0596  003D               	movlb	29	; select bank29
 10814  0597  00A3               	movwf	35	;volatile
 10815                           
 10816                           ;pin_manager.c: 120: RC1PPS = 0x0F;
 10817  0598  300F               	movlw	15
 10818  0599  00A1               	movwf	33	;volatile
 10819                           
 10820                           ;pin_manager.c: 121: RC4PPS = 0x22;
 10821  059A  3022               	movlw	34
 10822  059B  00A4               	movwf	36	;volatile
 10823                           
 10824                           ;pin_manager.c: 122: RA6PPS = 0x0D;
 10825  059C  300D               	movlw	13
 10826  059D  0096               	movwf	22	;volatile
 10827                           
 10828                           ;pin_manager.c: 123: SSPCLKPPS = 0x13;
 10829  059E  3013               	movlw	19
 10830  059F  003C               	movlb	28	; select bank28
 10831  05A0  00BA               	movwf	58	;volatile
 10832  05A1                     l193:
 10833  05A1  0008               	return
 10834  05A2                     __end_of_PIN_MANAGER_Initialize:
 10835                           
 10836                           	psect	text62
 10837  01A0                     __ptext62:	
 10838 ;; *************** function _OSCILLATOR_Initialize *****************
 10839 ;; Defined at:
 10840 ;;		line 62 in file "mcc_generated_files/mcc.c"
 10841 ;; Parameters:    Size  Location     Type
 10842 ;;		None
 10843 ;; Auto vars:     Size  Location     Type
 10844 ;;		None
 10845 ;; Return value:  Size  Location     Type
 10846 ;;                  1    wreg      void 
 10847 ;; Registers used:
 10848 ;;		wreg, status,2
 10849 ;; Tracked objects:
 10850 ;;		On entry : 0/0
 10851 ;;		On exit  : 0/0
 10852 ;;		Unchanged: 0/0
 10853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10858 ;;Total ram usage:        0 bytes
 10859 ;; Hardware stack levels used:    1
 10860 ;; This function calls:
 10861 ;;		Nothing
 10862 ;; This function is called by:
 10863 ;;		_SYSTEM_Initialize
 10864 ;; This function uses a non-reentrant model
 10865 ;;
 10866                           
 10867                           
 10868                           ;psect for function _OSCILLATOR_Initialize
 10869  01A0                     _OSCILLATOR_Initialize:
 10870  01A0                     l2780:	
 10871                           ;incstack = 0
 10872                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10873                           
 10874                           
 10875                           ;mcc.c: 65: OSCCON = 0x70;
 10876  01A0  3070               	movlw	112
 10877  01A1  0021               	movlb	1	; select bank1
 10878  01A2  009B               	movwf	27	;volatile
 10879                           
 10880                           ;mcc.c: 67: OSCSTAT = 0x80;
 10881  01A3  3080               	movlw	128
 10882  01A4  009C               	movwf	28	;volatile
 10883  01A5                     l2782:
 10884                           
 10885                           ;mcc.c: 69: OSCTUNE = 0x00;
 10886  01A5  019A               	clrf	26	;volatile
 10887  01A6                     l2784:
 10888                           
 10889                           ;mcc.c: 71: BORCON = 0x00;
 10890  01A6  019D               	clrf	29	;volatile
 10891  01A7                     l120:	
 10892                           ;mcc.c: 74: {
 10893                           
 10894  01A7  1F1C               	btfss	28,6	;volatile
 10895  01A8  29AA               	goto	u931
 10896  01A9  29AB               	goto	u930
 10897  01AA                     u931:
 10898  01AA  29A7               	goto	l120
 10899  01AB                     u930:
 10900  01AB                     l123:
 10901  01AB  0008               	return
 10902  01AC                     __end_of_OSCILLATOR_Initialize:
 10903                           
 10904                           	psect	text63
 10905  018C                     __ptext63:	
 10906 ;; *************** function _I2C_Initialize *****************
 10907 ;; Defined at:
 10908 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
 10909 ;; Parameters:    Size  Location     Type
 10910 ;;		None
 10911 ;; Auto vars:     Size  Location     Type
 10912 ;;		None
 10913 ;; Return value:  Size  Location     Type
 10914 ;;                  1    wreg      void 
 10915 ;; Registers used:
 10916 ;;		wreg, status,2
 10917 ;; Tracked objects:
 10918 ;;		On entry : 0/0
 10919 ;;		On exit  : 0/0
 10920 ;;		Unchanged: 0/0
 10921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10926 ;;Total ram usage:        0 bytes
 10927 ;; Hardware stack levels used:    1
 10928 ;; This function calls:
 10929 ;;		Nothing
 10930 ;; This function is called by:
 10931 ;;		_SYSTEM_Initialize
 10932 ;; This function uses a non-reentrant model
 10933 ;;
 10934                           
 10935                           
 10936                           ;psect for function _I2C_Initialize
 10937  018C                     _I2C_Initialize:
 10938  018C                     l2740:	
 10939                           ;incstack = 0
 10940                           ; Regs used in _I2C_Initialize: [wreg+status,2]
 10941                           
 10942                           
 10943                           ;i2c_master.c: 169: SSP1STAT = 0x80;
 10944  018C  3080               	movlw	128
 10945  018D  0024               	movlb	4	; select bank4
 10946  018E  0094               	movwf	20	;volatile
 10947                           
 10948                           ;i2c_master.c: 170: SSP1CON1 = 0x08;
 10949  018F  3008               	movlw	8
 10950  0190  0095               	movwf	21	;volatile
 10951  0191                     l2742:
 10952                           
 10953                           ;i2c_master.c: 171: SSP1CON2 = 0x00;
 10954  0191  0196               	clrf	22	;volatile
 10955  0192                     l2744:
 10956                           
 10957                           ;i2c_master.c: 172: SSP1ADD = 0x4F;
 10958  0192  304F               	movlw	79
 10959  0193  0092               	movwf	18	;volatile
 10960  0194                     l2746:
 10961                           
 10962                           ;i2c_master.c: 173: SSP1CON1bits.SSPEN = 0;
 10963  0194  1295               	bcf	21,5	;volatile
 10964  0195                     l405:
 10965  0195  0008               	return
 10966  0196                     __end_of_I2C_Initialize:
 10967                           
 10968                           	psect	text64
 10969  031A                     __ptext64:	
 10970 ;; *************** function _COG3_Initialize *****************
 10971 ;; Defined at:
 10972 ;;		line 58 in file "mcc_generated_files/cog3.c"
 10973 ;; Parameters:    Size  Location     Type
 10974 ;;		None
 10975 ;; Auto vars:     Size  Location     Type
 10976 ;;		None
 10977 ;; Return value:  Size  Location     Type
 10978 ;;                  1    wreg      void 
 10979 ;; Registers used:
 10980 ;;		wreg, status,2
 10981 ;; Tracked objects:
 10982 ;;		On entry : 0/0
 10983 ;;		On exit  : 0/0
 10984 ;;		Unchanged: 0/0
 10985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 10986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 10990 ;;Total ram usage:        0 bytes
 10991 ;; Hardware stack levels used:    1
 10992 ;; This function calls:
 10993 ;;		Nothing
 10994 ;; This function is called by:
 10995 ;;		_SYSTEM_Initialize
 10996 ;; This function uses a non-reentrant model
 10997 ;;
 10998                           
 10999                           
 11000                           ;psect for function _COG3_Initialize
 11001  031A                     _COG3_Initialize:
 11002  031A                     l2788:	
 11003                           ;incstack = 0
 11004                           ; Regs used in _COG3_Initialize: [wreg+status,2]
 11005                           
 11006                           
 11007                           ;cog3.c: 61: COG3CON0 = 0x00;
 11008  031A  0030               	movlb	16	; select bank16
 11009  031B  0193               	clrf	19	;volatile
 11010  031C                     l2790:
 11011                           
 11012                           ;cog3.c: 65: COG3CON1 = 0x05;
 11013  031C  3005               	movlw	5
 11014  031D  0094               	movwf	20	;volatile
 11015  031E                     l2792:
 11016                           
 11017                           ;cog3.c: 68: COG3RIS0 = 0x20;
 11018  031E  3020               	movlw	32
 11019  031F  0095               	movwf	21	;volatile
 11020                           
 11021                           ;cog3.c: 71: COG3RIS1 = 0x00;
 11022  0320  0196               	clrf	22	;volatile
 11023  0321                     l2794:
 11024                           
 11025                           ;cog3.c: 74: COG3RSIM0 = 0x20;
 11026  0321  3020               	movlw	32
 11027  0322  0097               	movwf	23	;volatile
 11028  0323                     l2796:
 11029                           
 11030                           ;cog3.c: 77: COG3RSIM1 = 0x00;
 11031  0323  0198               	clrf	24	;volatile
 11032                           
 11033                           ;cog3.c: 80: COG3FIS0 = 0x20;
 11034  0324  3020               	movlw	32
 11035  0325  0099               	movwf	25	;volatile
 11036  0326                     l2798:
 11037                           
 11038                           ;cog3.c: 83: COG3FIS1 = 0x00;
 11039  0326  019A               	clrf	26	;volatile
 11040  0327                     l2800:
 11041                           
 11042                           ;cog3.c: 86: COG3FSIM0 = 0x20;
 11043  0327  3020               	movlw	32
 11044  0328  009B               	movwf	27	;volatile
 11045                           
 11046                           ;cog3.c: 89: COG3FSIM1 = 0x00;
 11047  0329  019C               	clrf	28	;volatile
 11048  032A                     l2802:
 11049                           
 11050                           ;cog3.c: 92: COG3ASD0 = 0x14;
 11051  032A  3014               	movlw	20
 11052  032B  009D               	movwf	29	;volatile
 11053  032C                     l2804:
 11054                           
 11055                           ;cog3.c: 95: COG3ASD1 = 0x00;
 11056  032C  019E               	clrf	30	;volatile
 11057                           
 11058                           ;cog3.c: 98: COG3STR = 0x0F;
 11059  032D  300F               	movlw	15
 11060  032E  009F               	movwf	31	;volatile
 11061                           
 11062                           ;cog3.c: 101: COG3DBR = 0x28;
 11063  032F  3028               	movlw	40
 11064  0330  0091               	movwf	17	;volatile
 11065                           
 11066                           ;cog3.c: 104: COG3DBF = 0x28;
 11067  0331  3028               	movlw	40
 11068  0332  0092               	movwf	18	;volatile
 11069  0333                     l2806:
 11070                           
 11071                           ;cog3.c: 107: COG3BLKR = 0x00;
 11072  0333  018F               	clrf	15	;volatile
 11073  0334                     l2808:
 11074                           
 11075                           ;cog3.c: 110: COG3BLKF = 0x00;
 11076  0334  0190               	clrf	16	;volatile
 11077  0335                     l2810:
 11078                           
 11079                           ;cog3.c: 113: COG3PHR = 0x00;
 11080  0335  018D               	clrf	13	;volatile
 11081  0336                     l2812:
 11082                           
 11083                           ;cog3.c: 116: COG3PHF = 0x00;
 11084  0336  018E               	clrf	14	;volatile
 11085                           
 11086                           ;cog3.c: 119: COG3CON0 = 0x82;
 11087  0337  3082               	movlw	130
 11088  0338  0093               	movwf	19	;volatile
 11089  0339                     l239:
 11090  0339  0008               	return
 11091  033A                     __end_of_COG3_Initialize:
 11092                           
 11093                           	psect	text65
 11094  0268                     __ptext65:	
 11095 ;; *************** function _PWM1_LoadDutyValue *****************
 11096 ;; Defined at:
 11097 ;;		line 82 in file "mcc_generated_files/pwm1.c"
 11098 ;; Parameters:    Size  Location     Type
 11099 ;;  dutyValue       2    0[COMMON] unsigned int 
 11100 ;; Auto vars:     Size  Location     Type
 11101 ;;		None
 11102 ;; Return value:  Size  Location     Type
 11103 ;;                  1    wreg      void 
 11104 ;; Registers used:
 11105 ;;		wreg, status,2
 11106 ;; Tracked objects:
 11107 ;;		On entry : 0/0
 11108 ;;		On exit  : 0/0
 11109 ;;		Unchanged: 0/0
 11110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
 11111 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11114 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
 11115 ;;Total ram usage:        2 bytes
 11116 ;; Hardware stack levels used:    1
 11117 ;; This function calls:
 11118 ;;		Nothing
 11119 ;; This function is called by:
 11120 ;;		_main
 11121 ;; This function uses a non-reentrant model
 11122 ;;
 11123                           
 11124                           
 11125                           ;psect for function _PWM1_LoadDutyValue
 11126  0268                     _PWM1_LoadDutyValue:
 11127  0268                     l2920:	
 11128                           ;incstack = 0
 11129                           ; Regs used in _PWM1_LoadDutyValue: [wreg+status,2]
 11130                           
 11131                           
 11132                           ;pwm1.c: 84: dutyValue &= 0x03FF;
 11133  0268  30FF               	movlw	255
 11134  0269  05F0               	andwf	PWM1_LoadDutyValue@dutyValue,f
 11135  026A  3003               	movlw	3
 11136  026B  05F1               	andwf	PWM1_LoadDutyValue@dutyValue+1,f
 11137  026C                     l2922:
 11138                           
 11139                           ;pwm1.c: 87: if(CCP1CONbits.FMT)
 11140  026C  0025               	movlb	5	; select bank5
 11141  026D  1E13               	btfss	19,4	;volatile
 11142  026E  2A70               	goto	u1191
 11143  026F  2A71               	goto	u1190
 11144  0270                     u1191:
 11145  0270  2A76               	goto	l2926
 11146  0271                     u1190:
 11147  0271                     l2924:
 11148                           
 11149                           ;pwm1.c: 88: {;pwm1.c: 89: dutyValue <<= 6;
 11150  0271  3006               	movlw	6
 11151  0272                     u1205:
 11152  0272  35F0               	lslf	PWM1_LoadDutyValue@dutyValue,f
 11153  0273  0DF1               	rlf	PWM1_LoadDutyValue@dutyValue+1,f
 11154  0274  0B89               	decfsz	9,f
 11155  0275  2A72               	goto	u1205
 11156  0276                     l2926:
 11157                           
 11158                           ;pwm1.c: 90: CCPR1H = dutyValue >> 8;
 11159  0276  0871               	movf	PWM1_LoadDutyValue@dutyValue+1,w
 11160  0277  0092               	movwf	18	;volatile
 11161  0278                     l2928:
 11162                           
 11163                           ;pwm1.c: 91: CCPR1L = dutyValue;
 11164  0278  0870               	movf	PWM1_LoadDutyValue@dutyValue,w
 11165  0279  0091               	movwf	17	;volatile
 11166  027A                     l18:	
 11167                           ;pwm1.c: 92: }
 11168                           
 11169  027A  0008               	return
 11170  027B                     __end_of_PWM1_LoadDutyValue:
 11171  007E                     btemp	set	126	;btemp
 11172  007E                     wtemp0	set	126
 11173                           
 11174                           	psect	config
 11175                           
 11176                           ;Config register CONFIG1 @ 0x8007
 11177                           ;	Oscillator Selection Bits
 11178                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11179                           ;	Watchdog Timer Enable
 11180                           ;	WDTE = OFF, WDT disabled
 11181                           ;	Power-up Timer Enable
 11182                           ;	PWRTE = OFF, PWRT disabled
 11183                           ;	MCLR Pin Function Select
 11184                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11185                           ;	Flash Program Memory Code Protection
 11186                           ;	CP = OFF, Program memory code protection is disabled
 11187                           ;	Brown-out Reset Enable
 11188                           ;	BOREN = ON, Brown-out Reset enabled
 11189                           ;	Clock Out Enable
 11190                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11191                           ;	Internal/External Switchover Mode
 11192                           ;	IESO = ON, Internal/External Switchover Mode is enabled
 11193                           ;	Fail-Safe Clock Monitor Enable
 11194                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11195  8007                     	org	32775
 11196  8007  3FE4               	dw	16356
 11197                           
 11198                           ;Config register CONFIG2 @ 0x8008
 11199                           ;	Flash Memory Self-Write Protection
 11200                           ;	WRT = OFF, Write protection off
 11201                           ;	Peripheral Pin Select one-way control
 11202                           ;	PPS1WAY = ON, The PPSLOCK bit cannot be cleared once it is set by software
 11203                           ;	Zero-cross detect disable
 11204                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR
 11205                           ;	Phase Lock Loop enable
 11206                           ;	PLLEN = ON, 4x PLL is always enabled
 11207                           ;	Stack Overflow/Underflow Reset Enable
 11208                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11209                           ;	Brown-out Reset Voltage Selection
 11210                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11211                           ;	Low-Power Brown Out Reset
 11212                           ;	LPBOR = OFF, Low-Power BOR is disabled
 11213                           ;	Low-Voltage Programming Enable
 11214                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 11215  8008                     	org	32776
 11216  8008  1FFF               	dw	8191

Data Sizes:
    Strings     11
    Constant    98
    Data        32
    BSS         29
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      63
    BANK1            80      0      17
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$2010$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX$2015	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX$2010	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    I2C_MasterFsm$2009	const PTR FTN()enum E11990 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S842$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_1(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 12
		 -> Msg2(BANK0[12]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_str@ptr	PTR const unsigned char  size(1) Largest target is 17
		 -> Msg2(BANK0[12]), Msg1(BANK1[17]), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S1335$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E97 size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), Absolute function(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> lcd_cmd@tbuf(COMMON[2]), lcd_data@tbuf(COMMON[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> NULL(NULL[0]), 

    S842$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_cmd@tbuf(COMMON[2]), lcd_data@tbuf(COMMON[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> NULL(NULL[0]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> lcd_cmd@tbuf(COMMON[2]), lcd_data@tbuf(COMMON[2]), I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), 
		 -> I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@reg(COMMON[1]), I2C_Write1ByteRegister@data(COMMON[1]), 
		 -> I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), I2C_Read1ByteRegister@reg(COMMON[1]), I2C_Read1ByteRegister@returnValue(COMMON[1]), 
		 -> NULL(NULL[0]), 

    S842$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(COMMON[1]), NULL(NULL[0]), 

    S842$callbackTable	PTR FTN(PTR void ,)enum E97[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E97[6] size(2) Largest target is 1
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rd1RegCompleteHandler(), I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), 

    i2c_fsmStateTable	const PTR FTN()enum E11990[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 


Critical Paths under _main in COMMON

    _main->_lcd_cmd
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _lcd_str->_lcd_data
    _lcd_init->_lcd_cmd
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_DO_TX->_I2C_MasterSendTxData
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  256863
                                             17 BANK0      2     2      0
                 _PWM1_LoadDutyValue
                  _SYSTEM_Initialize
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             25    21      4    3108
                                              0 BANK0     17    13      4
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              2     2      0   84633
                                              0 BANK0      2     2      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             4     4      0   84396
                                             10 COMMON     4     4      0
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0   84440
                                              0 BANK0      2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              4     4      0   84440
                                             10 COMMON     4     4      0
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             3     3      0      46
                                              0 COMMON     3     3      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0   82684
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  3     3      0   82684
                                              7 COMMON     3     3      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C_Poller                                           0     0      0   82638
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        3     3      0   82638
                                              4 COMMON     3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      1     1      0   20637
                                              0 COMMON     1     1      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            3     3      0   20683
                                              1 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            1     1      0   20637
                                              0 COMMON     1     1      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  1     1      0   20637
                                              0 COMMON     1     1      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1    4070
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1    4070
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1    4357
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1    4070
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1    4070
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _I2C_SetDataCompleteCallback                          4     1      3    2478
                                              5 COMMON     4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetCallback                                     5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        4     2      2    1570
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            2     2      0      24
                                              0 COMMON     2     2      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _COG3_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM1_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _COG3_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM1_LoadDutyValue                                   2     0      2     242
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PWM1_LoadDutyValue
   _SYSTEM_Initialize
     _COG3_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM1_Initialize
     _TMR2_Initialize
     _WDT_Initialize
   _lcd_cmd
     _I2C_Close
       _I2C_MasterClearIrq
       _I2C_MasterClose
       _I2C_MasterDisableIrq
     _I2C_MasterWrite
       _I2C_MasterOperation
         _I2C_MasterStart
         _I2C_Poller
           _I2C_MasterFsm
             _I2C_DO_ADDRESS_NACK *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_IDLE *
             _I2C_DO_RCEN *
               _I2C_MasterStartRx
             _I2C_DO_RESET *
             _I2C_DO_RX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_MasterGetRxData *
               _I2C_MasterSendAck *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_RX_ACK *
               _I2C_MasterSendAck
             _I2C_DO_RX_NACK_RESTART *
               _I2C_MasterSendNack
             _I2C_DO_RX_NACK_STOP *
               _I2C_MasterSendNack
             _I2C_DO_SEND_ADR_READ *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_ADR_WRITE *
               _I2C_MasterSendTxData
             _I2C_DO_SEND_RESTART *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_RESTART_READ *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_RESTART_WRITE *
               _I2C_MasterEnableRestart
             _I2C_DO_SEND_STOP *
               _I2C_MasterStop
             _I2C_DO_TX *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_MasterIsNack *
               _I2C_MasterSendTxData *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_DO_TX_EMPTY *
               Absolute function(Fake) *
               _I2C_CallbackReturnReset *
               _I2C_CallbackReturnStop *
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_MasterSetIrq *
               _rd1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rd2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _rdBlkRegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr1RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
               _wr2RegCompleteHandler *
                 _I2C_SetBuffer
                 _I2C_SetDataCompleteCallback
                   _I2C_SetCallback
             _I2C_MasterClearIrq *
             _I2C_MasterIsNack *
           _I2C_MasterWaitForEvent
     _I2C_Open
       _I2C_MasterClearIrq
       _I2C_MasterOpen
     _I2C_SetBuffer
   _lcd_init
     _lcd_cmd
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_DO_TX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetBuffer
   _lcd_str
     _lcd_data
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_DO_TX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetBuffer
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           3E0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BIGRAM             3F0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITCOMMON            E      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
COMMON               E      E       E       3      100.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
STACK                0      0       0       4        0.0%
BANK0               50     13      3F       5       78.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK0            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      11       8       21.2%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
ABS                  0      0      5E      13        0.0%
BITBANK4            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK5            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK5               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK6            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK6               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITBANK7            50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BANK7               50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITBANK8            50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BANK8               50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITBANK9            50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BANK9               50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITBANK10           50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10              50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITBANK11           50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11              50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
DATA                 0      0      5E      30        0.0%
BITBANK12           30      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK12              30      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK13           50      0       0      33        0.0%
BANK13              50      0       0      34        0.0%
BITBANK14           50      0       0      35        0.0%
BANK14              50      0       0      36        0.0%
BITBANK15           50      0       0      37        0.0%
BANK15              50      0       0      38        0.0%
BITBANK16           50      0       0      39        0.0%
BANK16              50      0       0      40        0.0%
BITBANK17           50      0       0      41        0.0%
BANK17              50      0       0      42        0.0%
BITBANK18           50      0       0      43        0.0%
BANK18              50      0       0      44        0.0%
BITBANK19           50      0       0      45        0.0%
BANK19              50      0       0      46        0.0%
BITBANK20           50      0       0      47        0.0%
BANK20              50      0       0      48        0.0%
BITBANK21           50      0       0      49        0.0%
BANK21              50      0       0      50        0.0%
BITBANK22           50      0       0      51        0.0%
BANK22              50      0       0      52        0.0%
BITBANK23           50      0       0      53        0.0%
BANK23              50      0       0      54        0.0%
BITBANK24           50      0       0      55        0.0%
BANK24              50      0       0      56        0.0%
BITBANK25           20      0       0      57        0.0%
BANK25              20      0       0      58        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Jun 29 15:07:12 2022

              ??_I2C_DO_SEND_ADR_READ 0070           __size_of_I2C_MasterSendNack 0004  
                         lcd_cmd@tbuf 007B                    __size_of_I2C_Close 001C  
                        lcd_data@data 007B                          lcd_data@tbuf 007C  
             ??_I2C_DO_SEND_ADR_WRITE 0071                                    l13 019F  
                                  l18 027A                                    l48 01D3  
                 ___wmul@multiplicand 0072                   __size_of_I2C_Poller 000D  
               ??_I2C_DO_SEND_RESTART 0070          __size_of_I2C_MasterOperation 001E  
                                 l120 01A7                                   l123 01AB  
                                 l117 0290                                   l126 011C  
       __size_of_I2C_MasterSendTxData 0005                                   l405 0195  
                                 l413 02DC                                   l502 017A  
                                 l239 0339                                   l432 0200  
                                 l408 046B                                   l193 05A1  
                                 l601 0161                                   l425 015B  
                                 l409 046C                                   l435 01B8  
                                 l419 02FA                                   l452 0383  
                                 l604 0124                                   l508 03AA  
                                 l532 013D                                   l292 067B  
                                 l541 014C                                   l293 066B  
                                 l622 0106                                   l526 0133  
                                 l462 03FE                                   l607 0120  
                                 l471 0182                                   l535 0142  
                                 l631 0162                                   l544 0151  
                                 l288 064A                                   l625 0100  
                                 l561 00FB                                   l465 012E  
                                 l529 0138                                   l553 035D  
                                 l474 05D2                                   l490 0500  
                                 l538 0147                                   l458 01C5  
                                 l731 0244                                   l491 0520  
                                 l547 0156                                   l635 0167  
                                 l564 00FD                                   l580 0115  
                                 l628 0118                                   l468 018B  
                                 l725 0222                                   l477 05F5  
                                 l734 0211                                   l574 01E1  
                                 l583 0129                                   l487 05F4  
                                 l728 0233                                   l592 0112  
                                 l577 0103                                   l737 02A8  
                                 l586 010C                                   l595 0109  
                                 l771 04A6                                   l598 010F  
                                 l774 055F                                   l758 03D3  
                                 l783 02C0                                   l880 0741  
                                 l891 07DC                                   l895 0305  
                                 l897 0319                                   _PR2 0494  
                                 u800 01F7                                   u801 01F6  
                                 u810 05AA                                   u811 05A9  
                                 u820 05EB                                   u900 02EC  
                                 u821 05EA                                   u901 02EB  
                                 u830 04FB                                   u910 043B  
                                 u831 04FA                                   u911 043A  
                                 u920 02C8                                   u840 0167  
                                 u921 02C7                                   u841 0166  
                                 u930 01AB                                   u850 03DC  
                                 u931 01AA                                   u851 03DB  
                                 u860 03E4                                   u940 047C  
                                 u861 03E3                                   u941 047B  
                                 u790 0365                                   u870 01C5  
                                 u950 048F                                   u791 0364  
                                 u871 01C4                                   u951 048E  
                                 u880 01D9                                   u960 0494  
                                 u881 01D8                                   u961 0493  
                                 u890 02E5                                   u970 049A  
                                 u891 02E4                                   u971 0499  
                                 u980 03BD                                   u981 03BC  
                                 u990 03D0                                   u991 03CF  
              _I2C_MasterWaitForEvent 0162                       _TMR2_Initialize 01C6  
                                 wreg 0009              ??_I2C_CallbackReturnStop 007A  
                        _I2C_DO_RESET 0152               ??_rd2RegCompleteHandler 007A  
                                l1167 04E2                                  l1177 0432  
                                l2402 0121                                  l2410 0148  
                                l2420 013C                                  l2412 014B  
                                l2404 014D                                  l1348 0267  
                                l3300 074C                                  l2430 00FC  
                                l2510 05B3                                  l2502 05AB  
                                l2406 0150                                  l3310 0769  
                                l3302 0755                                  l2360 01F2  
                                l2416 0110                                  l2424 0116  
                                l2520 05E0                                  l2600 0341  
                                l3240 02AC                                  l3320 0789  
                                l3312 0773                                  l3304 0758  
                                l2370 010D                                  l2362 01F7  
                                l2354 035F                                  l2426 00FA  
                                l2434 0212                                  l2442 0223  
                                l2450 0234                                  l2522 05EB  
                                l2506 05AF                                  l2530 04ED  
                                l2418 0139                                  l2610 0349  
                                l3242 02B3                                  l3322 07B0  
                                l3314 0779                                  l3306 075E  
                                l3330 07D8                                  l3250 068D  
                                l2364 01FF                                  l2356 0365  
                                l2460 0209                                  l2436 021A  
                                l2444 022B                                  l2452 023C  
                                l2372 011D                                  l2524 05F0  
                                l2516 05B7                                  l2532 04F1  
                                l2380 012F                                  l2604 0345  
                                l2620 03E4                                  l3244 02B8  
                                l3324 07B7                                  l3316 0780  
                                l3308 0765                                  l3260 06AB  
                                l3252 0694                                  l3340 0604  
                                l2710 02D0                                  l2702 02C1  
                                l2358 0376                                  l2366 01AC  
                                l2462 0210                                  l2438 0221  
                                l2446 0232                                  l2454 0243  
                                l2374 015C                                  l2518 05D4  
                                l2542 0502                                  l2534 04FB  
                                l2382 0132                                  l2622 03E9  
                                l2614 03D4                                  l2630 01BD  
                                l3238 02AB                                  l3326 07BB  
                                l3318 0784                                  l3262 06BC  
                                l3270 06DB                                  l3254 0699  
                                l3246 0682                                  l3350 0616  
                                l3342 0606                                  l3334 05F6  
                                l2800 0327                                  l2472 00FE  
                                l2712 02D3                                  l2704 02C8  
                                l2624 0107                                  l2368 010A  
                                l2552 050A                                  l2536 04FE  
                                l2528 04E3                                  l2392 013E  
                                l2616 03D7                                  l2632 01C0  
                                l2720 0157                                  l2640 01DE  
                                l3280 0706                                  l3272 06F3  
                                l3264 06CB                                  l3256 069C  
                                l3248 0687                                  l3328 07C4  
                                l3360 063C                                  l3352 0623  
                                l3344 0609                                  l3336 05F9  
                                l2810 0335                                  l2802 032A  
                                l2730 01C9                                  l2714 02D6  
                                l2706 02C9                                  l2458 0201  
                                l2466 0291                                  l2378 0126  
                                l2570 038E                                  l2562 0384  
                                l2474 012A                                  l2482 0183  
                                l2490 017B                                  l2546 0506  
                                l2554 0174                                  l2386 0134  
                                l2394 0141                                  l2618 03DC  
                                l2626 01B9                                  l2650 02DE  
                                l2642 01E0                                  l2634 01D4  
                                l3282 070B                                  l3274 06FA  
                                l3266 06CF                                  l3258 06A8  
                                l3370 0663                                  l3362 0641  
                                l3354 0627                                  l3346 060D  
                                l3338 05FB                                  l2812 0336  
                                l2804 032C                                  l2740 018C  
                                l2724 0196                                  l2732 01CA  
                                l2708 02CD                                  l2716 02DB  
                                l2468 02A7                                  l2564 0387  
                                l2580 0394                                  l2476 012C  
                                l2484 0185                                  l2492 017D  
                                l2556 0176                                  l2388 0137  
                                l2628 01BA                                  l2660 02EF  
                                l2652 02E5                                  l2636 01D9  
                                l2820 047C                                  l2900 0405  
                                l3292 0727                                  l3276 06FE  
                                l3364 064C                                  l3372 0665  
                                l3356 062B                                  l3348 0611  
                                l2806 0333                                  l2742 0191  
                                l2750 0564                                  l2726 019D  
                                l2734 01CD                                  l2646 0104  
                                l2398 0113                                  l2574 0390  
                                l2478 012D                                  l2486 018A  
                                l2494 0181                                  l2558 0179  
                                l2582 0143                                  l2590 0154  
                                l2662 02F3                                  l2654 02E6  
                                l2638 01DD                                  l2670 0434  
                                l2830 049A                                  l2822 0484  
                                l2814 046E                                  l2910 041F  
                                l2902 0408                                  l3294 0731  
                                l3278 0702                                  l3374 066D  
                                l3366 0654                                  l3358 0637  
                                l2920 0268                                  l2808 0334  
                                l2744 0192                                  l2760 0570  
                                l2752 0567                                  l2736 01CE  
                                l2728 01C6                                  l2648 0101  
                                l2568 038B                                  l2584 0146  
                                l2592 0155                                  l2664 02F6  
                                l2656 02E7                                  l2680 044A  
                                l2672 043B                                  l2832 04A3  
                                l2824 0487                                  l2816 046F  
                                l2840 03C5                                  l2912 0423  
                                l2904 040D                                  l3296 0737  
                                l3288 070D                                  l3376 0675  
                                l3368 0659                                  l2922 026C  
                                l2746 0194                                  l2770 0578  
                                l2762 0572                                  l2754 0569  
                                l2738 01D0                                  l2498 05A2  
                                l2658 02EC                                  l2666 02F9  
                                l2690 045E                                  l2682 044F  
                                l2674 043F                                  l2826 048F  
                                l2818 0473                                  l2842 03C8  
                                l2834 03AC                                  l2914 0428  
                                l2906 0411                                  l2850 025E  
                                l3298 073D                                  l2924 0271  
                                l2780 01A0                                  l2772 0579  
                                l2764 0574                                  l2756 056B  
                                l2748 0560                                  l2588 0152  
                                l2596 033A                                  l2692 045F  
                                l2684 0450                                  l2676 0440  
                                l2828 0494                                  l2940 0532  
                                l2844 03D0                                  l2836 03B4  
                                l2908 0415                                  l2916 042E  
                                l2860 02FD                                  l2852 0264  
                                l2926 0276                                  l2790 031C  
                                l2782 01A5                                  l2774 057B  
                                l2766 0576                                  l2758 056D  
                                l2934 027B                                  l2598 033C  
                                l2694 0464                                  l2686 0455  
                                l2678 0441                                  l2950 0553  
                                l2942 0536                                  l2838 03BD  
                                l2862 0301                                  l2854 0266  
                                l2846 0257                                  l2928 0278  
                                l2792 031E                                  l2784 01A6  
                                l2776 057D                                  l2768 0577  
                                l2696 0467                                  l2688 0459  
                                l2952 0557                                  l2944 053A  
                                l2936 0521                                  l2880 04B7  
                                l2872 04A7                                  l2864 030A  
                                l2848 0258                                  l2794 0321  
                                l2778 057E                                  l2786 0119  
                                l2698 046A                                  l2954 055B  
                                l2946 053E                                  l2938 052E  
                                l2890 04D3                                  l2882 04BB  
                                l2874 04A9                                  l2866 030F  
                                l2858 02FB                                  l2796 0323  
                                l2788 031A                                  l2948 0542  
                                l2892 04D8                                  l2884 04BF  
                                l2876 04AF                                  l2868 0315  
                                l2798 0326                                  l2886 04CE  
                                l2878 04B2                                  l2894 04DE  
                                l2888 04D2                                  l2898 03FF  
                                STR_1 0862               __end_of_PWM1_Initialize 01A0  
                                u1000 025E                                  u1001 025D  
                                u1010 0264                                  u1011 0263  
                                u1100 04CE                                  u1020 0301  
                                u1101 04CD                                  u1021 0300  
                                u1120 04DE                                  _ICON 0800  
                                u1121 04DD                                  u1105 04CA  
                                u1130 0405                                  u1050 0315  
                                u1115 04D4                                  u1131 0404  
                                u1051 0314                                  u1035 0306  
                                u1060 04AF                                  u1205 0272  
                                u1061 04AE                                  u1045 030B  
                                u1150 0415                                  u1151 0414  
                                u1080 04BF                                  u1160 041F  
                                u1081 04BE                                  u1161 041E  
                                u1145 0409                                  u1075 04B3  
                                u1180 042E                                  u1181 042D  
                                u1165 041B                                  _LATA 010C  
                                u1190 0271                                  _LATB 010D  
                                u1191 0270                                  u1095 04C0  
                                u1175 0424                                  _LATC 010E  
                                u1600 0702                                  u1601 0701  
                                u1610 0726                                  u1611 0725  
                                u1700 07D8                                  u1620 0731  
                                u1701 07D7                                  u1621 0730  
                                u1630 0737                                  u1710 063C  
                                u1631 0736                                  u1615 0722  
                                u1711 063B                                  u1560 02C0  
                                u1640 073D                                  u1720 0641  
                                u1561 02BF                                  u1641 073C  
                                u1721 0640                                  u1650 074C  
                                u1570 068D                                  u1730 064A  
                                _T2PR 0494                                  u1651 074B  
                                u1571 068C                                  u1731 0649  
                                u1660 075E                                  u1580 06A8  
                                u1740 066B                                  u1661 075D  
                                u1581 06A7                                  u1741 066A  
                                u1670 0773                                  u1590 06DB  
                                u1807 054C                                  u1671 0772  
                                u1655 0748                                  u1591 06DA  
                                u1680 0779                                  u1817 049D  
                                u1681 0778                                  u1690 07C4  
                                u1827 04A4                                  u1691 07C3  
                                u1757 05FF                                  u1767 0631  
                                u1777 065D                                  u1787 03D1  
                                u1797 0527                                  _PLLR 04E6  
                                _TMR2 0493                                  _WPUA 020C  
                                _WPUB 020D                                  _WPUC 020E  
                                _WPUE 0210                                  _Flag 0052  
             ??_wr2RegCompleteHandler 007A                                  _Msg1 00A0  
                                _Msg2 0053                                  _Duty 0050  
                                _main 05F6              ?_I2C_CallbackReturnReset 0079  
                                fsr0h 0005                                  fsr1h 0007  
                                indf0 0000                                  fsr0l 0004  
                                indf1 0001                                  fsr1l 0006  
                    __end_of_I2C_Open 046D                                  btemp 007E  
                                start 0002      __size_of_rdBlkRegCompleteHandler 0018  
                    ?_I2C_MasterClose 0070        __size_of_OSCILLATOR_Initialize 000C  
                    ?_I2C_MasterStart 0070                         _I2C_DO_RX_ACK 0143  
                    ?_I2C_MasterWrite 0070         __end_of_OSCILLATOR_Initialize 01AC  
                               ?_main 0070                                 _T2CON 0495  
                               _T2HLT 0496                       __end_of___lwdiv 04E3  
                               _T2TMR 0493                                 _T2RST 0498  
                     __end_of___lwmod 0433          __size_of_I2C_DO_RX_NACK_STOP 0005  
                   ??_I2C_DO_TX_EMPTY 0070                                 _TRISA 008C  
                               _TRISB 008D                                 _TRISC 008E  
                               _TRISE 0090                       __end_of_lcd_cmd 04A7  
                   __end_of_I2C_DO_RX 0521                     __end_of_I2C_DO_TX 05F6  
             __end_of_COG3_Initialize 033A                       __end_of_lcd_str 02C1  
                     __end_of_dpowers 0862                        _WDT_Initialize 0119  
                   __end_of_I2C_Close 02DD                       __end_of_isdigit 0268  
              __size_of_I2C_MasterFsm 002B        I2C_MasterOperation@returnValue 0079  
             _I2C_MasterEnableRestart 010A                                 pclath 000A  
                    ?_I2C_SetCallback 0070                                 status 0003  
                               wtemp0 007E                       __end_of_sprintf 07DD  
                   ?_I2C_DO_SEND_STOP 0070                __size_of_I2C_SetBuffer 0010  
                  ??_I2C_DO_SEND_STOP 0070                          __end_of_ICON 0838  
                     __initialization 07DD                          __end_of_main 0680  
   __size_of_I2C_DO_SEND_RESTART_READ 0005             ?_I2C_DO_SEND_RESTART_READ 0070  
                      ?_I2C_DO_RX_ACK 0070               __end_of_TMR2_Initialize 01D4  
                      _I2C_DO_TX$1219 0072                                ??_main 004E  
                   ?_I2C_MasterIsNack 0070                          _COG3ASD0bits 081D  
                   ?_I2C_MasterSetIrq 0070                          _COG3CON0bits 0813  
                  ??_I2C_MasterIsNack 0070                __end_of_WDT_Initialize 011D  
                  ??_I2C_MasterSetIrq 0070       __end_of_I2C_CallbackReturnReset 00FE  
                              _CCPR1H 0292                                _CCPR1L 0291  
     __size_of_I2C_CallbackReturnStop 0002         I2C_SetDataCompleteCallback@cb 0075  
                              _ANSELA 018C                                _ANSELB 018D  
                              _ANSELC 018E                                _BORCON 009D  
                        ??_I2C_Poller 0077                                _RC0PPS 0EA0  
                              _RC1PPS 0EA1                                _RA6PPS 0E96  
                              _RA7PPS 0E97                                _RC3PPS 0EA3  
                              _RC4PPS 0EA4                      ?_PWM1_Initialize 0070  
                              _ODCONA 028C                                _ODCONB 028D  
                              _ODCONC 028E                                _INLVLA 038C  
                              _INLVLB 038D                                _INLVLC 038E  
                              _OSCCON 009B                                _WDTCON 0099  
                 _I2C_MasterGetRxData 0113                      __end_of_lcd_data 03D4  
                        _CCPTMRS1bits 029E                      __end_of_lcd_init 0560  
                              ___wmul 02FB                         _I2C_MasterFsm 03D4  
                           ??___lwdiv 0074                             ??___lwmod 007C  
                   I2C_SetCallback@cb 0070               __size_of_I2C_MasterOpen 000E  
             __size_of_I2C_MasterStop 0003               __size_of_I2C_Initialize 000A  
                       _I2C_SetBuffer 01F1                             ??_lcd_cmd 007A  
                  __end_of_I2C_Poller 01C6                             ??_lcd_str 003D  
        __end_of_I2C_MasterDisableIrq 0107                   _I2C_DO_ADDRESS_NACK 033A  
                           ??_isdigit 0070                  ?_I2C_MasterGetRxData 0070  
                           ?_I2C_Open 0070                       ?_WDT_Initialize 0070  
           ??_I2C_MasterEnableRestart 0070                      ?_COG3_Initialize 0070  
                           ??_sprintf 0041                     _SYSTEM_Initialize 027B  
             __end_of__initialization 07FD                   _I2C_MasterOperation 02DD  
                  ?_SYSTEM_Initialize 0070                  ?_I2C_DO_ADDRESS_NACK 0070  
         PWM1_LoadDutyValue@dutyValue 0070               _rdBlkRegCompleteHandler 0291  
                      __pcstackCOMMON 0070                        ?_I2C_MasterFsm 0070  
                     ??_I2C_DO_RX_ACK 0070                          __pidataBANK0 01E2  
                        __pidataBANK1 0245                _I2C_CallbackReturnStop 00FA  
                 ??_SYSTEM_Initialize 0070                    _PWM1_LoadDutyValue 0268  
                    ?_TMR2_Initialize 0070                        ?_I2C_SetBuffer 0070  
             ?_I2C_MasterWaitForEvent 0070        __size_of_I2C_DO_SEND_ADR_WRITE 0008  
  __size_of_I2C_DO_SEND_RESTART_WRITE 0005         __end_of_I2C_DO_SEND_ADR_WRITE 0183  
          ?_I2C_DO_SEND_RESTART_WRITE 0070                  ?_I2C_MasterOperation 0070  
               ??_I2C_MasterGetRxData 0070                        _OPTION_REGbits 0097  
                          ??_I2C_Open 0070                   ?_PWM1_LoadDutyValue 0070  
          __end_of_I2C_MasterClearIrq 0101             __end_of_SYSTEM_Initialize 0291  
                        sprintf@width 004A                     _I2C_MasterSendAck 0121  
                          __pbssBANK0 0020                         ??_I2C_DO_IDLE 0070  
      __size_of_rd2RegCompleteHandler 0011                         ??_I2C_DO_RCEN 0070  
       __end_of_rd2RegCompleteHandler 0234          __end_of_I2C_MasterSendTxData 012A  
                  ?_I2C_MasterSendAck 0070                     _I2C_MasterStartRx 0110  
      __size_of_wr2RegCompleteHandler 0011                 ??_I2C_DO_ADDRESS_NACK 0070  
       __end_of_wr2RegCompleteHandler 0212                   _I2C_DO_RX_NACK_STOP 0148  
               _rd1RegCompleteHandler 0212                    ?_I2C_MasterStartRx 0070  
                ??_PWM1_LoadDutyValue 0072            __end_of_I2C_MasterSendNack 0121  
               _wr1RegCompleteHandler 0234                            __pmaintext 05F6  
                 ??_I2C_MasterSendAck 0070              rd1RegCompleteHandler@ptr 0079  
         __end_of_I2C_DO_SEND_RESTART 013E                       _I2C_DO_TX_EMPTY 0384  
                 I2C_SetBuffer@buffer 0073                               ?___wmul 0070  
      __end_of_I2C_MasterWaitForEvent 0168                   ??_I2C_MasterStartRx 0070  
       __size_of_I2C_DO_SEND_ADR_READ 0009                               _CCP1CON 0293  
    __size_of_I2C_CallbackReturnReset 0002                               _COG3DBF 0812  
                             _COG3DBR 0811                               _COG3PHF 080E  
                             _COG3PHR 080D                 ??_I2C_MasterOperation 0077  
                             _COG3STR 081F        I2C_SetDataCompleteCallback@ptr 0077  
            ??_I2C_DO_RX_NACK_RESTART 0070     __end_of_I2C_DO_SEND_RESTART_WRITE 0139  
                ?_I2C_DO_RX_NACK_STOP 0070                               _OSCSTAT 009C  
           __end_of_I2C_MasterSendAck 0125                               _OSCTUNE 009A  
                             _SSP1ADD 0212                               _SLRCONA 030C  
                             _SLRCONB 030D                               _SLRCONC 030E  
                             _SSP1BUF 0211                             ?_lcd_data 0070  
                           ?_lcd_init 0070             __end_of_I2C_MasterStartRx 0113  
                I2C_Close@returnValue 0071          ?_I2C_SetDataCompleteCallback 0075  
                           _I2C_DO_RX 04E3                             _I2C_DO_TX 05A2  
    __end_of_I2C_DO_SEND_RESTART_READ 0134                             _I2C_Close 02C1  
           ??_rdBlkRegCompleteHandler 007A                  _I2C_MasterDisableIrq 0104  
                     ??_I2C_MasterFsm 0074                             _COG3FSIM0 081B  
                           _COG3FSIM1 081C                             _COG3RSIM0 0817  
                           _COG3RSIM1 0818                   __end_of_I2C_DO_IDLE 012F  
                 __end_of_I2C_DO_RCEN 017B                       ??_I2C_SetBuffer 0072  
                     __size_of___wmul 001F                               ___lwdiv 04A7  
                             ___lwmod 03FF               I2C_SetBuffer@bufferSize 0070  
                      _I2C_MasterOpen 01D4                        _I2C_MasterStop 010D  
                      _I2C_Initialize 018C             __size_of_I2C_DO_SEND_STOP 0005  
                             __ptext1 0680                               __ptext2 0256  
                             __ptext3 02FB                               __ptext4 03FF  
                             __ptext5 04A7                               __ptext6 02A9  
                             __ptext7 03AB                               __ptext8 0521  
                             __ptext9 046D                               _lcd_cmd 046D  
               ??_I2C_DO_RX_NACK_STOP 0070                               _lcd_str 02A9  
                             _dpowers 0858                 _OSCILLATOR_Initialize 01A0  
                           _T2CONbits 0495                               _isdigit 0256  
                  I2C_SetCallback@idx 0074              __size_of_I2C_MasterClose 0003  
            ??_PIN_MANAGER_Initialize 0070         I2C_CallbackReturnReset@funPtr 0079  
                           _T2HLTbits 0496                    I2C_SetCallback@ptr 0072  
            wr1RegCompleteHandler@ptr 0079              __size_of_I2C_MasterStart 0003  
            __size_of_I2C_MasterWrite 0005                            ??_lcd_data 007A  
          __size_of_SYSTEM_Initialize 0016                               _sprintf 0680  
                             clrloop0 0169                            ??_lcd_init 003D  
                end_of_initialization 07FD                             _T2RSTbits 0498  
                          ?_I2C_DO_RX 0070                            ?_I2C_DO_TX 0070  
           __size_of_I2C_MasterIsNack 0006                               init_ram 016E  
                          ?_I2C_Close 0070                ?_rd1RegCompleteHandler 0079  
                             initloop 016F               __end_of_I2C_DO_TX_EMPTY 03AB  
           __size_of_I2C_MasterSetIrq 0003                 ?_I2C_MasterDisableIrq 0070  
              ?_wr1RegCompleteHandler 0079              __size_of_I2C_SetCallback 0026  
              __end_of_I2C_MasterOpen 01E2                __end_of_I2C_MasterStop 0110  
              __end_of_I2C_Initialize 0196                      ??_WDT_Initialize 0070  
                           _PORTBbits 000D       __end_of_rdBlkRegCompleteHandler 02A9  
                _I2C_MasterSendTxData 0125                             _SSPDATPPS 0E3B  
     __size_of_I2C_DO_RX_NACK_RESTART 0005                             _SSPCLKPPS 0E3A  
                          lcd_cmd@cmd 007D            __size_of_I2C_MasterSendAck 0004  
                   __size_of_I2C_Open 003A            __size_of_I2C_MasterStartRx 0003  
                         _I2C_DO_IDLE 012A                           _I2C_DO_RCEN 0174  
          rdBlkRegCompleteHandler@ptr 0079                           _CCP1CONbits 0293  
                          lcd_str@ptr 003E               ?_I2C_CallbackReturnStop 0079  
            _I2C_DO_SEND_RESTART_READ 012F              __size_of_PWM1_Initialize 000A  
        I2C_CallbackReturnStop@funPtr 0079                       ?_I2C_MasterOpen 0070  
                     ?_I2C_MasterStop 0070                       ?_I2C_Initialize 0070  
             _I2C_CallbackReturnReset 00FC                        __end_of___wmul 031A  
__size_of_I2C_SetDataCompleteCallback 000D                 ?_I2C_MasterSendTxData 0070  
              ?_OSCILLATOR_Initialize 0070           ??_I2C_DO_SEND_RESTART_WRITE 0070  
                 start_initialization 07DD       __size_of_PIN_MANAGER_Initialize 0042  
                       ?_I2C_DO_RESET 0070                           ??_I2C_DO_RX 0070  
                         ??_I2C_DO_TX 0071                     ??_I2C_MasterClose 0070  
              ??_I2C_MasterDisableIrq 0070                           ??_I2C_Close 0070  
                   ??_I2C_MasterStart 0070                     ??_I2C_MasterWrite 007A  
      __end_of_I2C_CallbackReturnStop 00FC                _I2C_DO_RX_NACK_RESTART 014D  
                    ?_I2C_DO_TX_EMPTY 0070              __size_of_COG3_Initialize 0020  
                  _I2C_MasterClearIrq 00FE                              ??___wmul 0074  
                 ?_I2C_MasterClearIrq 0070           __end_of_I2C_MasterGetRxData 0116  
                         __pdataBANK0 0050                           __pdataBANK1 00A0  
               __end_of_I2C_DO_RX_ACK 0148                      _I2C_DO_SEND_STOP 013E  
                   ??_I2C_SetCallback 0073                   I2C_Open@returnValue 0072  
                  _I2C_MasterSendNack 011D              ?_I2C_MasterEnableRestart 0070  
                   _i2c_fsmStateTable 0838                 _I2C_DO_SEND_ADR_WRITE 017B  
                           ___latbits 0003                         __pcstackBANK0 003D  
                      ??_I2C_DO_RESET 0070              __size_of_TMR2_Initialize 000E  
                 ?_I2C_MasterSendNack 0070                          _isdigit$1766 0070  
        __end_of_I2C_DO_SEND_ADR_READ 018C                  ??_I2C_MasterClearIrq 0070  
         __end_of_I2C_DO_ADDRESS_NACK 035E                     __size_of_lcd_data 0029  
                    _I2C_MasterIsNack 015C                     __size_of_lcd_init 003F  
           _I2C_DO_SEND_RESTART_WRITE 0134                           sprintf@flag 0047  
                         sprintf@prec 0046                      _I2C_MasterSetIrq 0116  
               _rd2RegCompleteHandler 0223           __size_of_PWM1_LoadDutyValue 0013  
                    ___lwdiv@dividend 0072                _PIN_MANAGER_Initialize 0560  
               _wr2RegCompleteHandler 0201             ??_I2C_CallbackReturnReset 007A  
         __end_of_I2C_MasterOperation 02FB                  ??_I2C_MasterSendNack 0070  
            rd2RegCompleteHandler@ptr 0079                              ?___lwdiv 0070  
                            ?___lwmod 0078                ??_I2C_MasterSendTxData 0070  
           __end_of_i2c_fsmStateTable 0858                     ??_PWM1_Initialize 0070  
                            ?_lcd_cmd 0070                              ?_lcd_str 003D  
        __size_of_I2C_DO_SEND_RESTART 0005                              ?_isdigit 0070  
             I2C_MasterOperation@read 0078                              _I2C_Open 0433  
                            _COG3ASD0 081D                              _COG3ASD1 081E  
                            _COG3BLKF 0810                              _COG3CON0 0813  
                            _COG3CON1 0814                              _COG3BLKR 080F  
                            _COG3FIS0 0819                              _COG3FIS1 081A  
                            _COG3RIS0 0815                              _COG3RIS1 0816  
                    ___lwdiv@quotient 0075                              ?_sprintf 003D  
                            _T2CLKCON 0497               ??_rd1RegCompleteHandler 007A  
             ??_wr1RegCompleteHandler 007A                        ___wmul@product 0074  
                            _LATBbits 010D                             clear_ram0 0168  
                            _PIE1bits 0091                              _PIR1bits 0011  
                            _PIR2bits 0012                 __end_of_I2C_MasterFsm 03FF  
         __end_of_I2C_DO_RX_NACK_STOP 014D                              _SSP1CON1 0215  
                            _SSP1CON2 0216                     ??_COG3_Initialize 0070  
     __end_of_I2C_MasterEnableRestart 010D                              _SSP1STAT 0214  
               __end_of_I2C_SetBuffer 0201                     ___wmul@multiplier 0070  
              ?_I2C_DO_SEND_ADR_WRITE 0070              I2C_MasterSendTxData@data 0070  
            wr2RegCompleteHandler@ptr 0079            ??_I2C_DO_SEND_RESTART_READ 0070  
            ?_rdBlkRegCompleteHandler 0079                            _I2C_Poller 01B9  
                          _I2C_Status 0020                          ?_I2C_DO_IDLE 0070  
                        ?_I2C_DO_RCEN 0070                     ??_TMR2_Initialize 0070  
              ?_rd2RegCompleteHandler 0079                      ??_I2C_MasterOpen 0070  
              ?_wr2RegCompleteHandler 0079                      ??_I2C_MasterStop 0070  
            ??_I2C_MasterWaitForEvent 0070                      ??_I2C_Initialize 0070  
                __end_of_I2C_DO_RESET 0157               ??_OSCILLATOR_Initialize 0070  
                _I2C_DO_SEND_ADR_READ 0183                      __size_of___lwdiv 003C  
                    __size_of___lwmod 0034                      __size_of_lcd_cmd 003A  
                     _I2C_MasterClose 0101                      __size_of_lcd_str 0018  
                          sprintf@val 0048                       I2C_Open@address 0071  
                     _I2C_MasterStart 0107                       _I2C_MasterWrite 0157  
                    __size_of_isdigit 0012                       ___lwdiv@divisor 0070  
                     ___lwdiv@counter 0077                              __ptext10 0433  
                            __ptext11 01D4                              __ptext20 0148  
                            __ptext12 0157                              __ptext21 0143  
                            __ptext13 02DD                              __ptext30 0183  
                            __ptext22 013E                              __ptext14 01B9  
                            __ptext31 012A                              __ptext23 0139  
                            __ptext15 0162                              __ptext40 0291  
                            __ptext32 0384                              __ptext24 0134  
                            __ptext16 03D4                              __ptext41 0234  
                            __ptext33 0116                              __ptext25 012F  
                            __ptext17 033A                              __ptext50 010D  
                            __ptext42 0223                              __ptext34 015C  
                            __ptext26 0174                              __ptext18 0152  
                            __ptext51 010A                              __ptext43 0212  
                            __ptext35 0125                              __ptext27 04E3  
                            __ptext19 014D                              __ptext60 0196  
                            __ptext52 0107                              __ptext44 00FC  
                            __ptext36 0121                              __ptext28 05A2  
                            __ptext61 0560                              __ptext53 02C1  
                            __ptext45 00FA                              __ptext37 0113  
                            __ptext29 017B                              __ptext62 01A0  
                            __ptext54 0104                              __ptext46 0201  
                            __ptext38 011D                              __ptext63 018C  
                            __ptext55 0101                              __ptext47 01AC  
                            __ptext39 0110                              __ptext64 031A  
                            __ptext56 00FE                              __ptext48 035E  
                            __ptext65 0268                              __ptext57 027B  
                            __ptext49 01F1                              __ptext58 0119  
                            __ptext59 01C6                          _SSP1CON1bits 0215  
                        _SSP1CON2bits 0216                              _lcd_data 03AB  
                            _lcd_init 0521   __end_of_I2C_SetDataCompleteCallback 01B9  
         _I2C_SetDataCompleteCallback 01AC               ?_I2C_DO_RX_NACK_RESTART 0070  
                    __size_of_sprintf 015D              __end_of_I2C_DO_SEND_STOP 0143  
                       __size_of_main 008A                       _I2C_SetCallback 035E  
       ??_I2C_SetDataCompleteCallback 0078                 ?_I2C_DO_SEND_ADR_READ 0070  
                        _SSP1STATbits 0214              __end_of_I2C_MasterIsNack 0162  
            __end_of_I2C_MasterSetIrq 0119                              isdigit@c 0071  
      __end_of_I2C_DO_RX_NACK_RESTART 0152               __size_of_WDT_Initialize 0004  
                         ?_I2C_Poller 0070                             sprintf@ap 0045  
                           sprintf@sp 004C      __size_of_I2C_MasterEnableRestart 0003  
                    ___lwmod@dividend 007A               ?_PIN_MANAGER_Initialize 0070  
                 _I2C_DO_SEND_RESTART 0139         __size_of_I2C_MasterDisableIrq 0003  
                     _PWM1_Initialize 0196       __size_of_I2C_MasterWaitForEvent 0006  
             __end_of_I2C_MasterClose 0104              __size_of_I2C_DO_TX_EMPTY 0027  
             __end_of_I2C_MasterStart 010A               __end_of_I2C_MasterWrite 015C  
                       __pstringtext1 0800                         __pstringtext2 0838  
                       __pstringtext3 0858                         __pstringtext4 0000  
                ?_I2C_DO_SEND_RESTART 0070                              sprintf@c 004D  
                            sprintf@f 003D                       ___lwmod@divisor 0078  
        __size_of_I2C_MasterGetRxData 0003                       ___lwmod@counter 007D  
         __size_of_I2C_MasterClearIrq 0003               __end_of_I2C_SetCallback 0384  
      __end_of_PIN_MANAGER_Initialize 05A2        __size_of_rd1RegCompleteHandler 0011  
       __end_of_rd1RegCompleteHandler 0223                __size_of_I2C_DO_RX_ACK 0005  
                     _COG3_Initialize 031A            __end_of_PWM1_LoadDutyValue 027B  
      __size_of_wr1RegCompleteHandler 0011                 __size_of_I2C_DO_RESET 0005  
       __end_of_wr1RegCompleteHandler 0245          __size_of_I2C_DO_ADDRESS_NACK 0024  
                __size_of_I2C_DO_IDLE 0005                  __size_of_I2C_DO_RCEN 0007  
                  __size_of_I2C_DO_RX 003E                    __size_of_I2C_DO_TX 0054  
